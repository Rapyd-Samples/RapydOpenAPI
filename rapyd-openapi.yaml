openapi: 3.0.0
info:
  title: Rapyd API
  description: "This is a Beta release of the OpenAPI specification for Rapyd's API\
    \ methods. It is recommended to initially run the methods in the sandbox environment.\
    \ For the most uptodate documentation of Rapyd's methods, see the [online API\
    \ Reference](https://docs.rapyd.net/en/index-en.html)."
  contact:
    email: rapyd_support@rapyd.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.9
servers:
- url: https://sandboxapi.rapyd.net/
  description: Sandbox server
- url: https://api.rapyd.net/
  description: Production server
paths:
  /v1/account/transfer:
    post:
      tags:
      - eWallets
      summary: Transfer Funds Between Wallets
      description: Transfer funds between Rapyd Wallets.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/transfer-funds-between-wallets.html
      operationId: fundsTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_transfer_body'
        required: true
      responses:
        "200":
          description: Transaction properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /v1/account/transfer/response:
    post:
      tags:
      - eWallets
      summary: Set Transfer Response
      description: Respond to a funds transfer between wallets. The transferee uses
        this method to accept or decline the transfer.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-transfer-response.html
      operationId: setFundsTransferResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transfer_response_body'
        required: true
      responses:
        "200":
          description: Transaction properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /v1/ewallets/{ewalletId}/contacts:
    get:
      tags:
      - eWallets
      summary: List Contacts for a Rapyd Wallet
      description: Retrieve all contacts for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-contacts-for-a-rapyd-wallet.html
      operationId: getEwalletContacts
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - eWallets
      summary: Add Contact to Wallet
      description: Add a personal contact to a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/add-contact-to-wallet.html
      operationId: createEwalletContact
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ewalletId_contacts_body'
        required: true
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
  /v1/ewallets/{ewalletId}/contacts/{contactId}:
    get:
      tags:
      - eWallets
      summary: Retrieve Wallet Contact.
      description: Retrieve a contact for an existing Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet-contact.html
      operationId: getEwalletContact
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: One of two values. either ID of the contact - String starting
          with the prefix **cont_** or Contact reference ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Retrieve a contact for an existing Rapyd Wallet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
    post:
      tags:
      - eWallets
      summary: Update Wallet Contact
      description: Update a contact for a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet-contact.html#update-wallet-contact
      operationId: updateEwalletContact
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with the prefix **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        "200":
          description: Retrieve a contact for an existing Rapyd Wallet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_3'
    delete:
      tags:
      - eWallets
      summary: Delete Wallet Contact
      description: Delete a personal contact from a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-wallet-contact.html
      operationId: deleteEwalletContact
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with the prefix **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Retrieve a contact for an existing Rapyd Wallet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_4'
  /v1/ewallets/{ewalletId}/contacts/{contactId}/compliance_levels:
    get:
      tags:
      - eWallets
      summary: Get the compliance status of a personal contact.
      description: Verify the compliance status of a personal contact.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet-contact.html#update-wallet-contact
      operationId: getEwalletContactComplianceLevels
      parameters:
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Verify the compliance status of a personal contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_5'
  /v1/virtual_accounts:
    post:
      tags:
      - Virtual Accounts
      summary: Issue Virtual Account Number to Wallet
      description: Issue a virtual account number to an existing wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/issue-virtual-account-to-wallet.html
      operationId: createVirtualAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_virtual_accounts_body'
        required: true
      responses:
        "200":
          description: Virtual Accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
  /v1/virtual_accounts/transactions:
    post:
      tags:
      - Virtual Accounts
      summary: Simulate a Bank Transfer to a Wallet
      description: Simulate a deposit to a virtual account number that was issued
        to a wallet. This method is relevant only for testing in the sandbox. The
        currency of the transfer must be supported by the specific virtual account.
        This method triggers the Deposit Completed webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-bank-transfer-to-a-virtual-account.html
      operationId: simulateBankTransferToVirtualAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtual_accounts_transactions_body'
        required: true
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
  /v1/virtual_accounts/{virtualAccountId}:
    get:
      tags:
      - Virtual Accounts
      summary: Retrieve Virtual Account History
      description: Retrieve a Virtual Account Number object for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-history.html
      operationId: retrieveVirtualAccount
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Virtual Accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
    post:
      tags:
      - Virtual Accounts
      description: Update Receiving Currency
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-requested-currency.html
      operationId: updateIssuingByRapydToken
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtual_accounts_virtualAccountId_body'
        required: true
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
    delete:
      tags:
      - Virtual Accounts
      summary: Close VA
      description: Delete a virtual account number of an existing wallet. In order
        to close a virtual account its status must be ACT.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-history.html
      operationId: closeIssuing
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the virtual account. String starting with issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Virtual Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
  /v1/virtual_accounts/{virtualAccountId}/transactions/{transactionId}:
    get:
      tags:
      - Virtual Accounts
      summary: Retrieve Virtual Account Transaction
      description: Retrieve a virtual account transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-transaction.html
      operationId: retrieveVirtualAccountTransaction
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      - name: transactionId
        in: path
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: isutran_59599bcba9ab9c79113f88cade1ed655
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
  /v1/payout_methods/{pomt}/required_fields:
    get:
      tags:
      - Disburse
      summary: Get Payout Required Fields
      description: |-
        Retrieve the fields required to use a payout method type. The fields are returned as an array of objects. The name of each field appears in the name field of each object. Use this information for Create Payout, Create Beneficiary and Create Sender.
         Note: The fields returned by this method are required when you create a payout. If you create a payout with a sender or beneficiary that was created previously, you are responsible for choosing a sender and beneficiary that have all the fields required by the payout method.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/payout-method-type.html
      operationId: getPayoutMethodTypesDetails
      parameters:
      - name: pomt
        in: path
        description: The type of the payout method. Set to the name of a payout method
          listed in the response to List Payout Method Types. The two-letter prefix
          must match the beneficiary country code.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: us_visa_card
      - name: beneficiary_country
        in: query
        description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
          Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: beneficiary_entity_type
        in: query
        description: "Type of entity for the beneficiary. One of the following, **individual**\
          \ | **company**"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: company
      - name: payout_amount
        in: query
        description: "Amount of the payout, in units of the currency that the beneficiary\
          \ is receiving. Decimal."
        required: true
        style: form
        explode: true
        schema:
          type: number
      - name: payout_currency
        in: query
        description: Currency received by the beneficiary. Three-letter ISO 4217 code.
          Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_country
        in: query
        description: Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: sender_currency
        in: query
        description: Currency that the sender is paying with. Three-letter ISO 4217
          code. Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_entity_type
        in: query
        description: "Type of entity for the sender. One of the following: **individual**\
          \ | **company**"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: company
      responses:
        "200":
          description: payout method types details fetched successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "500":
          description: Internal server error.
  /v1/payouts:
    get:
      tags:
      - Disburse
      summary: List Payouts
      description: Retrieve a list of payouts that you created.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payouts.html
      operationId: listPayouts
      parameters:
      - name: beneficiary
        in: query
        description: Filters according to the beneficiary ID. String starting with
          **beneficiary_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: beneficiary_504f2e8d5618dfaa4a6e73c632f3029b
      - name: created_after
        in: query
        description: The ID of the payout created before the first payout you want
          to retrieve. String starting with **payout_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_before
        in: query
        description: The ID of the payout created after the last payout you want to
          retrieve. String starting with **payout_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: ending_before
        in: query
        description: The ID of a payout in the list. The list ends with the payout
          that was created before the payout with this ID. Use this filter to get
          the previous page of results. String starting with **payout_**. Deprecated.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: ewallet
        in: query
        description: Filters according to the wallet ID. String starting with **ewallet_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ewallet_61be0e6ad9f57121cff47a63902282ac
      - name: limit
        in: query
        description: "The maximum number of payouts to return. Range: 1-100. Default\
          \ is 10."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "2"
      - name: merchant_reference_id
        in: query
        description: Filters according to the merchant reference ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: payout_method_type
        in: query
        description: Filters according to the type of payout method. The two-letter
          prefix must match the beneficiary country code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ph_cebuana_lhuillier_cash
      - name: sender
        in: query
        description: Filters according to the sender ID. String starting with **sender_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: sender_ba47352b13411b7fc9d6654b953de832
      - name: sender_country
        in: query
        description: Filters according to the country of the sender. Two-letter ISO
          3166-1 ALPHA-2 code.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Country'
        example: PH
      - name: sender_currency
        in: query
        description: Filters according to the currency that the sender is paying with.
          Three-letter ISO 4217 code.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Currency'
        example: PHP
      - name: starting_after
        in: query
        description: The ID of a payout in the list. The list begins with the payout
          that was created next after the payout with this ID. Use this filter to
          get the next page of results. Relevant when ending_before is not used. String
          starting **payout_**. Deprecated
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: Payouts Fetched Successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "500":
          description: Internal server error
    post:
      tags:
      - Disburse
      summary: Create Payout
      description: |-
        Create a payout (disbursement).
        This method triggers the Payout Created webhook. This webhook contains the same information as the response. If the action of a third party is not required, the Payout Completed webhook is also triggered.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-payout.html
      operationId: createPayout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_payouts_body'
        required: true
      responses:
        "200":
          description: payout created successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "500":
          description: Internal server error
  /v1/payouts/beneficiary:
    post:
      tags:
      - Disburse
      summary: Create Beneficiary
      description: |-
        Create a beneficiary for use in payouts.
        The response provides a unique beneficiary ID, which you can use in place of the Beneficiary object for Create Payout.
        This method triggers the Beneficiary Created webhook. This webhook contains the same information as the response.
        Note: In addition to the required fields documented below, you must include all other beneficiary fields listed in the response to Get Payout Required Fields, and you must conform to the regex provided.
        To create a beneficiary that you can use with multiple payout methods, include all fields that are required by each payout method.
        The client is responsible for including all required fields.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-beneficiary.html#create-beneficiary
      operationId: createBeneficiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payouts_beneficiary_body'
        required: true
      responses:
        "200":
          description: Beneficiary Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Internal server error
  /v1/payouts/extended_beneficiary:
    post:
      tags:
      - Disburse
      summary: Create Extended Beneficiary
      description: "Create a beneficiary that includes all compliance related data\
        \ for payouts. The response provides a unique beneficiary ID, which you can\
        \ use in place of the beneficiary object for Create Payout"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-extended-beneficiary.html
      operationId: createExtendedBeneficiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payouts_extended_beneficiary_body'
        required: true
      responses:
        "200":
          description: Beneficiary Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Internal server error
  /v1/payouts/beneficiary/validate:
    post:
      tags:
      - Disburse
      summary: Validate Beneficiary
      description: "Validate the format of the details for a payout beneficiary. You\
        \ can validate a beneficiary multiple times for different payout methods.\
        \ You can enter a Beneficiary object or a previously created beneficiary ID.\
        \ \n Note: In addition to the required fields for Create Beneficiary, the\
        \ Beneficiary object must include all required fields for the beneficiary\
        \ listed in the response to Get Payout Required Fields. The examples include\
        \ additional fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/validate-beneficiary.html#validate-beneficiary
      operationId: validateBeneficiary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/beneficiary_validate_body'
        required: true
      responses:
        "200":
          description: Beneficiary validated successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        "500":
          description: Internal server error.
  /v1/payouts/beneficiary/{beneficiaryId}:
    get:
      tags:
      - Disburse
      summary: Retrieve Beneficiary
      description: "Retrieve details of a payout beneficiary. \n Note: The 'Retrieve\
        \ Beneficiary - individual' response includes additional fields for the 'ca_general_bank'\
        \ payout method. The 'Retrieve Beneficiary - company' response includes additional\
        \ fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-beneficiary.html
      operationId: getBeneficiary
      parameters:
      - name: beneficiaryId
        in: path
        description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
      responses:
        "200":
          description: Beneficiary retrieved successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "500":
          description: Internal server error.
    delete:
      tags:
      - Disburse
      summary: Delete Beneficiary
      description: Delete a payout beneficiary from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-beneficiary.html
      operationId: deleteBeneficiary
      parameters:
      - name: beneficiaryId
        in: path
        description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
      responses:
        "200":
          description: Beneficiary deleted successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        "500":
          description: Internal server error.
  /v1/payouts/complete/{payoutToken}/{amount}:
    post:
      tags:
      - Disburse
      summary: Complete the Payout
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/complete-payout.html#complete-payout
      operationId: simulateCompletePayout
      parameters:
      - name: payoutToken
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      - name: amount
        in: path
        description: "The payout amount. Decimal, including the correct number of\
          \ decimal places for the currency exponent, as defined in ISO 2417:2015."
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: The `Retrieve Sender - individual` response includes additional
            fields for the `ca_general_bank` payout method. The `Retrieve Sender -
            company` response includes an additional field for the `us_ach_bank` payout
            method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "500":
          description: Internal server error.
  /v1/payouts/confirm/{payoutToken}:
    post:
      tags:
      - Disburse
      summary: Confirm Payout that involves foreign exchange
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/confirm-payout-with-fx.html
      operationId: confirmPayout
      parameters:
      - name: payoutToken
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: The `Retrieve Sender - individual` response includes additional
            fields for the `ca_general_bank` payout method. The `Retrieve Sender -
            company` response includes an additional field for the `us_ach_bank` payout
            method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: Bad Request. Payout not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_6'
        "500":
          description: Internal server error.
  /v1/payouts/sender:
    post:
      tags:
      - Disburse
      summary: Create Sender
      description: |-
        Create a sender for use in payouts.
        The response provides a unique sender ID, which you can use in place of the sender object for Create Payout.
        Note: In addition to the required fields documented below, you must include all other sender fields listed in the response to Get Payout Required Fields, and you must conform to the regex provided.
        To create a sender that you can use with multiple payout methods, include all fields that are required by each payout method.
        The client is responsible for including all required fields.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-sender.html
      operationId: createSender
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payouts_sender_body'
        required: true
      responses:
        "200":
          description: Sender Created Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "500":
          description: Internal server error
  /v1/payouts/sender/{senderId}:
    get:
      tags:
      - Disburse
      summary: Retrieve details of a payout sender.
      description: "Note: The Retrieve Sender - individual response includes additional\
        \ fields for the **ca_general_bank** payout method. The Retrieve Sender -\
        \ company response includes an additional field for the **us_ach_bank** payout\
        \ method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-sender.html
      operationId: getPayer
      parameters:
      - name: senderId
        in: path
        description: ID of the Sender object. String starting with **sender_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: sender_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: The 'Retrieve Sender - individual' response includes additional
            fields for the 'ca_general_bank' payout method. The 'Retrieve Sender -
            company' response includes an additional field for the **us_ach_bank**
            payout method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        "400":
          description: Bad Request. Sender not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_7'
        "500":
          description: Internal server error.
    delete:
      tags:
      - Disburse
      summary: Delete Sender
      description: Delete a payout sender from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-sender.html
      operationId: deletePayer
      parameters:
      - name: senderId
        in: path
        description: ID of the `sender` object. String starting with **sender_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: sender_b9342620e3eb13164286485bbff9eb7b
      responses:
        "200":
          description: Sender deleted successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        "500":
          description: Internal server error.
  /v1/payout_methods:
    get:
      tags:
      - Disburse
      summary: List Payout Method Types
      description: Retrieve a list of payout method types that you can use when creating
        a payout. The response contains a list of objects. Each object includes a
        payout method type and its attributes.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payout-method-types.html
      operationId: getPayoutMethodTypes
      parameters:
      - name: sender_entity_type
        in: query
        description: "Filters the type of entity for the payer. One of the following:\
          \ **individual** | **company**"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: company
      - name: beneficiary_country
        in: query
        description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: payout_currency
        in: query
        description: Currency received by the beneficiary. Three-letter ISO 4217 code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_currency
        in: query
        description: Currency that the sender is paying with. Three-letter ISO 4217
          code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_country
        in: query
        description: "Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Note:\
          \ This field does not appear in the response."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: beneficiary_entity_type
        in: query
        description: "Filters the type of entity for the beneficiary. One of the following:\
          \ **individual** | **company**"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: individual
      - name: category
        in: query
        description: "The category of payout method. One of the following: bank, card,\
          \ cash, rapyd_ewallet, ewallet"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: bank
      - name: is_cancelable
        in: query
        description: Indicates whether the payout can be canceled. Relevant when category
          is cash.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_location_specific
        in: query
        description: Indicates whether the payout must be made at a specific physical
          location. Relevant when category is cash.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_expirable
        in: query
        description: Indicates whether the payout expires if not completed. Relevant
          when category is cash.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: starting_after
        in: query
        description: The name of a payout method in the list. The list begins with
          the record that was created next after the record with this payout method.
          Use this filter to get the next page of results. Relevant when ending_before
          is not used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The name of a payout method in the list. The list ends with the
          last record that was created before the record with this payout method.
          Use this filter to get the previous page of results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of payout methods to return. Range: 1-100.\
          \ Default is 10."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 5
      responses:
        "200":
          description: payout method types fetched successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        "500":
          description: Internal server error.
  /v1/payouts/{payoutId}:
    get:
      tags:
      - Disburse
      summary: Retrieve Payout
      description: Retrieve the details of a payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payout.html
      operationId: getPayout
      parameters:
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Payout object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: Bad Request. Payout not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_8'
        "500":
          description: Internal server error.
    post:
      tags:
      - Disburse
      summary: Update Payout
      description: Change or modify a payout. This method triggers the Payout Updated
        webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-payout.html
      operationId: updatePayout
      parameters:
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payouts_payoutId_body'
        required: true
      responses:
        "200":
          description: payout updated successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
        "500":
          description: Internal server error.
    delete:
      tags:
      - Disburse
      summary: Cancel Payout
      description: |-
        The payout can be canceled unless its status is confirmation or completed.
        This method triggers the Payout Canceled webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-payout.html
      operationId: cancelPayout
      parameters:
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: payout canceled successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "500":
          description: Internal server error.
  /v1/fx_rate:
    get:
      tags:
      - FX
      summary: Get FX Rate
      description: Retrieve a daily rate for conversion of currencies in payments
        and payouts. Rapyd uses a snapshot of daily foreign exchange rates fetched
        at 9 PM UTC. The rate returned includes the FX markup fees.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-fx-rate.html
      operationId: getDailyRate
      parameters:
      - name: action_type
        in: query
        description: "Determines the type of transaction that the currency exchange\
          \ applies to. One of the following - payment, payout"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        description: "Amount of the currency exchange transaction, in units of the\
          \ fixed-side currency in Decimal."
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: decimal
      - name: buy_currency
        in: query
        description: Defines the currency purchased in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The date when the rate is applicable. Today or earlier. Format
          YYYY-MM-DD
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: fixed_side
        in: query
        description: "Indicates whether the rate is fixed for the currency defined\
          \ by buy_currency or sell_currency. One of the following - buy, sell."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sell_currency
        in: query
        description: Defines the currency sold in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Retrieve fixed daily rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
  /v1/ewallets:
    get:
      tags:
      - eWallets
      summary: List eWallets.
      description: Retrieve a list of Rapyd Wallets. You can filter the list with
        query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallets.html
      operationId: getUsers
      parameters:
      - name: phone_number
        in: query
        description: Phone number of the Rapyd Wallet in E.164 format.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: email
        in: query
        description: Email address of the wallet owner.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ewallet_reference_id
        in: query
        description: Wallet ID defined by the customer or end user.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: page_number
        in: query
        description: "Page number to retrieve. If `page_number` is not specified,\
          \ page 1 is retrieved."
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: page_size
        in: query
        description: Number of results per page.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: type
        in: query
        description: "Type of wallet - company, person, client."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: min_balance
        in: query
        description: ""
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: currency
        in: query
        description: ""
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "List of eWallets,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
        "400":
          description: bad input parameter
    post:
      tags:
      - eWallets
      summary: Create Wallet
      description: Create a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-wallet.html
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_ewallets_body'
        required: true
      responses:
        "200":
          description: Rapyd wallet created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/ewallets/{ewalletToken}:
    get:
      tags:
      - eWallets
      summary: Retrieve Wallet
      description: Retrieve the details of a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet.html
      operationId: getUser
      parameters:
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      responses:
        "200":
          description: Retrieve the details of a Rapyd Wallet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
    post:
      tags:
      - eWallets
      summary: Update Wallet
      description: Change or modify a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet.html
      operationId: updatedUser
      parameters:
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ewallets_ewalletToken_body'
        required: true
      responses:
        "200":
          description: "Created Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
    delete:
      tags:
      - eWallets
      summary: Delete a Wallet.
      description: Delete a Rapyd Wallet. Use this method when the wallet has never
        been used. This method triggers the Wallet Deleted webhook. This webhook contains
        the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-wallet.html
      operationId: deleteUser
      parameters:
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Wallet was deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        "400":
          description: bad input parameter
  /v1/ewallets/{ewalletToken}/statuses/{status}:
    post:
      tags:
      - eWallets
      summary: Change Wallet status
      description: Change Wallet Status
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/change-wallet-status.html
      operationId: updateEwalletStatus
      parameters:
      - name: ewalletToken
        in: path
        description: ID of the Rapyd Wallet. String starting with **ewallet_**. Required
          when phone number is not used.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: "Status of the wallet. One of the following: ACT - Active, DIS\
          \ - Disabled, CLO - Close."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - ACT
          - DIS
          - CLO
      responses:
        "200":
          description: Operations status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/ewallets/{walletId}/account/limits:
    post:
      tags:
      - eWallets
      summary: Set Wallet Account Limit
      description: Set the maximum balance limit or the minimum balance threshold
        for an existing wallet account.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-wallet-account-limit.html
      operationId: setAccountLimit
      parameters:
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_limits_body'
      responses:
        "200":
          description: List Contacts for Rapyd Wallet Accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
    delete:
      tags:
      - eWallets
      summary: Delete a coupon from the Rapyd platform
      description: Delete a limit on a wallet account.
      operationId: removeAccountLimit
      parameters:
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Coupon was deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/ewallets/{walletId}/accounts:
    get:
      tags:
      - eWallets
      summary: Retrieve Wallet Balances
      description: Retrieve details of the balances in a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-balances-of-wallet-accounts.html
      operationId: getUserAccounts
      parameters:
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: "List accounts related to the Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/ewallets/{walletId}/transactions:
    get:
      tags:
      - eWallets
      summary: List Wallet Transactions
      description: Retrieve a list of all transactions related to a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallet-transactions.html
      operationId: getUserTransactions
      parameters:
      - name: walletId
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      - name: balance
        in: query
        description: The updated wallet balance after successful completion of the
          transaction.
        required: true
        style: form
        explode: false
        schema:
          type: number
        example: 3422
      - name: currency
        in: query
        description: Three-letter ISO 4217 code for the currency of the transactions.
          Uppercase.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      - name: end_date
        in: query
        description: "Timestamp of the last transaction or later, in Unix time."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1000
      - name: ending_before
        in: query
        description: The ID of the wallet transaction created after the last wallet
          transaction you want to retrieve. String starting with **wt_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
      - name: page_number
        in: query
        description: Page number to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 23
      - name: page_size
        in: query
        description: Number of results per page.
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: 20
      - name: start_date
        in: query
        description: "Timestamp of the first transaction or earlier, in Unix time."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      - name: starting_after
        in: query
        description: The ID of the wallet transaction created before the first wallet
          transaction you want to retrieve. String starting with **wt_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
      - name: type
        in: query
        description: Type of transaction.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: payout_funds_in
      responses:
        "200":
          description: List of all transactions related to a wallet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/ewallets/{walletId}/transactions/{transactionId}:
    get:
      tags:
      - eWallets
      summary: Get Details of Wallet Transaction
      description: Retrieve the details of a wallet transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-details-of-wallet-transaction.html
      operationId: getUserTransactionDetails
      parameters:
      - name: walletId
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      - name: transactionId
        in: path
        description: "ID of the transaction, from the response to List Wallet Transactions.\
          \ String starting with wt_."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: wt_8029af385b9614ac6e70f44aea3383b8
      responses:
        "200":
          description: Retrieve the details of a wallet transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/fx_rates/:
    get:
      tags:
      - eWallets
      summary: Resource Methods
      description: Retrieve a daily rate for conversion of currencies in payments
        and payouts. Rapyd uses a snapshot of daily foreign exchange rates fetched
        at 9 PM UTC. The rate returned includes the FX markup fees.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-fx-rate.html
      operationId: getFXRate
      parameters:
      - name: action_type
        in: query
        description: "Determines the type of transaction that the currency exchange\
          \ applies to. One of the following - payment, payout"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        description: "Amount of the currency exchange transaction, in units of the\
          \ fixed-side currency in Decimal."
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: decimal
      - name: buy_currency
        in: query
        description: Defines the currency purchased in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The date when the rate is applicable. Today or earlier. Format
          YYYY-MM-DD
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: fixed_side
        in: query
        description: "Indicates whether the rate is fixed for the currency defined\
          \ by buy_currency or sell_currency. One of the following - buy, sell."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sell_currency
        in: query
        description: Defines the currency sold in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Retrieve fixed daily rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
  /v1/issuing/bankaccounts:
    post:
      tags:
      - Issuing
      summary: Issue Virtual Account Number to Wallet
      description: Issue a virtual account number to an existing wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/issue-virtual-account-to-wallet.html
      operationId: createIssuing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/issuing_bankaccounts_body'
        required: true
      responses:
        "200":
          description: "Virtual Account,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/issuing/bankaccounts/bankaccounttransfertobankaccount:
    post:
      tags:
      - Issuing
      summary: Simulate a Bank Transfer to a Wallet
      description: Imulate a deposit to a virtual account number that was issued to
        a wallet. This method is relevant only for testing in the sandbox. The currency
        of the transfer must be supported by the specific virtual account. This method
        triggers the Deposit Completed webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-bank-transfer-to-a-virtual-account.html
      operationId: simulateCompleteBankAccountIssuingTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bankaccounts_bankaccounttransfertobankaccount_body'
        required: true
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: bad input parameter
  /v1/issuing/bankaccounts/remitters/{virtualAccountId}/transactions/{transaction_id}:
    get:
      tags:
      - Issuing
      summary: Retrieve Remitter Details
      description: Retrieve the details of the remitter of a transfer to a virtual
        bank account.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-remitter-details.html
      operationId: getRemitterDetails
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      - name: transaction_id
        in: path
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: isutran_59599bcba9ab9c79113f88cade1ed655
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/issuing/bankaccounts/{virtualAccountId}:
    get:
      tags:
      - Issuing
      summary: Retrieve Virtual Account History
      description: Retrieve a Virtual Account Number object for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-history.html
      operationId: retrieveIssuingByRapydToken
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: "Virtual Account,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
    post:
      tags:
      - Issuing
      description: Update Receiving Currency
      externalDocs:
        description: Learn more about details provided by this API
        url: TBD
      operationId: updateReceivingCurrency
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bankaccounts_virtualAccountId_body'
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
  /v1/issuing/bankaccounts/{virtualAccountId}/transactions/{transactionId}:
    get:
      tags:
      - Issuing
      summary: Retrieve Virtual Account Transaction
      description: Retrieve a virtual account transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-transaction.html
      operationId: retrieveIssuingTransaction
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      - name: transactionId
        in: path
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: isutran_59599bcba9ab9c79113f88cade1ed655
      responses:
        "200":
          description: "List Contacts for a Rapyd Wallet,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
        "400":
          description: bad input parameter
        "500":
          description: Internal server error.
  /v1/checkout/{checkout_token}:
    get:
      tags:
      - Checkout Page
      summary: Retrieve a checkout page.
      description: Retrieve a checkout page
      externalDocs:
        description: Learn more about customer operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-checkout-page.html
      operationId: getHostedPagePayment
      parameters:
      - name: checkout_token
        in: path
        description: ID of the checkout page. String starting with **checkout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Retrieve a checkout page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
  /v1/checkout:
    post:
      tags:
      - Checkout Page
      summary: Create checkout page.
      description: Create a checkout page that makes a payment.
      externalDocs:
        description: API Reference
        url: https://docs.rapyd.net/en/create-checkout-page.html
      operationId: generateHostedPagePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_checkout_body'
      responses:
        "200":
          description: Create a checkout page that makes a payment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
  /v1/coupons:
    get:
      tags:
      - Coupon
      summary: Retrieve list of coupons
      description: Retrieve a list of all coupons.
      externalDocs:
        description: Retrieve a list of all coupons.
        url: https://docs.rapyd.net/en/list-coupons.html
      operationId: listCoupon
      parameters:
      - name: starting_after
        in: query
        description: The ID of the coupon created before the first coupon you want
          to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the coupon created after the last coupon you want to       retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of coupons to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      responses:
        "200":
          description: List of coupons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
    post:
      tags:
      - Coupon
      summary: Create new coupon
      description: create a coupon
      externalDocs:
        description: Create a coupon.
        url: https://docs.rapyd.net/en/create-coupon.html
      operationId: createCoupon
      requestBody:
        description: Coupon to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      responses:
        "200":
          description: Coupon was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
  /v1/coupons/{couponId}:
    get:
      tags:
      - Coupon
      summary: Retrieve a coupon.
      description: Retrieve a coupon
      externalDocs:
        description: Learn more about coupon operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-coupon.html
      operationId: retrieveCoupon
      parameters:
      - name: couponId
        in: path
        description: coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get Coupon details By coupon Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
    post:
      tags:
      - Coupon
      summary: Update a coupon.
      description: Modify the metadata of a coupon with a coupon ID in Path
      operationId: updateCoupon
      parameters:
      - name: couponId
        in: path
        description: coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Coupon to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      responses:
        "200":
          description: Coupon was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
    delete:
      tags:
      - Coupon
      summary: Delete a coupon from the Rapyd platform.
      description: "Delete a coupon from the Rapyd platform. Deleting a coupon removes\
        \ it from all customers and subscriptions, but does not affect invoices and\
        \ payment authorizations that have already been calculated."
      operationId: deleteCoupon
      parameters:
      - name: couponId
        in: path
        description: Coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Coupon was deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
  /v1/customers:
    get:
      tags:
      - Customer
      summary: Retrieve list of customers
      description: Retrieve a list of all customers
      externalDocs:
        description: GET list of customers.
        url: https://docs.rapyd.net/en/list-customers-364253.html
      operationId: listCustomer
      parameters:
      - name: starting_after
        in: query
        description: The ID of the customer created before the first customer you
          want to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the customer created after the last customer you want
          to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of customers to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      responses:
        "200":
          description: get customers details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
    post:
      tags:
      - Customer
      summary: Create a customer
      description: Adds a customer to the client.
      externalDocs:
        description: Learn more about customer operations provided by this API.
        url: https://docs.rapyd.net/en/create-customer.html
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_customers_body'
        required: true
      responses:
        "200":
          description: Customer was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
        "400":
          description: Bad Request. Address not found for provided ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_9'
  /v1/customers/{customerId}:
    get:
      tags:
      - Customer
      summary: Retrieve a customer details
      description: Retrieve a customer
      externalDocs:
        description: Learn more about Retrieve a customer details provided by this
          API
        url: https://docs.rapyd.net/en/retrieve-customer.html
      operationId: retrieveCustomer
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Customer details by customer ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
        "400":
          description: Bad Request. Customer not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_10'
    post:
      tags:
      - Customer
      summary: Update customer
      description: Update a customer with customer Id in Path
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/update-customer.html
      operationId: updateCustomer
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        "200":
          description: customer was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_11'
    delete:
      tags:
      - Customer
      summary: Delete a customer from the Rapyd platform
      description: This method triggers the Customer Deleted webhook. This webhook
        contains the same information as the response
      externalDocs:
        description: delete an existing customer
        url: https://docs.rapyd.net/en/delete-customer.html
      operationId: deleteCustomer
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: customer was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
        "400":
          description: "The request tried to delete a customer, but the operation\
            \ failed. Corrective action is to Determine whether the customer was alread\
            \ deleted, and why there were multiple requests to delete it."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_12'
  /v1/customers/discount/{discountId}:
    get:
      tags:
      - Customer
      summary: Retrieve a discount of customer.
      description: Retrieve a discount for a customer.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-discount---customer.html
      operationId: getCustomerDiscountById
      parameters:
      - name: discountId
        in: path
        description: discount Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: dis_d41d8cd98f00b204e9800998ecf8427e
      responses:
        "200":
          description: Get discount details of a customer by Discount Id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
  /v1/customers/{customerId}/discount:
    delete:
      tags:
      - Customer
      summary: Delete the discount that has been assigned to a customer
      description: Delete the discount that has been assigned to a customer through
        a coupon. This action does not affect the coupon that the discount was derived
        from. This method triggers the **Customer Discount Deleted** webhook.
      operationId: deleteCustomerDiscount
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: discount was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_42'
  /v1/customers/{customerId}/payment_methods:
    get:
      tags:
      - Customer Payment Method
      summary: Retrieve payment methods for a customer
      description: Retrieve payment methods for a customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/en/list-payment-methods-of-customer.html
      operationId: getCustomerPaymentMethods
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Category'
      - name: starting_after
        in: query
        description: The ID of the coupon created before the first coupon you want
          to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the coupon created after the last coupon you want to
          retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of coupons to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of payment method to find.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: get customer details By customer Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
    post:
      tags:
      - Customer Payment Method
      summary: Add a payment method to a customer profile
      description: Add a payment method to a customer profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/add-payment-method-to-customer.html
      operationId: createCustomerPaymentMethod
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: customer to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customerId_payment_methods_body'
        required: true
      responses:
        "200":
          description: Payment method was created for this customer successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_13'
  /v1/customers/{customerId}/payment_methods/{pmtId}:
    get:
      tags:
      - Customer Payment Method
      summary: Retrieve a payment method for a specific customer
      description: Retrieve a payment method for a specific customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/en/retrieve-payment-method.html
      operationId: getCustomerPaymentMethod
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: get customer details By customer Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_14'
    post:
      tags:
      - Customer Payment Method
      summary: Update payment method for customer
      description: Change or modify a payment method that was stored in a customer
        profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/update-payment-method.html
      operationId: updateCustomerPaymentMethod
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: customer to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentMethod'
        required: true
      responses:
        "200":
          description: customer was updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_44'
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_14'
    delete:
      tags:
      - Customer Payment Method
      summary: Delete a payment method type from customer
      description: This method triggers the Webhook - Payment Method Canceled webhook.
        This webhook contains more information than the response.
      externalDocs:
        description: delete a payment method for customer
        url: https://docs.rapyd.net/en/delete-payment-method.html
      operationId: deleteCustomerPaymentMethod
      parameters:
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: payment method was deleted for this customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_45'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_15'
  /v1/digital_wallets/session/apple_pay:
    post:
      tags:
      - Digital Wallet
      summary: Retrieve the details of an Apple Pay payment session.
      description: "Retrieve the details of an Apple Pay payment session. Each payment\
        \ that uses Apple Pay has a unique session.  [Activating Apple Pay](https://docs.rapyd.net/en/activating-apple-pay.html)\
        \ is a prerequisite."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-apple-pay-session.html
      operationId: getApplePaySession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplePayObject'
        required: true
      responses:
        "200":
          description: Apple Pay response fetched successfuly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
  /v1/disputes:
    get:
      tags:
      - Dispute
      summary: Retrieve list of disputes
      description: Retrieve a detailed list of 'dispute' objects.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-disputes.html
      operationId: getDisputesListByOrgId
      parameters:
      - name: starting_after
        in: query
        description: The ID of the dispute created before the first dispute you want
          to retrieve. String starting with dispute_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      - name: ending_before
        in: query
        description: The ID of the dispute created after the last dispute you want
          to retrieve. String starting with dispute_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      - name: limit
        in: query
        description: The maximum number of disputes to return. Range is 1-100. Default
          is 10.
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      - name: status
        in: query
        description: Filters the list for disputes with the specified dispute status.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ACT
          - RVW
          - PRA
          - ARB
          - LOS
          - WIN
          - REV
      - name: payment
        in: query
        description: The ID of the payment that is linked to the dispute. String starting
          with payment_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: payment_ce936f36d93bc9307a3d
      responses:
        "200":
          description: disputes fetched successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
  /v1/disputes/{disputeId}:
    get:
      tags:
      - Dispute
      summary: Retrieve an dispute.
      description: Retrieve the details of a dispute.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-dispute.html
      operationId: getDispute
      parameters:
      - name: disputeId
        in: path
        description: ID of the dispute you want to retrieve. String starting with
          dispute_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      responses:
        "200":
          description: Get dispute details by dispute ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_48'
  /v1/payments/{payment}/escrows/{escrow}/escrow_releases:
    get:
      tags:
      - Escrow
      summary: Retrieve a list of all releases of funds from a specified escrow.
      description: Retrieve a list of all releases of funds from a specified escrow.
      externalDocs:
        url: https://docs.rapyd.net/en/list-escrow-releases.html
      operationId: listEscrowReleases
      parameters:
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: escrow_df0a95af70e696947706cb59bd53d46f
      responses:
        "200":
          description: Escrow details after specifying it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_16'
    post:
      tags:
      - Escrow
      summary: Release funds from escrow.
      description: Retrieve a list of all releases of funds from a specified escrow.
      externalDocs:
        url: https://docs.rapyd.net/en/release-funds-from-escrow.html
      operationId: releaseFundsFromEscrow
      parameters:
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/escrow_escrow_releases_body'
      responses:
        "200":
          description: Escrow details after creating it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_50'
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_17'
  /v1/payments/{payment}/escrows/{escrow}:
    get:
      tags:
      - Escrow
      summary: Retrieve details of the escrow for a payment.
      description: Retrieve details of the escrow for a payment.
      externalDocs:
        url: https://docs.rapyd.net/en/retrieve-escrow.html
      operationId: getEscrow
      parameters:
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: escrow_df0a95af70e696947706cb59bd53d46f
      responses:
        "200":
          description: Escrow details after specifying it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_49'
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_16'
  /v1/payments/group_payments:
    post:
      tags:
      - Group Payment
      summary: Create group payment
      description: Create a group payment.
      externalDocs:
        url: https://docs.rapyd.net/en/create-group-payment.html
      operationId: createGroupPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payments_group_payments_body'
        required: true
      responses:
        "200":
          description: get group payment details after creating it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
        "400":
          description: Bad Request. Group payment not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_18'
  /v1/payments/group_payments/{groupPaymentId}:
    get:
      tags:
      - Group Payment
      summary: Retrieve group payment details
      description: Retrieve details of a group payment.
      externalDocs:
        url: https://docs.rapyd.net/en/retrieve-group-payment.html
      operationId: retrieveGroupPaymentId
      parameters:
      - name: groupPaymentId
        in: path
        description: ID of the group payment. String starting with **gp_**
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: get group payment details By group payment Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
        "400":
          description: Bad Request. Group payment not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_19'
    delete:
      tags:
      - Group Payment
      summary: Cancel group payment
      description: Cancel a group payment.
      externalDocs:
        url: https://docs.rapyd.net/en/cancel-group-payment.html
      operationId: deletegroupPaymentId
      parameters:
      - name: groupPaymentId
        in: path
        description: ID of the group payment. String starting with **gp_**
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Cancel group payment by group_payment Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_51'
        "400":
          description: Bad Request. Customer not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_20'
  /v1/invoices:
    get:
      tags:
      - Subscription.Invoice
      summary: List Invoices
      description: "Retrieve the basic data of an invoice, with individual invoice\
        \ lines."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-invoices.html
      operationId: listInvoices
      parameters:
      - name: customer
        in: query
        description: ID of the customer. String starting with **cus_**.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Customer'
        example: cus_753511a533a727cf28509812b4683edd
      - name: date
        in: query
        description: Date that the invoice was created.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: due_date
        in: query
        description: "The date payment is due on this invoice. This value is calculated\
          \ from the date the invoice is created, plus the number of days specified\
          \ in the days_until_due field. Format is in Unix time."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the invoice created after the last invoice you want
          to retrieve. card.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of invoices to return. Range 1-100. Default
          is 10.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the invoice created before the first invoice you want
          to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscription
        in: query
        description: ID of the subscription. String starting with sub_.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Invoices Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_52'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_21'
  /v1/invoices/{invoiceId}:
    get:
      tags:
      - Subscription.Invoice
      summary: Retrieve Invoice
      description: "Retrieve the basic data of an invoice, with individual invoice\
        \ lines."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-invoice.html
      operationId: retrieveInvoice
      parameters:
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Invoice Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_21'
    post:
      tags:
      - Subscription.Invoice
      summary: Update Invoice
      description: Change or modify an invoice. You can modify the invoice when its
        status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-invoice.html
      operationId: updateInvoice
      parameters:
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoices_invoiceId_body'
      responses:
        "200":
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_21'
    delete:
      tags:
      - Subscription.Invoice
      summary: Delete Invoice
      description: Delete an invoice. You can delete an invoice when status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-invoice.html
      operationId: deleteInvoice
      parameters:
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Invoice deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_21'
  /v1/invoices/{invoiceId}/finalize:
    post:
      tags:
      - Subscription.Invoice
      summary: Finalize Invoice
      description: "Finalize an invoice.Invoices are initially created with a draft\
        \ status, and this is the only state in which an invoice can be finalized.\
        \ When an invoice is ready to be paid, finalize it. This sets its status to\
        \ open. Subscriptions automatically create draft invoices during each billing\
        \ cycle, which are then automatically finalized. When an invoice is finalized,\
        \ it can no longer be deleted and its final status can be one of the following\
        \ - Paid Uncollectible* Void. An invoice can be finalized only one time."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/finalize-invoice.html
      operationId: finalizeInvoice
      parameters:
      - name: invoiceId
        in: path
        description: ID of the invoice you want to pay.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: "Finalized Invoice,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_21'
  /v1/invoices/{invoiceId}/pay:
    post:
      tags:
      - Subscription.Invoice
      summary: payInvoice
      description: Make a payment against an invoice.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/pay-invoice.html
      operationId: payInvoice
      parameters:
      - name: invoiceId
        in: path
        description: ID of the invoice you want to pay.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoiceId_pay_body'
      responses:
        "200":
          description: The Invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_53'
  /v1/orders:
    get:
      tags:
      - Order
      summary: List Orders
      description: Retrieve a list of all orders.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-orders.html
      operationId: listOrder
      parameters:
      - name: limit
        in: query
        description: The maximum number of orders to return. Range - 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: ending_before
        in: query
        description: The ID of the order created after the last order you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: order_d1ce10b16cd4350d12c75232628e49bd
      - name: starting_after
        in: query
        description: The ID of the order created before the first order you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: order_d1ce10b16cd4350d12c75232628e49bd
      responses:
        "200":
          description: List of orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_54'
    post:
      tags:
      - Order
      summary: Create an Order
      description: "Create an order for goods. For services, see Create Subscription."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-an-order.html
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_orders_body'
      responses:
        "200":
          description: The created order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
  /v1/orders/{orderId}:
    get:
      tags:
      - Order
      summary: Retrieve an Order
      description: Retrieve the details of an order.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-an-order.html
      operationId: retrieveOrder
      parameters:
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
    post:
      tags:
      - Order
      summary: Update an Order
      description: Change or modify an order.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/update-an-order.html
      operationId: updateOrder
      parameters:
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orders_orderId_body'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
  /v1/orders/{orderId}/returns:
    post:
      tags:
      - Order.Return
      summary: Create a Return Against an Order
      description: Make a return against an order. The maximum amount of the return
        is the amount of the order
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/create-a-return-against-an-order.html
      operationId: returnsOrder
      parameters:
      - name: orderId
        in: path
        description: ID of the order. String starting with order_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderId_returns_body'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_56'
  /v1/orders/{orderId}/pay:
    post:
      tags:
      - Order
      summary: Pay an order.
      description: Pay an order.
      externalDocs:
        description: Learn more about operations provided by this API.
        url: https://docs.rapyd.net/en/pay-an-order.html
      operationId: payOrder
      parameters:
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderId_pay_body'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_55'
  /v1/order_returns:
    get:
      tags:
      - Order.Return
      summary: List Returns
      description: Retrieve a list of all order returns.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-orders.html
      operationId: listOrderReturn
      parameters:
      - name: limit
        in: query
        description: The maximum number of returns to list. Range - 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: ending_before
        in: query
        description: The ID of the order created after the last order you want to
          retrieve a return from.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: orre_d1ce10b16cd4350d12c75232628e49bd
      - name: starting_after
        in: query
        description: The ID of the order created before the first order you want to
          retrieve a return from.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: orre_d1ce10b16cd4350d12c75232628e49bd
      - name: tokens
        in: query
        description: Filters the list for orders related to the specified order.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: List of orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_57'
  /v1/order_returns/{orderReturnsId}:
    get:
      tags:
      - Order.Return
      summary: Retrieve a Return
      description: Retrieve the details of a return.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-an-order.html
      operationId: retrieveOrderReturn
      parameters:
      - name: orderReturnsId
        in: path
        description: ID of the return. String starting with **orre_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_56'
  /v1/payment_methods/countries/{countryId}:
    get:
      tags:
      - Payment Method Type
      summary: Retrieve a list of all payment methods available for a country.
      description: You can filter the results by specifying the currency query parameter
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/list-payment-methods-by-country.html
      operationId: getPaymentMethodsTypesByCountry
      parameters:
      - name: countryId
        in: path
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Country_1'
      - name: currency
        in: query
        description: currency
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Currency_1'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_58'
  /v1/payment_methods/{pmtId}/required_fields:
    get:
      tags:
      - Payment Method Type
      summary: Retrieve the required fields for a payment method
      description: The fields are returned as a list of objects. The name of each
        field appears in the name field of the response
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/get-payment-method-required-fields.html
      operationId: getPaymentMethodTypeRequiredFields
      parameters:
      - name: pmtId
        in: path
        description: discount Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_59'
  /v1/hosted/collect/payments/{paymentLink}:
    get:
      tags:
      - Payment Link
      summary: Gwt Payment Link
      description: Retrieve details of a payment link.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payment-link.html
      operationId: paymentLink
      parameters:
      - name: paymentLink
        in: path
        description: ID of the payment link. String starting with **hp_reuse_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Payment Link Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_60'
  /v1/hosted/collect/card/:
    post:
      tags:
      - Payment.Card Token
      summary: Creates Card Token
      description: "Create a hosted page for a customer to save card details and manage\
        \ cards. Prerequisite: [Create Customer](https://docs.rapyd.net/en/create-customer.html)."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-card-token.html
      operationId: createCardToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collect_card_body'
      responses:
        "200":
          description: Card Token created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_61'
        "400":
          description: No card payment methods available in the country for the merchant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_22'
  /v1/hosted/collect/payments/:
    post:
      tags:
      - Payment Link
      summary: Create Payment Link
      description: "Creates a reusable link for a hosted payment page. <BR> A customer\
        \ can use the link and the hosted payment page multiple times. After providing\
        \ required information, the customer is redirected seamlessly to a Rapyd Checkout\
        \ page to complete the payment.You can create the link for everyone or for\
        \ a specific customer. You can make the payment amount fixed, editable, or\
        \ open."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-payment-link.html
      operationId: createPaymentLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collect_payments_body'
      responses:
        "200":
          description: Payment Link Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_60'
  /v1/payments:
    get:
      tags:
      - Payment
      summary: List Payments
      description: Retrieve a list of all payments that you have created. You can
        filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payments.html
      operationId: listPayments
      parameters:
      - name: created_after
        in: query
        description: The ID of the payment created before the first payment you want
          to retrieve. String starting with **payment_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: created_before
        in: query
        description: The ID of the payment created after the last payment you want
          to retrieve. String starting with **payment_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customer
        in: query
        description: Filters the list for payments related to the specified customer.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Customer'
        example: cus_753511a533a727cf28509812b4683edd
      - name: destination_card
        in: query
        description: Filters the list for payments related to the specified destination
          card.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the payment created after the last payment you want
          to retrieve. String starting with payment_. Deprecated.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ewallet
        in: query
        description: Filters the list for payments related to the specified wallet.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ewallet_61be0e6ad9f57121cff47a63902282ac
      - name: group
        in: query
        description: "When true, includes only group payments in the response. When\
          \ false, excludes group payments from the response. Default is false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: invoice
        in: query
        description: Filters according to the invoice. String starting with invoice_.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of payments to return. Range, 1-100. Default\
          \ is 10."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2
      - name: payment_method
        in: query
        description: Filters the list for payments related to the specified payment
          method.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: us_mastercard_card
      - name: order
        in: query
        description: Filters the list for payments related to the specified order.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of a payment in the list. The list begins with the payment
          that was created next after the payment with this ID. Use this filter to
          get the next page of results. Relevant when ending_before is not used. String
          starting with payment_.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscription
        in: query
        description: Filters the list for payments related to the specified subscription.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: merchant_reference_id
        in: query
        description: Merchant-defined ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Payments Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_62'
    post:
      tags:
      - Payment
      summary: Add a payment to a customer
      description: Create a payment
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/create-payment.html
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_payments_body'
        required: true
      responses:
        "200":
          description: Payment was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
        "400":
          description: bad input parameter
  /v1/payments/{paymentId}:
    get:
      tags:
      - Payment
      summary: Retrieve Payment
      description: Retrieve details of a payment
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payment.html
      operationId: retrievePayment
      parameters:
      - name: paymentId
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_bebddc4b4139d5a0f13cdcd4046cf2c1
      responses:
        "200":
          description: Payment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
        "400":
          description: Bad Request. Payment not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_23'
    post:
      tags:
      - Payment
      summary: Update Payment
      description: Change or modify a payment when the status of the payment is ACT
        (active). You can update additional fields if they are listed under payment_options
        in the response from Get Payment Method Required Fields and is_updateable
        is set to true
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-payment.html
      operationId: updatePayment
      parameters:
      - name: paymentId
        in: path
        description: ID of the payment. String starting with payment_.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_36724a4ea01b438fd24ac3ab00b29150
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payments_paymentId_body'
        required: true
      responses:
        "200":
          description: payment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
    delete:
      tags:
      - Payment
      summary: Cancel Payment
      description: "Cancel a payment where the status of the payment is ACT. Relevant\
        \ to payment methods where is_cancelable = true in the response to List Payment\
        \ Methods by Country. This method triggers the Payment Canceled webhook. This\
        \ webhook contains the same information as the response. NOTE: If the status\
        \ is CLO, use the Create Refund method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-payment.html
      operationId: cancelPayment
      parameters:
      - name: paymentId
        in: path
        description: ID of the payment. String starting with payment_.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: payment canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
  /v1/addresses:
    post:
      tags:
      - Payment.Address
      summary: Create address.
      description: Create an address.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/create-address.html
      operationId: createAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_addresses_body'
      responses:
        "200":
          description: Creates an address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_24'
  /v1/addresses{addressId}:
    get:
      tags:
      - Payment.Address
      summary: Get an address by its ID.
      description: Retrieve an address.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-address.html
      operationId: GetAddress
      parameters:
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      responses:
        "200":
          description: Retrieves an address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_25'
    post:
      tags:
      - Payment.Address
      summary: Updates address.
      description: "Change or modify an address. To clear a field, set it to an empty\
        \ string."
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/update-address.html
      operationId: UpdateAddress
      parameters:
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        "200":
          description: Update an address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_24'
    delete:
      tags:
      - Payment.Address
      summary: Remove an address by its ID.
      description: Remove an address that is linked to a customer or is not linked
        to any object.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/delete-address.html
      operationId: DeleteAddress
      parameters:
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      responses:
        "200":
          description: Removes an address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
        "400":
          description: Address that is linked to an object cannot be removed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_26'
  /v1/payments/subscriptions:
    get:
      tags:
      - Subscription
      summary: List Subscriptions
      description: Retrieve a list of subscriptions. You can filter the list with
        query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-subscriptions.html
      operationId: getSubscriptionList
      parameters:
      - name: billing
        in: query
        description: "Method of billing. One of the following, pay_automatically,\
          \ send_invoice."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: pay_automatically
      - name: customer
        in: query
        description: ID of the customer. String starting with cus_
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: cus_494eae8b99f697107d7384
      - name: status
        in: query
        description: "Status of the subscription. One of the following, active, canceled,\
          \ trialing"
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: product
        in: query
        description: ID of a 'product' object. The product must have type set to service.
          String starting with product_. Filter for one product at a time.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: product_494eae8b99f697107d738
      - name: starting_after
        in: query
        description: The ID of a record in the list. The list begins with the record
          that was created next after the record with this ID. Use this filter to
          get the next page of results. Relevant when ending_before is not used.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
      - name: ending_before
        in: query
        description: The ID of a record in the list. The list ends with the last record
          that was created before the record with this ID. Use this filter to get
          the previous page of results.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
      - name: limit
        in: query
        description: "The maximum number of subscriptions to return. Range, 1-100.\
          \ Default is 10."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 23
      responses:
        "200":
          description: "List of subscriptions,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_65'
    post:
      tags:
      - Subscription
      summary: Create Subscription
      description: "Create a subscription for regular, automatic payments."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-subscription.html
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payments_subscriptions_body'
        required: true
      responses:
        "200":
          description: Create a subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_66'
  /v1/payments/subscriptions/{subscriptionId}:
    get:
      tags:
      - Subscription
      summary: Retrieve Subscription
      description: Retrieve the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-subscription.html
      operationId: getSubscription
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with sub_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: Get subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_66'
    post:
      tags:
      - Subscription
      summary: Update Subscription
      description: Update the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-subscription.html
      operationId: updateSubscription
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_subscriptionId_body'
        required: true
      responses:
        "200":
          description: The subscription after updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_66'
    delete:
      tags:
      - Subscription
      summary: Cancel Subscription
      description: Cancel a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-subscription.html
      operationId: cancelSubscription
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: The canceled subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_66'
  /v1/payments/subscriptions/{subscriptionId}/discount:
    delete:
      tags:
      - Subscription
      summary: Delete Discount from Subscription
      description: Delete the discount that was assigned to a subscription. This method
        does not affect the coupon that the discount was derived from.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/delete-discount-from-subscription.html
      operationId: deleteSubscriptionDiscount
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: discount was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_67'
  /v1/payments/subscriptions/{subscriptionId}/complete_cycle:
    post:
      tags:
      - Subscription
      summary: Complete a Cycle
      description: Cancel the subscription and create an invoice. This method is for
        testing purposes and runs only in the sandbox.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#complete-a-cycle
      operationId: completeSubscriptionCycle
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with sub_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: The subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_68'
  /v1/payments/subscriptions/{subscriptionId}/start_new_cycle:
    post:
      tags:
      - Subscription
      summary: Start a New Cycle
      description: "End a subscription cycle, create an invoice and move the subscription\
        \ to the next cycle. This method is for testing purposes and runs only in\
        \ the sandbox."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#start-a-new-cycle
      operationId: simulateStartNewCycle
      parameters:
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with sub_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: Subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_68'
  /v1/plans:
    get:
      tags:
      - Subscription.Plan
      summary: List Plans
      description: Retrieve a list of all plans. Use the optional query parameters
        to filter the results. You can filter the results further by specifying one
        or more Plan fields as additional query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-plans.html
      operationId: listPlans
      parameters:
      - name: ending_before
        in: query
        description: The ID of the plan created after the last plan you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of plans to return. Range 1-100. Default is
          10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 15
      - name: starting_after
        in: query
        description: The ID of the plan created before the first plan you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: List of plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_69'
    post:
      tags:
      - Subscription.Plan
      summary: Create Plan Item
      description: Create a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-plan.html
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_plans_body'
        required: true
      responses:
        "200":
          description: The created plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
  /v1/plans/{planId}:
    get:
      tags:
      - Subscription.Plan
      summary: Retrieve plan
      description: Retrieve the details of a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-plan.html
      operationId: retrievePlan
      parameters:
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      responses:
        "200":
          description: The Plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
    post:
      tags:
      - Subscription.Plan
      summary: Update Plan
      description: Change or modify a pricing plan for services. You can update a
        plan's nickname or metadata.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-plan.html
      operationId: updatePlan
      parameters:
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plans_planId_body'
        required: true
      responses:
        "200":
          description: The Plan after updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
    delete:
      tags:
      - Subscription.Plan
      summary: Delete Plan
      description: Delete a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-plan.html
      operationId: deletePlan
      parameters:
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      responses:
        "200":
          description: "Rapyd response with operation result, and plan id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
  /v1/products:
    get:
      tags:
      - Subscription.Product
      summary: List Products
      description: Retrieve a list of all products.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-plans.html
      operationId: getProductsList
      parameters:
      - name: ending_before
        in: query
        description: The ID of the products created after the last product you want
          to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of products to return. Range 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 15
      - name: starting_after
        in: query
        description: The ID of the product created before the first products you want
          to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
    post:
      tags:
      - Subscription.Product
      summary: Create Product
      description: Create goods or services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-product.html
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_products_body'
        required: true
      responses:
        "200":
          description: The created Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
  /v1/products/{productsId}:
    get:
      tags:
      - Subscription.Product
      summary: Retrieve Product
      description: Retrieve details of a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-product.html
      operationId: getProduct
      parameters:
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      responses:
        "200":
          description: The Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_27'
    post:
      tags:
      - Subscription.Product
      summary: Update Product
      description: Change or modify a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-product.html
      operationId: updateProduct
      parameters:
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/products_productsId_body'
      responses:
        "200":
          description: The created Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
    delete:
      tags:
      - Subscription.Product
      summary: Delete Product
      description: Delete a product or service from the Rapyd platform. This action
        also deletes all associated plans.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-product.html
      operationId: deleteProduct
      parameters:
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      responses:
        "200":
          description: "Rapyd response with operation result, and product id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
  /v1/refunds:
    get:
      tags:
      - Refund
      summary: List Refunds
      description: Retrieve a list of all refunds.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-refunds.html
      operationId: allRefunds
      parameters:
      - name: ending_before
        in: query
        description: The ID of the refund created after the last refund you want to
          retrieve. String starting with refund_.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: refund_dabd1608796554
      - name: limit
        in: query
        description: "The maximum number of refunds to return. Range, 1-100. Default\
          \ is 10."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 12
      - name: starting_after
        in: query
        description: The ID of the refund created before the first refund you want
          to retrieve. String starting with **refund_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: refund_dabd1608796554
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
    post:
      tags:
      - Refund
      summary: Create Refund
      description: "Refund of a payment. The refund is credited against a specific\
        \ payment. The money is returned to the payment method that was used for the\
        \ payment, and the currency is the same as what was used in the payment. If\
        \ the action of a third party is not required, this method triggers the Refund\
        \ Completed webhook. This webhook contains the same information as the response."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-refund.html
      operationId: requestTotal_createRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_refunds_body'
        required: true
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
  /v1/refunds/complete:
    post:
      tags:
      - Refund
      summary: Complete Refund
      description: "Simulate the action of a third party that is required for completing\
        \ the refund process. Relevant to sandbox. Use this method when a payment\
        \ was made with a payment method such as cash, bank redirect or bank transfer,\
        \ and the payment was completed by an action taken by the customer."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/complete-refund.html
      operationId: simulateCompleteRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refunds_complete_body'
        required: true
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
  /v1/refunds/group_payments:
    post:
      tags:
      - Refund
      summary: Create Group Refund
      description: "Refund a group payment when the status of the group payment is\
        \ closed. The refund is credited against a specific group payment. The money\
        \ is returned to the payment methods that were used for the payment. If the\
        \ action of a third party is not required, this method triggers the Refund\
        \ Completed webhook for each payment method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-group-refund.html
      operationId: refundGroupPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refunds_group_payments_body'
        required: true
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
  /v1/refunds/{refundId}:
    get:
      tags:
      - Refund
      summary: Retrieve Refund
      description: Retrieve the details of a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-refund.html
      operationId: refundByToken
      parameters:
      - name: refundId
        in: path
        description: ID of the 'refund' object you want to retrieve. String starting
          with **refund_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: refund_a09a2e16352f56a27f5937f87d0b8705
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
    post:
      tags:
      - Refund
      summary: Update Refund
      description: Change or modify the metadata in a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-refund.html
      operationId: updateRefund
      parameters:
      - name: refundId
        in: path
        description: ID of the 'refund' object you want to retrieve. String starting
          with **refund_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: refund_a09a2e16352f56a27f5937f87d0b8705
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refunds_refundId_body'
        required: true
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
  /v1/subscription_items:
    get:
      tags:
      - Subscription.Subscription Item
      summary: List Subscription Items
      description: Retrieve a list of all subscription items for a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-subscription-items.html
      operationId: listSubscriptionItem
      parameters:
      - name: ending_before
        in: query
        description: The ID of the subscription item created after the last subscription
          item you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: limit
        in: query
        description: The maximum number of subscription items to return. Range 1-100.
          Default is 10.
        required: false
        style: form
        explode: false
        schema:
          type: number
        example: 15
      - name: starting_after
        in: query
        description: The ID of the subscription item created before the first subscription
          item you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: subscription
        in: query
        description: ID of the subscription.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_0de9c79c1e2beee09499dc8220493d59
      responses:
        "200":
          description: List of subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_77'
    post:
      tags:
      - Subscription.Subscription Item
      summary: Create Subscription Item
      description: Create a subscription item and add it to an existing subscription
        for recurring payment.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-subscription-item.html
      operationId: createSubscriptionItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_subscription_items_body'
        required: true
      responses:
        "200":
          description: The created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_78'
  /v1/subscription_items/{subscriptionItemId}:
    get:
      tags:
      - Subscription.Subscription Item
      summary: Retrieve Subscription Item
      description: Retrieve the details of a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-subscription-item.html
      operationId: retrieveSubscriptionItem
      parameters:
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_78'
    post:
      tags:
      - Subscription.Subscription Item
      summary: Update Subscription Item
      description: Change or modify a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-subscription-item.html
      operationId: updateSubscriptionItem
      parameters:
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription_items_subscriptionItemId_body'
        required: true
      responses:
        "200":
          description: The created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_78'
    delete:
      tags:
      - Subscription.Subscription Item
      summary: Delete Subscription Item
      description: Delete a subscription item from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-subscription-item.html
      operationId: deleteSubscriptionItem
      parameters:
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_79'
  /v1/subscription_items/{subscriptionItemId}/usage_record_summaries:
    get:
      tags:
      - Subscription.Subscription Item
      summary: Create Usage Record
      description: Retrieve a list of usage records for a subscription item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-usage-records.html#list-usage-records
      operationId: usageRecordSummaries
      parameters:
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: subi_3682d7bce9339f7b7c9e4185c7d1486f
      - name: limit
        in: query
        description: The maximum number of usage records that are returned. Range
          is 1-100. Default is 10.
        required: false
        style: form
        explode: true
        schema:
          type: number
        example: 15
      - name: ending_before
        in: query
        description: The latest date and time of the returned usage records. Format
          is in Unix time.
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: starting_after
        in: query
        description: The earliest date and time of the returned usage records. Format
          is in Unix time.
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: The subscription after updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_80'
  /v1/subscription_items/{subscriptionItemId}/usage_records:
    post:
      tags:
      - Subscription.Subscription Item
      summary: Create Usage Record
      description: Create a usage record or update an existing usage record where
        its unique identifier is composed of timestamp and subscription_item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-usage-record.html
      operationId: createSubscriptionItemUsageRecord
      parameters:
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: subi_3682d7bce9339f7b7c9e4185c7d1486f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptionItemId_usage_records_body'
        required: true
      responses:
        "200":
          description: The subscription after updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_81'
  /v1/subscriptions/discount/{discountId}:
    get:
      tags:
      - Subscription
      summary: Retrieve a discount of subscription.
      description: Retrieve a discount for a subscription.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-discount---subscription.html
      operationId: getSubscriptionDiscountById
      parameters:
      - name: discountId
        in: path
        description: discount Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get discount details of a subscription by Discount Id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_82'
  /v1/skus/{skuId}:
    get:
      tags:
      - SKU
      summary: Retrieve SKU.
      description: Retrieve the details of an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-sku.html
      operationId: retrieveSKU
      parameters:
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with **sku_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        "200":
          description: The requested SKU object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
    post:
      tags:
      - SKU
      summary: Retrieve SKU.
      description: Change or modify an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-sku.html
      operationId: updateSKU
      parameters:
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with sku_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/skus_skuId_body'
      responses:
        "200":
          description: The requested SKU object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
    delete:
      tags:
      - SKU
      summary: Delete SKU.
      description: Delete an SKU from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-sku.html
      operationId: deleteSKU
      parameters:
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with **sku_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        "200":
          description: The SKU deletion result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_40'
  /v1/skus:
    get:
      tags:
      - SKU
      summary: List SKUs.
      description: Retrieve a list of all SKUs.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-skus.html
      operationId: listSKU
      parameters:
      - name: active
        in: query
        description: Determines whether the query returns active SKUs or inactive
          SKUs. Default is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
        example: true
      - name: starting_after
        in: query
        description: The ID of the SKU created before the first SKU you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: ending_before
        in: query
        description: The ID of the SKU created after the last SKU you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: limit
        in: query
        description: The maximum number of SKUs to return. Range 1-100. Default is
          10.
        required: false
        style: form
        explode: false
        schema:
          type: number
        example: 50
      responses:
        "200":
          description: "List of SKUs,"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_84'
    post:
      tags:
      - SKU
      summary: Create SKU
      description: Create an SKU and attach it to a product.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-sku.html
      operationId: createSKU
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_skus_body'
      responses:
        "200":
          description: SKU created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
  /v1/identities:
    post:
      tags:
      - Verify
      summary: Verify the identity of an individual or a personal contact for a 'person'
        wallet.
      description: Verification of the identity of a personal contact associated with
        a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/verify-identity.html
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_identities_body'
        required: true
      responses:
        "200":
          description: Retrieve the Rapyd ID and merchant reference ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_85'
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_28'
  /v1/identities/types:
    get:
      tags:
      - Verify
      summary: Retrieve a list of the types of official identification documents for
        a country.
      description: "Use this method to determine the types of documents to use for\
        \ identification purposes, and also whether you need the reverse side of the\
        \ document. You can filter your search results by country with the country\
        \ query parameter."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-official-identification-documents.html
      operationId: getKycIdVerificationSupportedDocTypes
      parameters:
      - name: country
        in: query
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/Country_1'
        example: US
      responses:
        "200":
          description: List Contacts for a Rapyd Wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_86'
  /v1/verify/applications/types/country/{country}:
    get:
      tags:
      - Verify
      summary: List Rapyd Verify Application Types.
      description: Retrieve a List types of identity verification applications by
        country. You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-rapyd-verify-application-types.html
      operationId: getApplicationTypesByCountry
      parameters:
      - name: country
        in: path
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Country_1'
      responses:
        "200":
          description: List types of identity verification applications by country.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_87'
  /v1/verify/applications/status/{application}:
    get:
      tags:
      - Verify
      summary: Retrieve Status of Rapyd Verify Application
      description: Retrieve the status of an application for verification of identity.
        You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-status-of-rapyd-verify-application.html
      operationId: getApplicationStatus
      parameters:
      - name: application
        in: path
        description: ID of the application. String starting with app_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List types of identity verification applications by country.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_88'
  /v1/verify/applications/hosted:
    post:
      tags:
      - Verify
      summary: Create Rapyd Verify Application
      description: |
        Create an application for Rapyd Verify where the client (applicant) provides information directly to Rapyd. After the applicant submits the application on the hosted page, Rapyd verifies the information. When the status of the application changes, Rapyd sends you a webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-rapyd-verify-application.html
      operationId: createHostedApplicationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applications_hosted_body'
      responses:
        "200":
          description: Hosted application details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
  /v1/verify/applications/hosted/{verifyAppId}:
    get:
      tags:
      - Verify
      summary: Create Rapyd Verify Application
      description: Retrieve Rapyd Verify Application
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-rapyd-verify-application.html
      operationId: getHostedApplicationByToken
      parameters:
      - name: verifyAppId
        in: path
        description: ID of the Rapyd Verify application. String starting with happ_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Hosted application details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_90'
components:
  schemas:
    ApplePayObject:
      required:
      - display_name
      - initiative_context
      type: object
      properties:
        display_name:
          type: string
          description: "The canonical name for the client's business, suitable for\
            \ display. 64 or fewer UTF-8 characters. Relevant to Apple Pay."
        initiative_context:
          type: string
          description: "The client's fully qualified domain name, without the final\
            \ period. For example, **acmegeneralproducts.rapyd.net**"
    ApplePayObjectResponse:
      type: object
      properties:
        display_name:
          type: string
          description: "The canonical name for the client's business, suitable for\
            \ display. 64 or fewer UTF-8 characters. Relevant to Apple Pay."
        domainName:
          type: string
          description: The domain name of the client's ecommerce site.
        epochTimestamp:
          type: number
          description: "Time of creation of the Apple Pay session, in Unix time."
        expiresAt:
          type: number
          description: "Time of expiration of the Apple Pay session, in Unix time."
        merchantIdentifier:
          type: string
          description: Your Apple Pay merchant ID.
        merchantSessionIdentifier:
          type: string
          description: Your Apple Pay session ID.
        nonce:
          type: string
          description: A string that uniquely identifies each call to Apple Pay.
        retries:
          type: number
          description: The number of previous attempts to get an Apple Pay Session
            object.
        signature:
          type: string
          description: Digital signature that validates the authenticity and integrity
            of a digital wallet payment.
    EntityTypeVerify:
      type: string
      enum:
      - Partnership
      - Sole Proprietor
      - Private Limited Company
      - Charity or NPO
      - Individual
    VerifyHostedAppResponse:
      type: object
      properties:
        token:
          type: string
          description: Identifier of the hosted application. String starting with
            happ_.
          example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
        rapyd_entity_token:
          type: string
          description: The ID of the Rapyd wallet of the company. String starting
            with ewallet_. Must be a company type wallet.
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing Back to
            Website to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing Close to
            exit the hosted page. This URL overrides the merchant_website URL. Does
            not support localhost URLs.
        client_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        application_token:
          type: string
          description: Identifier of the application. String starting with app_.
        phone_number:
          type: string
          description: The phone number of the applicant. This is the phone number
            where an authentication code is sent. Must have a leading plus sign (+).
        merchant_details:
          $ref: '#/components/schemas/VerifyHostedAppResponse_merchant_details'
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
          x-note: |
            The redirect_url value in the response provides the link to the hosted application. When the customer browses to the URL, Rapyd sends an authentication code to the applicant's phone. For the sandbox, the authentication code is 111111.
        metadata:
          type: object
          description: A JSON object defined by the client
        authorized_user_email:
          type: string
          description: ""
    Account:
      type: object
      properties:
        alias:
          type: string
          description: Three-letter ISO 4217 code for the currency of the account.
        balance:
          type: number
          description: Available funds in the account.
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          type: string
          description: ID of the account. UUID
        limit:
          type: string
        limits:
          type: array
          items:
            $ref: '#/components/schemas/Limit'
        on_hold_balance:
          type: number
          description: Amount in the on-hold balance of the account.
        received_balance:
          type: number
          description: Amount of escrow funds in the account.
        reserve_balance:
          type: number
          description: Amount in the reserve balance of the account.
    Address:
      required:
      - line_1
      - name
      type: object
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking."
        city:
          type: string
          description: City portion of the address. Required for issuance of a card
            to the wallet contact.
        country:
          $ref: '#/components/schemas/Country'
        created_at:
          type: number
          description: "Time of creation of the payment, in Unix time. Response only."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking."
        id:
          type: string
          description: ID of the Address object. String starting with **address_**.
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name."
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        line_3:
          type: string
          description: "Line 3 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: "The name of a contact person or an 'in care of' person at\
            \ this address. For a **personal** wallet contact type, alphabetic characters\
            \ and spaces.A JSON object defined by the client."
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique.
        state:
          type: string
          description: State or province portion of the address.
        zip:
          type: string
          description: Postal code portion of the address.
      description: address associated with this specific Rapyd entity Payment/Customer
        etc...
    AddressResponse:
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking."
        city:
          type: string
          description: City portion of the address.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        created_at:
          type: number
          description: "Time of creation of the object, in Unix time."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking."
        id:
          type: string
          description: ID of the `address` object.
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name."
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        line_3:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        metadata:
          description: A JSON object defined by the client.
        name:
          type: string
          description: "The name of a contact person or an 'in care of' person at\
            \ this address. For a **personal** wallet contact type, alphabetic characters\
            \ and spaces.A JSON object defined by the client."
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique.
        state:
          type: string
          description: State or province portion of the address.
        zip:
          type: string
          description: Postal code portion of the address.
    PayoutAmountRangePerCurrency:
      type: array
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      items:
        $ref: '#/components/schemas/PayoutAmountRangePerCurrency_inner'
    VirtualAccountIssuing:
      type: object
      properties:
        id:
          type: string
          description: ID of the virtual account number object. String starting with
            issuing_.
        merchant_reference_id:
          type: string
          description: Identifier defined by the client for reference purposes. Limit
            - 45 characters.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that the virtual account is attached
            to. String starting with ewallet_.
        bank_account:
          type: object
          description: Details about the virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: |
            Indicates the status of the virtual account. * ACT (Active) * CLO (Closed)  * ERR (Error)  * PEN (Pending)  * REJ (REjected)  * DIS  * ENA
          example: ACT
          enum:
          - ACT
          - CLO
          - ERR
          - PEN
          - REJ
          - DIS
          - ENA
        description:
          type: string
          description: "Description of the transaction, as defined by the client."
        funding_instructions:
          type: object
          description: Issuied virtual account funding instructions.
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency_1'
        requested_currency:
          type: string
          description: |
            Currency received by the virtual account after conversion. One of the following: AUD - Australian Dollar EUR - Euro GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD - US Dollar
        transactions:
          type: array
          description: Issuied virtual account transactions.
          items:
            $ref: '#/components/schemas/VirtualAccountTransactionResponse'
    Beneficiary:
      type: object
      properties:
        aba:
          type: string
          description: American Bankers Association routing transit number. United
            States.
        account_number:
          type: string
          description: The person's account number.
        ach_code:
          type: string
          description: Automated Clearing House (ACH) code.
        additional_data:
          type: object
          description: Additional data required by the payout method. Object.
        additional_last_name:
          type: string
          description: The person's second last name.
        address:
          type: string
          description: Street and number portion of the person's address.
          example: "23 NY, US"
        bank_account_holder_name:
          type: string
          description: Name of the account holder.
        bank_account_type:
          type: string
          description: "Type of bank account, such as checking or savings."
        bank_address:
          type: string
          description: Street and number portion of the bank's address.
        bank_branch_code:
          type: string
          description: Identifier for the bank branch.
        bank_branch_name:
          type: string
          description: Name of the bank branch.
        bank_city:
          type: string
          description: City portion of the bank's address.
        bank_code:
          type: string
          description: Domestic identifier of the bank.
          example: CNFC120452
        bank_country:
          type: string
          description: Two-letter ISO 3166-1 ALPHA-2 code for the bank's country.
        bank_name:
          type: string
          description: Name of the bank.
          example: Central Bank
        bank_province:
          type: string
          description: State or province portion of the bank's address.
        beneficiary_bic_local:
          type: string
          description: NA.
        beneficiary_relationship:
          type: string
          description: Relationship between the sender and the beneficiary.
          example: Friend
        bic_swift:
          type: string
          description: BIC (SWIFT) code for the bank account.
          example: 12345678XXX
        bsb_code:
          type: string
          description: Bank State Branch code for Australia.
        card_expiration_month:
          type: string
          description: The cardâ€™s expiration month.
        card_expiration_year:
          type: string
          description: The cardâ€™s expiration year.
        card_number:
          type: string
          description: The card number.
        category:
          $ref: '#/components/schemas/Category'
        city:
          type: string
          description: City portion of the address.
          example: New York
        clabe:
          type: string
          description: Standardized bank code for Mexico.
        cnaps:
          type: string
          description: China National Advanced Payments System (CNAPS) code number.
        company_name:
          type: string
          description: Name of the beneficiary company. Relevant when entity_type
            is company.
          example: Rapyd
        confirmation_required:
          type: boolean
          description: Indicates whether the beneficiary must respond to accept or
            decline a payout. Default is false. Relevant to the rapyd_ewallet payout
            method type
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        date_of_birth:
          type: string
          description: The person's date of birth.
        date_of_incorporation:
          type: string
          description: Date of incorporation of the corporation.
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
        email:
          type: string
          description: The person's email address.
        entity_type:
          $ref: '#/components/schemas/EntityType'
        ewallet:
          type: string
          description: ID of the wallet that the money is transferred to. String starting
            with **ewallet_**. Relevant to payout to Rapyd Wallet.
        first_name:
          type: string
          description: First name of the beneficiary. Relevant when **entity_type**
            is individual.
          example: John
        iban:
          type: string
          description: International Bank Account Number.
          example: "12873045315519"
        id:
          type: string
          description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
            Response only.
          example: beneficiary_8ba699483c80b7fb9f7e658be3275703
        id_date_of_issue:
          type: string
          description: The date of issuance of the person's identification document.
          example: 27/10/2019
        id_issue_authority:
          type: string
          description: The government agency that issued the person's identification
            document.
          example: Indian Government
        id_issue_location:
          type: string
          description: The location where the person's identification document was
            issued.
          example: INDIA
        identification_type:
          type: string
          description: |
            Type of identification document for the beneficiary. When entity_type is company, this field must be company_registered_number.
            When entity_type is individual, one of the following values: * drivers_license * identification_id * international_passport * residence_permit* social_security * work_permit
          example: drivers_license
        identification_value:
          type: string
          description: identification number on the document mentioned in identification_type.
          example: AYKI86547930
        ifsc:
          type: string
          description: Indian Financial System Code for a bank branch.
        issuer_code:
          type: string
          description: NA.
        last_name:
          type: string
          description: Last name of the beneficiary. Relevant when `entity_type` is
            individual.
          example: Doe
        merchant_reference_id:
          type: string
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
          example: GHY-0YU-HUJ-POI
        middle_name:
          type: string
          description: The person's middle name.
        mobile_number:
          type: string
          description: Mobile phone number in E.164 format.
        name:
          type: string
          description: The person's full name.
          example: John Doe
        nationality:
          type: string
          description: The person's nationality.
          example: Indian
        payment_type:
          type: string
          description: "Additional classification of the type of payment, as required\
            \ by the bank. Possible values: priority , regular"
        phone_country_code:
          type: string
          description: The country code of the person's phone.
          example: "1"
        phone_number:
          type: string
          description: Phone number in E.164 format.
        postcode:
          type: string
          description: Postal code portion of the address.
          example: "110004"
        province:
          type: string
          description: Province portion of the address.
        purpose_code:
          type: string
          description: Purpose of the transaction.
        routing_code_type_1:
          type: string
          description: NA.
        routing_code_type_2:
          type: string
          description: NA.
        routing_code_type_3:
          type: string
          description: NA.
        routing_code_value_1:
          type: string
          description: NA.
        routing_code_value_2:
          type: string
          description: NA.
        routing_code_value_3:
          type: string
          description: NA.
        sort_code:
          type: string
          description: Routing number for the UK.
        state:
          type: string
          description: State portion of the address.
          example: New York
        statement_narrative:
          type: string
          description: Additional description suitable for a customer transaction
            statement.
        suburb:
          type: string
          description: District of the sender's or beneficiary's city.
        tax_id:
          type: string
          description: Tax identification number.
          example: AIYPK06263
        vpa:
          type: string
          description: Virtual Payment Address.
    Category:
      type: string
      enum:
      - bank
      - card
      - cash
      - ewallet
      - rapyd_ewallet
      - bank_redirect
      - bank_transfer
    CardTransaction:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the transaction, in units defined in currency. Decimal,\
            \ including the correct number of decimal places for the currency exponent,\
            \ as defined in ISO 2417:2015. Response only."
        auth_code:
          type: string
          description: Authorization code sent to the merchant. Relevant to authorizations
            approved by Rapyd. Response only.
        authorization_approved_by:
          type: string
          description: Approver of the transaction when remote authorization is used.
            See Remote Authorization.
        bin:
          type: string
          description: The first 6 digits of the card number. Response only.
        card_authorization:
          type: string
        card_id:
          type: string
          description: ID of the card. String starting with card_. Response only.
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**. Response only.
        created_at:
          type: number
          description: "Time of creation of the transaction object, in Unix time.\
            \ Response only."
        currency:
          $ref: '#/components/schemas/Currency'
        fx_rate:
          type: number
          description: The exchange rate. Response only.
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        issuing_txn_type:
          type: string
          description: Type of the transaction.
        last4:
          type: string
          description: The last 4 digits of the card number. Response only.
        merchant_category_code:
          type: string
          description: "Four-digit merchant category code (MCC) of the initiator of\
            \ the transaction, as defined in ISO 18245. Response only."
        merchant_name_location:
          type: string
          description: Name and location of the merchant. Maximum 40 characters. Response
            only.
        original_transaction_id:
          type: string
          description: ID of the original card transaction. Response only.
        original_txn_amount:
          type: number
          description: "Original amount for FX transactions, when currency is different\
            \ from original_txn_currency. Response only."
        original_txn_currency:
          type: string
          description: Original currency in FX transaction. Three-letter ISO 4217
            code. Response only.
        pos_entry_mode:
          type: string
          description: The mode of the POS entry. One of the following
          enum:
          - magstripe
          - manual_entered
          - emv
          - emv_standin
          - nfc
          - network_token
          - ecommerce
          - 3ds_ecommerce
          - adjustment
        retrieval_reference_number:
          type: string
          description: Reserved.
        systems_trace_audit_number:
          type: string
          description: Reserved
        wallet_transaction_id:
          type: string
          description: ID of the wallet transaction. String starting with **wt_**.
            Response only.
    Contact:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        business_details:
          $ref: '#/components/schemas/ContactBusiness'
        compliance_profile:
          type: number
          description: Indicates the degree to which this contact can use the wallet.
        contact_type:
          type: string
          description: Type of contact.
          enum:
          - personal
          - business
        country:
          $ref: '#/components/schemas/Country'
        created_at:
          type: number
        date_of_birth:
          type: string
          description: Date of birth of the individua
        email:
          pattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
          type: string
          description: Email address of the contact
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with **ewallet_**.
        first_name:
          type: string
          description: First name of the personal contact or primary person associated
            with the business contact.
        gender:
          type: string
          description: Gender of the personal contact or primary person associated
            with the business contact
          enum:
          - male
          - female
          - other
          - not_applicable
        house_type:
          type: string
          description: Description of the type of residency at the contact's residence.
          enum:
          - lease
          - live_with_family
          - own
          - owner
          - month_to_month
          - housing_project
        id:
          type: string
          description: ID of the contact object. String starting with cont_.
        identification_number:
          type: string
          description: ID number as shown by the ID document.
        identification_type:
          type: string
          description: Type of the identification document associated with the contact.
            Uppercase.
        issued_card_data:
          type: object
          description: Describes additional information about the business contact
            for a company wallet.
        last_name:
          type: string
          description: Family name of the personal contact or primary person associated
            with the business contact. Required for issuing a card to a personal contact.
        marital_status:
          type: string
          description: Marital status of the personal contact or primary person associated
            with the business contact.
          enum:
          - married
          - single
          - divorced
          - widowed
          - cohabiting
          - not_applicable
        metadata:
          type: object
          description: A JSON object defined by the client.
        middle_name:
          type: string
          description: Middle name of the personal contact or primary person associated
            with the business contact.
        mothers_name:
          type: string
          description: Name of the contact's mother
        nationality:
          $ref: '#/components/schemas/Country'
        phone_number:
          type: string
          description: Phone number of the contact in E.164 format.
        second_last_name:
          type: string
          description: Second last name of the personal contact or primary person
            associated with the business contact.
        send_notifications:
          type: boolean
          description: Determines whether Rapyd sends notifications to the contact.
            Default is false.
          default: false
        verification_status:
          type: string
          description: Result of the verification check.
          enum:
          - not verified
          - KYCd
        contact_reference_id:
          type: string
          description: Reference ID for the contact. Limited to 45 characters. Should
            be unique per merchant per e-wallet.
    ContactBusiness:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        annual_revenue:
          type: number
          description: Annual revenue of the business in US dollars. Maximum value
            100000000000000. Decimal.
        cnae_code:
          type: string
          description: "Business activity code of the business, according to the ClassificaÃ\
            §Ã£o Nacional de Atividades EconÃ´micas of Brazil. Alphanumeric string.\
            \ Maximum 7 characters."
        created_at:
          type: number
          description: "Time of creation of the business_details object, in Unix time.\
            \ Response only."
        entity_type:
          type: string
          description: Type of business entity
          enum:
          - sole_prop
          - partnership
          - company
          - government
          - charity
          - NPO
          - association
          - trust
        establishment_date:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Date that the business was established. Format YYYY-MM-DD
        id:
          type: string
          description: ID of the business_details object. String starting with busi_.
        industry_category:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: Name of the industry that this business belongs to. Required.
            Alphanumeric string with no special characters.
        industry_sub_category:
          type: string
          description: Subcategory of the industry that this business belongs to.
        legal_entity_type:
          type: string
          description: Type of legal entity. Alphanumeric string.
        name:
          type: string
          description: Business name.
        registration_number:
          type: string
          description: Registration number.
    Country:
      type: string
      description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
        The two-letter prefix of the payout method type must match the beneficiary
        country code.
    Currency:
      pattern: /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/
      type: string
    DailyRate:
      type: object
      properties:
        action_type:
          type: string
          description: "The type of transaction that the currency exchange applies\
            \ to. One of the following - payment, payout"
        buy_amount:
          type: number
          description: "If fixed_side is buy, the value of amount. If fixed_side is\
            \ sell, the value of buy_currency following the currency exchange transaction.\
            \ Relevant when amount and `fixed_side` are specified."
        buy_currency:
          type: string
          description: The currency purchased in the currency exchange transaction.
            Three-letter ISO 4217 code. Uppercase.
        date:
          type: string
          description: The date when the rate is applicable. Today or earlier. Format
            is YYYY-MM-DD. Default is today.
          format: date
        fixed_side:
          type: string
          description: "Indicates which currency the rate is fixed for. One of the\
            \ following : * buy - The currency defined by buy_currency. * sell : The\
            \ currency defined by sell_currency."
        rate:
          type: number
          description: The exchange rate. Includes FX markup fees.
        sell_amount:
          type: number
          description: "If `fixed_side` is **sell**, the value of amount. If `fixed_side`\
            \ is **buy**, the value of `sell_currency` following the currency exchange\
            \ transaction. Relevant when `amount` and `fixed_side` are specified."
          format: float
        sell_currency:
          type: string
          description: Selling currency
      description: Describes currency conversion for payments and payouts. Rapyd uses
        a snapshot of daily foreign exchange rates fetched at 9 PM UTC. The rate returned
        includes the FX markup fees.
    EntityType:
      type: string
      enum:
      - company
      - individual
    EwalletTransactionDetails:
      type: object
      properties:
        action_data:
          type: object
        metadata:
          type: object
        amount:
          type: number
          description: "Amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 4217:2015."
        balance:
          type: number
          description: The updated wallet balance after successful completion of the
            transaction.
        balance_type:
          type: string
          description: Balance type affected by the transaction. One of the following
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with **wt_** or UUID.
        reason:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        status:
          type: string
          description: Status of the transaction.
        type:
          type: string
          description: Type of transaction
        subtype:
          type: string
          description: Sub type of the transaction
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/EwalletTransaction'
        - $ref: '#/components/schemas/EwalletTransactionP2PAdditionlData'
      - $ref: '#/components/schemas/EwalletTransaction'
    EwalletTransactionP2PDetails:
      type: object
      properties:
        action_data:
          type: object
        metadata:
          type: object
        amount:
          type: number
          description: "Amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 4217:2015."
        balance:
          type: number
          description: The updated wallet balance after successful completion of the
            transaction.
        balance_type:
          type: string
          description: Balance type affected by the transaction. One of the following
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with **wt_** or UUID.
        reason:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        status:
          type: string
          description: Status of the transaction.
        type:
          type: string
          description: Type of transaction
        subtype:
          type: string
          description: Sub type of the transaction
        destination_ewallet_id:
          type: string
          description: Beneficiary wallet ID
        source_ewallet_id:
          type: string
          description: Source wallet ID
    EwalletTransaction:
      type: object
      properties:
        metadata:
          type: object
        amount:
          type: number
          description: "Amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 4217:2015."
        balance:
          type: number
          description: The updated wallet balance after successful completion of the
            transaction.
        balance_type:
          type: string
          description: Balance type affected by the transaction. One of the following
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        destination_balance_type:
          type: string
          description: The destination balance type when funds are transferred from
            one balance to another within the wallet.
          nullable: true
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**. Response only.
          nullable: true
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with wt_ or UUID.
        reason:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        source_balance_type:
          type: string
          description: The source balance type when funds are transferred from one
            balance to another within the wallet
          nullable: true
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
          nullable: true
        status:
          type: string
          description: Status of the transaction.
        type:
          type: string
          description: Type of transaction
        subtype:
          type: number
          description: Subtype of the transaction.
        action_data:
          type: object
    EwalletTransactionP2PAdditionlData:
      type: object
      properties:
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with ewallet_.
          nullable: true
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            ewallet_. Response only.
          nullable: true
    Ewallet:
      type: object
      properties:
        accounts:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/Account'
        category:
          type: string
          description: Indicates the type of client wallet
          enum:
          - collect
          - disburse
          - card_authorization
          - general
        contacts:
          $ref: '#/components/schemas/Ewallet_contacts'
        email:
          type: string
          description: Email address of the wallet owner. Response only. Deprecated.
        ewallet_reference_id:
          type: string
          description: Wallet ID defined by the customer or end user. Must be unique.
        first_name:
          type: string
          description: First name of the wallet owner.
        id:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        last_name:
          type: string
          description: Last name of the wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
        phone_number:
          type: string
          description: Phone number of the wallet owner in E.164 format. Response
            only. Deprecated.
        status:
          type: string
          description: Status of the wallet
          enum:
          - ACT
          - DIS
        type:
          type: string
          description: Type of wallet.
          enum:
          - company
          - person
          - client
        verification_status:
          type: string
          description: Result of the verification check.
    Field:
      type: object
      properties:
        code:
          type: string
          description: Three-letter alphabetic ISO 4217 code for the official currency
            used in the country.
        is_required:
          type: boolean
          description: Whether the field is always required for using the payment
            method
        is_updatable:
          type: boolean
          description: Indicates whether the field can be updated with Update Payment
            Method
        instructions:
          type: string
        name:
          type: string
          description: Name of the currency in English.
        numeric_code:
          type: string
          description: Three-letter ISO numeric 4217 code for the currency.
        required_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        type:
          type: string
          enum:
          - boolean
          - number
          - string
          - object
        regex:
          type: string
          description: A regular expression that defines the format when type is string.
        conditions:
          type: array
          description: "Defines specific conditions when a field is required for a\
            \ payment method. When the conditions defined by conditions are met, the\
            \ field is required even though the value of `is_required` is **false**."
          items:
            $ref: '#/components/schemas/Field_conditions'
        description:
          type: string
          description: Description of the field.
      description: Field Object
    FxFee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
        value:
          type: number
          description: The amount of the fee. Percentage.
          example: 2.5
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
    Limit:
      type: object
      properties:
        amount:
          type: number
          description: The amount of the limit.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency of an existing
            account.
        type:
          type: string
          description: The limit type.
        updated_at:
          type: integer
    gender:
      type: string
      description: Gender of the individual. Required when `entity_type` is **individual**.
      enum:
      - male
      - female
      - other
      - not_applicable
    VirtualAccountTransactionResponse:
      type: object
      description: virtual account transaction.
      allOf:
      - $ref: '#/components/schemas/IssuingTransactionFxData'
      - properties:
          account_id:
            type: string
            description: ID of the virtual bank account.
          account_id_type:
            type: string
            description: Type of the virtual account number.
          amount:
            type: number
            description: "Amount of the transaction, in units defined in currency."
          created_at:
            type: integer
            description: "Timestamp for the transaction, in Unix time"
          currency:
            type: string
            description: Currency of the account. Three-letter ISO 4217 code.
          ewallet:
            type: string
            description: ID of the Rapyd Wallet that is attached to the virtual account.
              String starting with ewallet_.
          id:
            type: string
            description: ID of the transaction. String starting with isutran_.
    IssuingTransactionFxData:
      type: object
      properties:
        original_amount:
          type: number
          description: "The amount sent by the sender to the virtual account, in units\
            \ of the currency defined in original_currency."
        original_currency:
          $ref: '#/components/schemas/Currency_1'
        fx_rate:
          type: number
          description: Currency conversion rate for the transaction.
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
    Payout:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the payout, in units defined by payout_currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015. Same as payout_amount. Response\
            \ only."
          example: 1000
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        created_at:
          type: integer
          description: "Time of creation of the payout, in Unix time. Response only."
        description:
          type: string
          description: Description of the payout transaction.
        error:
          type: string
          description: Indicates the error code of the last unsuccessful operation
            on the Payout object.
          nullable: true
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive
            the funds.
        ewallets:
          type: array
          description: "An array of one object, which contains the following fields:\
            \ * ewallet_id - The ID of the wallet that the money is transferred from,\
            \ a string starting with **ewallet_**. * amount - Amount of the transaction\
            \ in currency units defined in currency. * percent - A decimal number\
            \ representing a percentage of the total payout. Response only."
          items:
            $ref: '#/components/schemas/Payout_ewallets'
        expiration:
          type: number
          description: "Determines the day the payout expires, in Unix time. The payout\
            \ must be completed before the start of this day. Relevant to cash payout\
            \ methods where the is_expirable field is true in the response to List\
            \ Payout Method Types."
          nullable: true
          example: 1607941348
        fx_rate:
          type: number
          description: Currency conversion rate for the payout. Decimal. Response
            only.
        gc_error_code:
          type: string
          description: Reserved. Response only.
          nullable: true
        id:
          type: string
          description: ID of the payout. String starting with **payout_**.
          example: payout_548969fc5a0bf89da3cec70a1529338c
        identifier_type:
          type: string
          description: Reserved. Response only.
          nullable: true
        identifier_value:
          type: string
          description: Reserved. Response only.
          nullable: true
        instructions:
          type: array
          description: |
            Describes how the customer collects the payout. Contains the following fields: * name - Short description of the instructions. * steps - A 'steps' object containing a list of steps for the customer to take. Each step is named stepN, where N is an integer.
          items:
            $ref: '#/components/schemas/Payout_instructions'
        instructions_value:
          type: object
          description: "Additional information from the merchant. For example, the\
            \ merchant's instructions and transaction number that must be presented\
            \ for collecting the payout."
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          nullable: true
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        paid_amount:
          type: number
          description: "Cumulative amount received by the beneficiary, in units defined\
            \ by payout_currency. Response only."
          example: 1000
        paid_at:
          type: string
          description: "Time of the payout, in Unix time. Response only."
          nullable: true
          example: "1607941348"
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_fees:
          $ref: '#/components/schemas/PayoutFees'
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country computed.
          example: us_general_bank
        payout_type:
          type: string
          description: The type of the payout method.
          example: bank
          enum:
          - card
          - cash
          - ewallet
          - bank
          - rapyd_ewallet
        sender:
          $ref: '#/components/schemas/Sender'
        sender_amount:
          type: number
          description: "Amount that the sender is paying in units of the currency\
            \ defined in sender_currency. \nThis amount remains the same regardless\
            \ of FX fees. Required when payout_amount is not used. Decimal.\n"
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        statement_descriptor:
          type: string
          description: A statement that includes the reason for the payout. Limited
            to 35 characters.
        status:
          $ref: '#/components/schemas/PayoutStatus'
    PayoutFees:
      type: object
      properties:
        fx_fee:
          $ref: '#/components/schemas/FxFee'
        gross_fees:
          type: number
          description: "The total gross fees for the transaction, in units defined\
            \ by currency_code. Relevant to responses."
          example: 4.23
        net_fees:
          type: number
          description: "The total net fees for the transaction, in units defined by\
            \ merchant_requested_currency. Relevant to responses."
          example: 0
        transaction_fee:
          $ref: '#/components/schemas/TransactionFee'
      nullable: true
    PayoutMethodType:
      type: object
      properties:
        amount_range_per_currency:
          type: array
          description: |-
            An array of objects that describe limits on the amount, per currency. Contains the following fields:
            maximum_amount - Maximum amount supported by this payout method for the indicated currency. Decimal number.
            minimum_amount - Minimum amount supported by this payout method for the indicated currency. Decimal number.
            * payout_currency - Currency of the payout. Three-letter ISO 4217 code. Uppercase.
          items:
            $ref: '#/components/schemas/PayoutAmountRangePerCurrency'
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        beneficiary_entity_types:
          type: array
          description: "A list of the beneficiary entity types supported by this payout\
            \ method. One or more of the following: company individual Response only."
          example:
          - company
          - individual
          items:
            $ref: '#/components/schemas/EntityType'
        category:
          $ref: '#/components/schemas/Category'
        image:
          type: string
          description: URL of an image that the merchant can use to represent the
            payout method.
        is_cancelable:
          type: integer
          description: Indicates whether the payout can be canceled. Relevant when
            category is cash. One of the following values 0 - Not cancelable. 1 -
            cancelable.'
        is_expirable:
          type: integer
          description: Indicates whether the payout expires if not completed. Relevant
            when category is cash. One of the following values 0 - Not expirable.
            1 - expirable.'
        is_location_specific:
          type: integer
          description: Indicates whether the payout must be made at a specific physical
            location. Relevant when category is cash. One of the following values
            0 - Not locationspecific. 1 - location specific.'
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
        name:
          type: string
          description: Payout method name.
        payout_currencies:
          type: array
          description: A list of the currencies supported by this payout method. Three-letter
            ISO 4217 code. Uppercase. Response only.
          example:
          - USD
          items:
            $ref: '#/components/schemas/Currency'
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when default_payout_method_type
            is not used.
          example: us_general_bank
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currencies:
          type: array
          description: List of currencies that the sender is paying with. Currency
            consists of a three-letter ISO 4217 code. Response only.
          example:
          - USD
          items:
            $ref: '#/components/schemas/Currency'
        sender_entity_types:
          type: array
          description: |
            A list of the sender entity types supported by this payout method. One or more of the following:
            company
            individual
            Response only.
          example:
          - company
          - individual
          items:
            $ref: '#/components/schemas/EntityType'
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive
            the funds.
        status:
          type: integer
          description: "Indicates whether the payout method is currently available.\
            \ One of the following values: 0 - Not available. 1 - Available."
    PayoutMethodTypeDetails:
      type: object
      properties:
        batch_file_header:
          type: string
          description: concatenation of all fields.
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        beneficiary_entity_type:
          $ref: '#/components/schemas/EntityType'
        beneficiary_required_fields:
          type: array
          description: Lists all the beneficiary required fields for payout method
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
        image:
          type: string
          description: URL of an image that the merchant can use to represent the
            payout method.
        is_cancelable:
          type: integer
          description: Indicates whether the payout can be canceled. Relevant when
            category is cash. One of the following values 0 - Not cancelable. 1 -
            cancelable.'
        is_expirable:
          type: integer
          description: Indicates whether the payout expires if not completed. Relevant
            when category is cash. One of the following values 0 - Not expirable.
            1 - expirable.'
        is_location_specific:
          type: integer
          description: Indicates whether the payout must be made at a specific physical
            location. Relevant when category is cash. One of the following values
            0 - Not location specific. 1 - location specific.'
        is_online:
          type: boolean
          description: "Indicates whether the payout is made automatically, without\
            \ any action by the beneficiary."
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when default_payout_method_type
            is not used.
          example: us_general_bank
        payout_options:
          type: array
          description: Lists all the payout options for payout method.
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
        sender_required_fields:
          type: array
          description: Lists all the sender required fields for payout method
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
        status:
          type: integer
          description: "Indicates whether the payout method is currently available.\
            \ One of the following values: 0 - Not available. 1 - Available."
    PayoutRequest:
      type: object
      properties:
        beneficiary:
          description: String starting with beneficiary_ or the object describing
            the beneficiary.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/Beneficiary'
        beneficiary_country:
          type: string
          description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
            Uppercase.
          example: US
        beneficiary_entity_type:
          type: string
          description: "Type of entity for the beneficiary. One of the following:\
            \ individual, company"
          enum:
          - individual
          - company
        confirm_automatically:
          type: boolean
          description: Determines whether completion of the payout requires confirmation
            of the FX rate. Relevant to payouts with foreign exchange. Default is
            false.
          default: false
        converstion_rate:
          type: number
          description: conversion rate
          default: 1
        description:
          type: string
          description: Description of the payout transaction.
        ewallet:
          type: string
          description: ID of the wallet that the money is transferred from. String
            starting with ewallet_.
          example: ewallet_4f1757749b8858160274e6db49f78ff3
        expiration:
          type: string
          description: "Determines the day the payout expires, in Unix time. The payout\
            \ must be completed before the start of this day. Relevant to cash payouts."
          example: "1607941348"
        location:
          type: string
          description: Location of the payout transaction.
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        payout_amount:
          type: number
          description: "Amount of the payout, in units of the currency defined in\
            \ payout_currency. Mandatory when sender_amount is not used. Decimal."
          example: 110
        payout_currency:
          $ref: '#/components/schemas/Currency_1'
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when the beneficiary does not have
            a default payout method type.
          example: us_general_bank
        payout_options:
          type: object
          description: Payout options
        sender:
          description: String starting with sender_ or the object describing the sender.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/Sender'
        sender_country:
          $ref: '#/components/schemas/Country_1'
        sender_currency:
          $ref: '#/components/schemas/Currency_1'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
        statement_descriptor:
          type: string
          description: A statement that includes the reason for the payout. Limited
            to 35 characters.
    PayoutRequiredFields:
      type: object
      properties:
        allowed_values:
          type: string
          description: List out the allowed values
        description:
          type: string
          description: Description of the field
        is_required:
          type: boolean
          description: Indicates whether the field is always required for using the
            payout method
        name:
          type: string
          description: Name of the field
        regex:
          type: string
          description: |
            A regular expression that defines the format when type is string. Note: Rapyd uses a unique variant of the regex standard. See note in           "https://docs.rapyd.net/en/get-payment-method-required-fields.html"
        transfer_type:
          type: string
          description: Indicates transfer type of the payout
        type:
          type: string
          description: Indicates datatype of the field
          enum:
          - boolean
          - number
          - string
    PayoutStatus:
      type: string
      enum:
      - Created
      - Completed
      - Canceled
      - Rejected
      - Error
      - Confirmation
      - Expired
      - Returned
    Sender:
      type: object
      properties:
        account_number:
          type: string
          description: Bank account number of sender.
          example: "10285730135312349"
        additional_data:
          type: object
          description: Additional data required by the payout method. Object..
        additional_last_name:
          type: string
          description: The person's second last name.
        address:
          type: string
          description: The address of the sender.
        bank_code:
          type: string
          description: Domestic identifier of the bank.
        bank_name:
          type: string
          description: Name of the bank.
        beneficiary_relationship:
          type: string
          description: "When the beneficiary is not a relative of the sender, the\
            \ relationship should be specified as client or non-relative."
        city:
          type: string
          description: City where the sender is located.
          example: New York
        company_name:
          type: string
          description: Name of the sender company. Relevant when entity_type is company.
          example: ABC
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        date_of_birth:
          type: string
          description: The date of birth of the sender. Relevant when entity_type
            is individual.
          example: 18/03/1990
        date_of_incorporation:
          type: string
          description: Date of incorporation of the corporation.
          example: 18/03/2010
        email:
          type: string
          description: The person's email address.
        entity_type:
          $ref: '#/components/schemas/EntityType'
        first_name:
          type: string
          description: First name of the sender. Relevant when `entity_type` is **individual**.
          example: Scott
        id:
          type: string
          description: ID of the Sender object. String starting with **sender_**.
            Response only.
          example: sender_216cf9141fba698e7dc2729d1f439c1b
        id_date_of_issue:
          type: string
          description: The date of issuance of the person's identification document.
        id_expiry:
          type: string
          description: The expiration date of the person's identification document.
        id_issue_authority:
          type: string
          description: The government agency that issued the person's identification
            document.
        id_issue_location:
          type: string
          description: The location where the person's identification document was
            issued.
        identification_type:
          type: string
          description: "Type of identification document for the sender. When entity_type\
            \ is company, this field must be company_registered_number. When entity_type\
            \ is individual, one of the following values: \n* drivers_license \n*\
            \ identification_id \n* international_passport \n* residence_permit* social_security\
            \ \n* work_permit\n"
          example: drivers_license
        identification_value:
          type: string
          description: identification number on the document mentioned in `identification_type`.
          example: HJKOSN2435460
        last_name:
          type: string
          description: Last name of the sender. Relevant when `entity_type` is individual.
          example: Williams
        merchant_reference_id:
          type: string
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
        middle_name:
          type: string
          description: The person's middle name.
        mobile_number:
          type: string
          description: Mobile phone number in E.164 format.
        name:
          type: string
          description: Name of the sender. Relevant when `entity_type` is company.
          example: Scott Williams
        nationality:
          type: string
          description: The person's nationality.
          example: US
        occupation:
          type: string
          description: The person's occupation.
        phone_country_code:
          type: string
          description: The country code of the person's phone.
        phone_number:
          type: string
          description: Phone number in E.164 format.
        postcode:
          type: string
          description: Postal code of the sender.
          example: "110005"
        province:
          type: string
          description: Province portion of the address.
        purpose_code:
          type: string
          description: Reason for the payout.
        source_of_income:
          type: string
          description: The person's source of income.
        state:
          type: string
          description: State where the sender is located.
          example: New York
        suburb:
          type: string
          description: District of the sender's or beneficiary's city.
        tax_id:
          type: string
          description: Tax identification number.
    TransactionFee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
        fee_type:
          type: string
          description: "One of the following: \npercentage - A percentage of the transaction\
            \ amount. \nFor example, 5 percent is represented by value=5. absolute\
            \ - A fixed amount\n"
          example: absolute
        value:
          type: number
          description: "The amount of the fee. Decimal, including the correct number\
            \ of decimal places for the currency exponent, as defined in ISO 2417:2015.\
            \ If the amount is a whole number, use an integer and not a decimal."
          example: 2
      description: Describes the fee for processing the transaction.
    Transfer:
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency_code:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**. Response only.
        destination_phone_number:
          type: string
          description: "Phone number of the owner of the wallet receiving the money,\
            \ in E.164 format."
        destination_transaction_id:
          type: string
          description: ID of the transaction with regard to the destination. String
            starting with **wt_**.
        id:
          type: string
          description: ID of the transaction. String starting with **wt_** or UUID.
        metadata:
          type: object
          description: A JSON object defined by the client.
        response_metadata:
          type: object
          description: Metadata created with Set Transfer Response. Response only.
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
            Response only.
        source_transaction_id:
          type: string
          description: ID of the transaction with regard to the source. String starting
            with **wt_**.
        status:
          type: string
          description: < Status of the transaction. CAN - Canceled. The transferor
            canceled the transfer. CLO - Closed. The transferee accepted the funds.
            DEC - Declined. The transferee rejected the transfer. EXP - Expired. The
            transferee did not respond before the transfer expired. HLD - Hold. Rapyd
            Protect is putting this transfer on hold and reviewing it. PEN - Pending.
            Waiting for the transferee to accept. REJ - Rejected. Rapyd Protect has
            rejected this transfer.
          enum:
          - CAN
          - CLO
          - DEC
          - EXP
          - HLD
          - PEN
          - REJ
        transfer_response_at:
          type: number
          description: "Time of the Set Transfer Response operation, in Unix time.\
            \ Read-only."
        expiration:
          type: number
          description: "Determines the day the transfer expires, in Unix time. Acceptance\
            \ of the transfer must occur before the start of this day. Default is\
            \ 14 days after creation of the transfer."
    Status:
      type: object
      properties:
        error_code:
          type: string
          description: Error code of the API request.
          example: ""
        message:
          type: string
          description: Description about the API.
          example: ""
        operation_id:
          type: string
          description: Unique identifier to track the request.
          example: 0fd8809c-ed02-4862-9a79-507b9528ac23
        response_code:
          type: string
          description: Response code of the API.
          example: ""
        status:
          type: string
          description: Status of the api indicating success or failure.
          example: SUCCESS
    PaymentAmountRangePerCurrency:
      type: array
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      items:
        $ref: '#/components/schemas/PaymentAmountRangePerCurrency_inner'
    BinDetails:
      type: object
      properties:
        brand:
          type: string
        bin_number:
          type: string
        type:
          type: string
        issuer:
          type: string
        country:
          $ref: '#/components/schemas/Country_1'
        level:
          type: string
      description: "Bank Identification Number (BIN) details. Read-only. Object containing\
        \ the following fields - * bin_number - BIN number * country - The two-letter\
        \ ISO 3166-1 ALPHA-2 code for the country. Uppercase. * funding - Type of\
        \ card funding. One of the following [credit, debit, prepaid, unknown] * bank\
        \ - Name of the issuing bank. Relevant to cards"
    CardTokenResponse:
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Indicates whether the hosted page displays address fields\
            \ to fill in.<BR> * **true** - The address fields are displayed. <BR>\
            \ * **false** - The address fields are displayed only for country codes\
            \ **US**, **GB** and **CA**."
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
          default: "false"
        card_fields:
          $ref: '#/components/schemas/CardTokenResponse_card_fields'
        category:
          type: string
          description: "Category of payment method: **card**."
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.The two-letter ISO 3166-1 ALPHA-2 code
            for the country.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**.
        error_code:
          type: string
          description: Relevant error message and ID number of the error.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        id:
          type: string
          description: "ID of the card token hosted page, a string starting with **hp_card_**."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        merchant_alias:
          type: string
          description: Reserved.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal. See [Customizing Your\
            \ Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        merchant_customer_support:
          $ref: '#/components/schemas/MerchantCustomerSupport'
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: string
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. Range: 1 minute to 30 days."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, **dk_visa_card**. For a list of payment methods, use []List\
            \ Payment Methods by Country](https://docs.rapyd.net/en/list-payment-methods-by-country.html)."
        payment_params:
          $ref: '#/components/schemas/CardTokenResponse_payment_params'
        redirect_url:
          type: string
          description: "URL of the hosted page that is shown to the customer.Contains\
            \ the following fields. When these fields do not include values, the user\
            \ is redirected to the hosted page, and a related status message appears\
            \ at the top of the page."
        status:
          type: string
          description: "Status of the hosted page. One of the following: <BR> * **NEW**\
            \ - The hosted page was created. <BR> * **DON** - Done. The card was added\
            \ to the customer profile. <BR> * **EXP** - The hosted page expired.URL\
            \ of the hosted page that is shown to the customer."
    ClientDetailsObject:
      type: object
      properties:
        ip_address:
          type: string
          description: IP address of the customer.
        java_enabled:
          type: boolean
          description: Indicates whether the browser is enabled for Java.
        java_script_enabled:
          type: boolean
          description: Indicates whether the browser is enabled for JavaScript.
        language:
          type: string
          description: "The language the browser is configured for, as defined in\
            \ IETF BCP 47."
        screen_color_depth:
          type: integer
          description: "Indicates the screen color depth of the customer's browser,\
            \ in bits."
          enum:
          - 1
          - 4
          - 8
          - 15
          - 16
          - 24
          - 32
          - 48
        screen_height:
          type: integer
          description: "Height of the customer's screen, in pixels. 1-6 digits."
        screen_width:
          type: integer
          description: "Width of the customer's screen, in pixels. 1-6 digits."
        time_zone_offset:
          type: integer
          description: Difference in minutes between UTC and the customer's time zone.
            Positive or negative integer.
      description: Describes the fields in the client_details object in REST messages
        for payments. The client_details object describes the browser that the customer
        is using. The client collects this information and sends it as part of the
        Create Payment request. This information is used for processing the 3DS version
        2 authentication of the customer. Note that Client Details information is
        not returned in the API response and it does not appear in any webhooks.
    CheckoutPageResponse:
      type: object
      allOf:
      - $ref: '#/components/schemas/HostedPageStatusBaseResponse'
      - $ref: '#/components/schemas/HostedPageAdditionalResponse'
      - $ref: '#/components/schemas/CheckoutUrlResponse'
    CheckoutUrlResponse:
      type: object
      properties:
        complete_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing Finish
            to exit the hosted page. This URL overrides the merchant_website URL.
            Does not support localhost URLs.
        cancel_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing Back to
            Website to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
    Condition:
      type: object
      properties:
        description:
          type: string
          description: Description of the condition
        element_name:
          type: string
          description: "The name of a field, including the path. The field is the\
            \ first operand of the condition. The path starts with one of the following\
            \ - * payment - The field is a Create Payment body parameter. Not relevant\
            \ to the payment_method and payment_method_options objects. * payment.payment_method_type\
            \ - The field appears in the current Get Payment Method Required Fields\
            \ response under fields or payment_method_options. * organization - The\
            \ field relates to your organization, such as your merchant type category.\
            \ Your organization specifies the field when activating your account.\
            \ See Activating Your Account (KYB)"
        operator:
          type: string
          description: A symbol representing the operator of the condition. String
            starting with $. The operator determines the relationship between the
            operands See documentation - "https://docs.rapyd.net/en/payment-method-type.html"
        threshold_value:
          description: One or more possible values of the element_name field. The
            second operand of the condition "https://docs.rapyd.net/en/payment-method-type.html"
          oneOf:
          - type: string
          - type: integer
    Coupon:
      type: object
      properties:
        amount_off:
          type: number
          description: "The amount of money to subtract from the payment. Decimal.\
            \ Range: Positive decimal number, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015."
          example: 0
        created:
          type: number
          description: "When the coupon was created, in Unix time. Response only."
          example: 1671697165
        currency:
          $ref: '#/components/schemas/Currency_1'
        description:
          type: string
          description: Description of the coupon.
          example: Sample Coupon 1
        discount_duration_in_uses:
          type: number
          description: The number of times that the coupon can be redeemed by a specific
            customer or subscription. Relevant when duration is repeating and redeem_by
            is not set.
          example: 2
        discount_valid_until:
          type: number
          description: "The final date that a discount can be used, in Unix time.\
            \ Relevant when discount_validity_in_months is not set."
          example: 0
        discount_validity_in_months:
          type: number
          description: The number of months after the discount is created that it
            can be used. Relevant when discount_valid_until is not set.
          example: 2
        duration:
          type: string
          description: "Determines how long the discount remains in effect. One of\
            \ the following: \n* forever \n* repeating\n"
          example: forever
          enum:
          - forever
          - repeating
        duration_in_months:
          type: number
          description: Determines the number of months that the coupon remains in
            effect after its creation. Integer. Required when duration is repeating.
          example: 3
        id:
          type: string
          description: "Unique ID for this coupon. English alphanumeric characters\
            \ with no special characters except underscore. If the merchant does not\
            \ define an ID, Rapyd generates a string starting with **coupon_**."
          example: coupon_c1194a18a9972ca7f9804826f00c9eb8
        max_redemptions:
          type: number
          description: "Determines the number of times the coupon can be redeemed.\
            \ The number of customers, subscriptions or orders that the coupon is\
            \ applied to cannot exceed this number. Integer."
          example: 2
        metadata:
          type: object
          description: A JSON object defined by the client.
        percent_off:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: number
          description: "Determines the size of the discount, measured in percent.\
            \ Integer. Range: 1-100."
          example: 10
        redeem_by:
          type: number
          description: "The last time at which the coupon can be redeemed, in Unix\
            \ time. After the redeem_by date, the coupon can no longer be applied\
            \ to new customers. 'redeem_by' takes precedence over the setting of **discount_duration_in_uses**\
            \ and **duration_in_months**."
          example: 0
        times_redeemed:
          type: number
          description: "Indicates the number of times the coupon has been applied\
            \ to a customer, subscription or invoice. If the discount has been used\
            \ more than one time by a customer, subscription or invoice, the number\
            \ of redemptions after the first is also added to this value. Integer.\
            \ When this value equals **max_redemptions**, the coupon becomes no longer\
            \ valid. Response only."
          example: 0
        valid:
          type: boolean
          description: Indicates whether the coupon can be redeemed.
          example: true
      description: "The coupon can be applied to the following objects - * Subscription\
        \ - All charges in the subscription are subject to the discount described\
        \ in the coupon. To add a coupon to a subscription, first use Create Coupon.\
        \ Then add the coupon ID to the coupon field of the subscription with Create\
        \ Subscription or Update Subscription. * Customer - The discount applies to\
        \ all charges to the customer. To add a coupon to a customer, first use Create\
        \ Coupon. Then add the coupon ID to the coupon field of the customer with\
        \ Create Customer or Update Customer. * Order - The discount applies to a\
        \ single order. To add a coupon to an order, first use Create Coupon. The\
        \ duration field of the coupon must be set to repeating, and the duration_in_months\
        \ and discount_duration_in_uses fields must be set to 1. Then add the coupon\
        \ ID to the coupon field of the order with Create an Order or Update Order.\
        \ A coupon can be applied to one or more customers or subscriptions. However,\
        \ a subscription can have only one coupon, and the only way to assign two\
        \ or more coupons to a customer is to assign them to separate subscriptions.\
        \ If there is a coupon for the customer and another coupon for the customer's\
        \ subscription, the subscription coupon takes precedence."
      oneOf:
      - required:
        - amount_off
        - currency
        - duration
      - required:
        - duration
        - percent_off
    Customer:
      required:
      - name
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address_1'
        business_vat_id:
          type: string
          description: The tax ID number of the customer. Relevant when the customer
            is a business
        created_at:
          type: integer
          description: "Time of creation of this customer, in Unix time. Response\
            \ only"
        default_payment_method:
          type: string
          description: The payment method that is used when the 'payment' object or
            subscription does not specify a payment method. The value must also appear
            in the payment_methods list. The payment method is referenced by its name
            field.
        delinquent:
          type: boolean
          description: "Indicates whether there is currently a failure of an automatic\
            \ payment that is part of a subscription, or an invoice that was not paid\
            \ when due. Response only. true - The account is delinquent. false - The\
            \ account is current"
        description:
          type: string
          description: A text description of the customer
        discount:
          $ref: '#/components/schemas/Discount'
        email:
          type: string
          description: Customer's email address. Maximum 512 characters
        ewallet:
          type: string
          description: ID of the wallet that is linked to the customer. String starting
            with **ewallet_**. Each wallet can be associated with only one customer
        id:
          type: string
          description: ID of the Customer object. String starting with **cus_**
        invoice_prefix:
          type: string
          description: A custom string that is prefixed to all invoices for this customer.
            For more information see Invoice Object at "https://docs.rapyd.net/en/invoice-364856.html"
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of the customer
        payment_methods:
          $ref: '#/components/schemas/Customer_payment_methods'
        phone_number:
          type: string
          description: "Customer's primary phone number in E.164 format. The merchant\
            \ is responsible for verifying that the number is correct. One method\
            \ of verifying could be to send an activation code to the phone by SMS,\
            \ with a limited time for response."
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      description: customer
    CustomerPaymentMethod:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
        fingerprint_token:
          type: string
          description: "Hash of the card number, expiration date and CVV. Read-only.\
            \ Relevant to cards."
        id:
          type: string
          description: ID of the Payment Method object. String starting with card_
            or other_
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        last4:
          $ref: '#/components/schemas/Last4'
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of the customer
        network_reference_id:
          type: string
          description: "Identifier for use in a recurring card payment. In recurring\
            \ payments, use the network reference ID you got from the response or\
            \ webhook when adding the payment method to the customer. In the payment_method.fields\
            \ object, use it in place of the cvv field, along with the other required\
            \ fields for the card payment method. This field cannot be used together\
            \ with a payment method ID or a customer ID. Note that for all payments,\
            \ you must use the network reference ID from adding the payment method\
            \ to the customer. The response in each subsequent payment contains a\
            \ different network reference ID, which is not for use in requests. Relevant\
            \ to clients with PCI certification who have been authorized to use this\
            \ feature"
        next_action:
          $ref: '#/components/schemas/NextAction'
        redirect_url:
          type: string
          description: "URL where the customer is redirected for additional steps\
            \ required for the payment. Response only. To simulate 3DS authentication\
            \ in the sandbox, see Simulating 3DS Authentication - \"https://docs.rapyd.net/en/simulating-3ds-authentication---api-method.html\""
        supporting_documentation:
          type: string
          description: Reserved. Response only.
        token:
          type: string
          description: ID of the token that represents the card. String starting with
            card_. Relevant to cards. Relevant if the value of is_tokenizable is true
            for the payment method in the response to List Payment Methods by Country.
            See Payment Method Type Object at "https://docs.rapyd.net/en/payment-method-type-364771.html"
        type:
          type: string
          description: "Name of the payment method type. For example, us_mastercard_card.\
            \ To get a list of payment methods for a country, use List Payment Methods\
            \ by Country."
        webhook_url:
          type: string
          description: Reserved. Response only
      description: Describes the fields contained in REST messages and webhooks for
        payment methods saved to a customer profile
    CustomerRequest:
      properties:
        addresses:
          type: array
          description: Array of address objects associated with this customer. For
            more information
          items:
            $ref: '#/components/schemas/Address_1'
        business_vat_id:
          type: string
          description: The tax ID number of the customer
        coupon:
          type: string
          description: The ID of a coupon that is assigned to this customer
        payment_method:
          $ref: '#/components/schemas/CustomerRequest_payment_method'
        description:
          type: string
          description: A text description of the customer
        email:
          type: string
          description: Customer's email address
        ewallet:
          type: string
          description: ID of the wallet that is linked to the customer. String starting
            with **ewallet_**.
        invoice_prefix:
          type: string
          description: A custom string that is prefixed to all invoices for this customer.
        metadata:
          type: object
          description: A JSON object defined by the Rapyd partner
        name:
          type: string
          description: The name of the individual customer or the business name
        phone_number:
          type: string
          description: Customer's primary phone number in E.164 format
    Discount:
      type: object
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon'
        customer:
          type: string
          description: ID of the Customer object that the discount applies to. String
            starting with **cus_**. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with **dis_**. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        subscription:
          type: string
          description: ID of the Subscription object that the discount applies to.
            String starting with **sub_**. Response only.
          example: sub_199e8c92ec0ec2bcbe56740042639d6e
        valid:
          type: boolean
          description: Indicates whether the discount can be used. Response only.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process: <BR> 1. Create Coupon, which returns a coupon ID. <BR>2.\
        \ Add the coupon ID to the coupon field of the customer with Create Customer\
        \ or Update Customer."
      nullable: true
    DiscountCustomerResponse:
      type: object
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon'
        customer:
          type: string
          description: ID of the Customer object that the discount applies to. String
            starting with **cus_**. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with **dis_**. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        valid:
          type: boolean
          description: Indicates whether the discount can be used. Response only.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process: <BR> 1. Create Coupon, which returns a coupon ID. <BR>2.\
        \ Add the coupon ID to the coupon field of the customer with Create Customer\
        \ or Update Customer."
      nullable: true
    Dispute:
      type: object
      properties:
        id:
          type: string
          description: Reserved.
        token:
          type: string
          description: ID of the dispute. String starting with **dispute_**.
          example: dispute_6bd95ecec6bee6a505d39b56dbded2ec
        status:
          type: string
          description: |
            Indicates the status of the dispute operation. One of the following values: * ACT (Active) - The dispute was initiated and is awaiting action by the merchant. * RVW (Review) - Rapyd is reviewing the merchant's evidence contesting the dispute. * PRA (Pre-Arbitration) - Rapyd is reviewing the merchant's evidence contesting a previously contested dispute. * ARB (Arbitration) - The merchant rejected a pre-arbitration outcome. Rapyd is awaiting a ruling by an arbitration committee from the card schemes. * LOS (Lose) - The merchant lost the dispute. Funds were deducted from the merchant wallet. Final status. * WIN (Win) - The merchant won the dispute. Funds were credited to the merchant wallet. Final status. * REV (Reverse) - The card issuer reversed the dispute. Funds were credited to the merchant wallet. Final status.
          example: ACT
          enum:
          - ACT
          - RVW
          - PRA
          - ARB
          - LOS
          - WIN
          - REV
        amount:
          type: number
          description: Amount that Rapyd deducted from the merchant due to the dispute.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        dispute_category:
          type: string
          description: The category of dispute that was provided by the card network.
        dispute_reason_description:
          type: string
          description: A short description of the reason for the dispute.
        original_transaction_currency:
          $ref: '#/components/schemas/Currency_1'
        original_transaction_amount:
          type: number
          description: Amount of the original payment.
        original_dispute_amount:
          type: number
          description: "Amount of the dispute, as reported to Rapyd."
        original_dispute_currency:
          $ref: '#/components/schemas/Currency_1'
        original_transaction_id:
          type: string
          description: ID of the payment that the dispute is charged against. String
            starting with **payment_**.
          example: payment_ce936f36d93bc9307a3db9ebfd3deaaa
        ewallet_id:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
            Response only.
        central_processing_date:
          type: number
          description: The date the transaction was processed by the card network.
        created_at:
          type: number
          description: "Time of creation of the dispute, in Unix time. Response only."
        updated_at:
          type: number
          description: "Time that the dispute was last updated, in Unix time. Response\
            \ only."
        due_date:
          type: number
          description: The latest date for the dispute to be contested in Unix time.
            Response only.
        payment_method:
          type: string
          description: ID of the payment method. String starting with **card_**.
          example: card_39d8aee398dfa5492fc2a0ea2822958f
        payment_method_data:
          type: object
          description: Details of the payment method that was used for the payment.
            See Payment Method Data Object. Response only.
        rate:
          type: number
          description: FX rate. Relevant to FX payments.
        evidence:
          type: string
          description: Reserved.
        evidence_reason_code:
          type: string
          description: Reserved.
        pre_dispute:
          type: boolean
          description: "When true, indicates that the disputed payment was automatically\
            \ refunded based on pre-determined criteria. Response only."
        arn:
          type: string
          description: |
            An Acquirer Reference Number (ARN) is a unique number assigned to a credit card transaction as it moves through the payment flow. Banks can use it to help trace the payment/ refund if it appears to be missing. An ARN will be available for Visa and Mastercard charges.
      description: Describes the fields contained in REST messages and webhooks for
        disputes of payments.
    Escrow:
      type: object
      properties:
        ewallets:
          $ref: '#/components/schemas/Escrow_ewallets'
    EscrowResponse:
      type: object
      properties:
        amount_on_hold:
          type: number
          description: "Total amount of funds that are currently held in the escrow,\
            \ in the currency defined in `currency_code` in the payment."
        created_at:
          type: number
          description: "Date and time the escrow was created, in Unix time."
        currency:
          type: number
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        escrow_releases:
          $ref: '#/components/schemas/EscrowResponse_escrow_releases'
        id:
          type: string
          description: Indicates that the number of escrow releases is greater than
            the number returned in the response.
        last_payment_completion:
          type: number
          description: "Date and time of the completion of the last payment or partial\
            \ payment, in Unix time."
        payment:
          type: number
          description: "ID of the payment, a string starting with **payment_**."
        status:
          type: string
          description: "Status of the escrow. One of the following:<BR> * **pending**\
            \ - The payment and escrow were created, but the payment is not completed\
            \ and the funds are not in the escrow.<BR> * **on_hold** - The payment\
            \ is completed and the funds are in escrow. canceled - The escrow is canceled.<BR>*\
            \ **released** - All or part of the funds have been released to the wallets."
        total_amount_released:
          type: string
          description: "Total amount of funds that were released to the wallets, in\
            \ the currency defined in currency_code in the payment response."
        updated_at:
          type: number
          description: "Date and time of the last update to the escrow, in Unix time."
    GroupPayment:
      properties:
        amount:
          type: number
          description: "Amount of the group payment, in units defined by `currency`."
        amount_to_replace:
          type: string
          description: Indicates the total amount of failed payments that have not
            been replaced.
        cancel_reason:
          type: string
          description: Reason for cancellation of the group payment.
        country:
          type: string
          description: Country where the payment methods are supported. Two-letter
            ISO 3166-1 ALPHA-2 code.
        currency:
          type: string
          description: Currency of the payments. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the group payment.
        expiration:
          type: number
          description: "End of the time allowed for customers to make this payment,\
            \ in Unix time."
        id:
          type: string
          description: ID of the 'group_payment' object. String starting with **gp_**.
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client
        payments:
          type: object
          description: Array of `payment` objects. All payments must have the same
            currency and must be supported in the same country. For details of the
            fields in the 'payment' object.
        reason:
          type: string
          description: Reason for cancellation of the group payment.
        status:
          type: string
          description: "Indicates the status of the group payment operation. One of\
            \ the following values: <BR>> * **active** - The group payment was created\
            \ and one or more payments are still open.<BR> * **canceled** - The group\
            \ payment was canceled. <BR>* **closed** - All payments in the group payment\
            \ are complete.Response only."
      description: Group Payment
    HostedPageStatus:
      type: string
      description: |
        Status of the hosted page. One of the following: NEW - The hosted page was created. DON - Done. The card was added to the customer profile. EXP - The hosted page expired.
      enum:
      - NEW
      - DON
      - EXP
    HostedPageStatusBaseResponse:
      properties:
        language:
          type: string
          description: "Determines the default language of the hosted page. When this\
            \ parameter is null, the language of the user's browser is used. If the\
            \ language of the user's browser cannot be determined, the default language\
            \ is English"
        merchant_alias:
          type: string
          description: "Reserved, the default language is Rapyd"
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal"
        merchant_customer_support:
          $ref: '#/components/schemas/MerchantCustomerSupport'
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when cancel_url or complete_url or both fields\
            \ is unset. To configure this field, use the Client Portal"
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Portal"
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the client’s customers. To configure this field, use\
            \ the Client Portal."
        page_expiration:
          type: number
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both expiration and payment_expiration\
            \ are set, the payment expires at the earlier time."
        status:
          $ref: '#/components/schemas/HostedPageStatus'
    HostedPageAdditionalResponse:
      properties:
        account_funding_transaction:
          type: object
          description: "Details of an account funding transaction (AFT), which transfers\
            \ funds from a card to a cardholder's wallet."
        amount:
          type: number
          description: "The amount of the payment, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        cart_items:
          $ref: '#/components/schemas/HostedPageAdditionalResponse_cart_items'
        country:
          $ref: '#/components/schemas/Country_1'
        currency:
          $ref: '#/components/schemas/Currency_1'
        customer:
          type: string
          description: "Description of the payment transaction. To display the description,\
            \ set display_description to true in custom_elements."
        escrow:
          type: boolean
          description: Determines whether the payment is held in escrow for later
            release.
        escrow_release_days:
          type: number
          description: "Determines the number of days after creation of the payment\
            \ that funds are released from escrow. Funds are released at 5:00 pm GMT\
            \ on the day indicated. Integer, range: 1-90."
        id:
          type: string
          description: ID of the Rapyd checkout page. String starting with **checkout_**.
        merchant_main_button:
          type: string
          description: "A string that represents the text on the main Call to Action\
            \ (CTA) button. One of the following:* place_your_order - Place Your Order.*\
            \ pay - Pay.* pay_now - Pay Now.* make_payment - Make Payment.* purchase\
            \ - Purchase.* buy - Buy.* donate - Donate.* place_your_order To configure\
            \ this button, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the client’s customers. To configure this field, use\
            \ the Client Portal."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Portal"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the Client Portal"
        custom_elements:
          $ref: '#/components/schemas/HostedPageAdditionalResponse_custom_elements'
        page_expiration:
          type: number
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both expiration and payment_expiration\
            \ are set, the payment expires at the earlier time."
    InvoiceItem:
      type: object
      properties:
        id:
          type: string
          description: line item id
        amount:
          type: number
          description: amount
        currency:
          $ref: '#/components/schemas/Currency_1'
        description:
          type: string
          description: item description
        discountable:
          type: boolean
        invoice_item:
          type: string
          description: invoice item id
        metadata:
          type: object
          description: A JSON object defined by the client.
        period:
          $ref: '#/components/schemas/InvoiceItem_period'
        proration:
          type: boolean
        quantity:
          type: number
        plan:
          $ref: '#/components/schemas/Plan'
        subscription:
          type: string
          description: ID of the subscription that generates charges to this customer.
            String starting with sub_.
        subscription_item:
          type: string
          description: ID of the subscription item that generates charges to this
            customer.
        type:
          type: string
      description: Invoice item
    InvoiceResponse:
      type: object
      properties:
        id:
          type: string
        attempt_count:
          type: number
        automatic_attempt_count:
          type: number
          description: Number of automatic attempts that Rapyd made to retry paying
            this invoice if it failed.
        billing:
          type: string
          description: "Determines the method of collection, pay_automatically or\
            \ send_invoice. Default is pay_automatically"
        billing_reason:
          type: string
          description: The reason for billing
        created_at:
          type: number
          description: "The time the invoice was created, in Unix time. Response only."
        discount:
          $ref: '#/components/schemas/Discount'
        currency:
          $ref: '#/components/schemas/Currency_1'
        customer:
          type: string
          description: ID of the customer. String starting with cus_.
        days_until_due:
          type: number
          description: The number of days until the due date.
        description:
          type: string
          description: Description of the invoice.
        discount_amount:
          type: number
          description: The amount of the discount that was applied to this invoice.
        due_date:
          type: string
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the days_until_due field. Format is in Unix time."
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Object containing additional payment_options fields.
        payment_method:
          type: string
          description: Payment method for the invoice.
          nullable: true
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        subscription:
          type: string
          description: ID of the subscription that is the basis for this invoice.
        tax_percent:
          type: number
          description: "The tax rate, defined as a percentage."
        payment:
          $ref: '#/components/schemas/Payment'
        payout:
          type: string
        period_end:
          type: number
          description: "Last date in the period covered by the invoice, in Unix time.\
            \ Response only."
        period_start:
          type: number
          description: "First date in the period covered by the invoice, in Unix time.\
            \ Response only."
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        subtotal:
          type: number
          description: Total of all line items before discount and before tax. Decimal.
            Response only.
        tax:
          type: number
          description: The amount of tax charged. Decimal
        next_payment_attempt:
          type: number
          description: "The time when the next payment attempt will be made, in Unix\
            \ time."
        number:
          type: string
        total:
          type: number
          description: Total after discount and tax. Decimal.
        status:
          type: string
          description: An invoice moves through a series of statuses. See status table
            below.
        payout_fields:
          type: object
          description: Reserved
        type:
          type: string
          enum:
          - payment
          - payout
      description: Invoice
    Last4:
      pattern: "^\\d{4}$"
      type: string
      description: last4 - Last four digits of the card number. Read-only. Relevant
        to cards
    MerchantCustomerSupport:
      type: object
      properties:
        email:
          type: string
          description: Email address.
        url:
          type: string
          description: URL for the client's customer support service.
        phone_number:
          type: string
          description: Phone number for contacting the client's customer support service.
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
      description: "Contains details of the client’s customer support. To configure\
        \ these fields, use the Client Portal."
    NextAction:
      type: string
      description: "Indicates the next action for completing the payment. Response\
        \ only. One of the following values are - * 3d_verification - The next action\
        \ is 3DS authentication. To simulate 3DS authentication in the sandbox, see\
        \ Simulating 3DS Authentication. Relevant only to card payments. * pending_capture\
        \ - The next action is pending the capture of the amount. Relevant only to\
        \ card payments when the amount is not zero. * pending_confirmation - The\
        \ next action is pending the confirmation for the payment. Relevant to all\
        \ payment methods excluding card payment. * not_applicable - The payment has\
        \ completed or the next action is not relevant."
      enum:
      - 3d_verification
      - pending_capture
      - pending_confirmation
      - not_applicable
    OrderItemResponse:
      type: object
      properties:
        amount:
          type: number
          description: "Price of one SKU unit, in the currency defined in currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015."
        currency:
          $ref: '#/components/schemas/Currency_1'
        description:
          type: string
          description: Description of the item.
        parent:
          type: string
          description: |
            ID of the SKU object that represents the product. One of the following: ID of the SKU object. String starting with sku_ ID of the coupon. If generated by Rapyd, a string starting with coupon_.
        quantity:
          type: number
          description: Quantity of the product in the line item. Integer. Required
            when type is sku.
        type:
          type: string
          description: Type of line item.
    OrderResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        amount_returned:
          type: number
        payment:
          $ref: '#/components/schemas/Payment'
        created:
          type: integer
        customer:
          type: string
        currency:
          type: string
        email:
          type: string
        external_coupon_code:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
        metadata:
          type: object
        returns:
          type: array
          description: A list of the returns charged against this order.
          items:
            $ref: '#/components/schemas/OrderReturnedItemResponse'
        shipping_address:
          type: object
        status:
          type: string
        status_transitions:
          $ref: '#/components/schemas/OrderResponse_status_transitions'
        updated:
          type: integer
        upstream_id:
          type: string
        tax_percent:
          type: number
    OrderReturnedResponse:
      properties:
        id:
          type: string
        amount:
          type: number
        created:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency_1'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturnedItemResponse'
        order:
          type: string
        refund:
          type: string
    OrderReturnedItemResponse:
      properties:
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency_1'
        description:
          type: string
        parent:
          type: string
        quantity:
          type: number
        type:
          type: string
    Outcome:
      type: object
      properties:
        network_status:
          type: string
          enum:
          - approved_by_network
          - declined_by_network
          - not_sent_to_network
          - reversed_after_approval
        payment_flow_type:
          type: string
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
        payment_options:
          $ref: '#/components/schemas/PaymentOptions'
        status:
          type: string
          description: Indicates the status of the payment method. One of the following
            value is 1 means the payment_method_type is Valid
        risk_level:
          type: string
          enum:
          - normal
          - elevated
          - highest
          - not_assessed
        seller_message:
          type: string
          description: Message to the merchant
      description: The outcome object describes the outcome of the Rapyd Protect risk
        assessment
    Payment:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address_1'
        amount:
          type: number
          description: "The amount received by the recipient, in units of the currency\
            \ defined in currency. Decimal, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015. To verify\
            \ a card, set to 0."
          default: 0.0
        auth_code:
          type: string
          description: Indicates that the card payment was authorized by the card
            network.
        cancel_reason:
          type: string
          description: Reason for cancellation or reversal of a payment. Response
            only.
        captured:
          type: boolean
          description: Indicates whether the payment has been successfully captured.
            Response only.
          default: true
        complete_payment_url:
          type: string
          description: URL where the customer is redirected for final steps in completing
            the operation. Provided by the clientRelevant to bank redirect payment
            methods
        country_code:
          $ref: '#/components/schemas/Country_1'
        created_at:
          type: integer
          description: "Time of creation of the payment, in Unix time. Response only."
        currency_code:
          $ref: '#/components/schemas/Currency_1'
        customer_token:
          type: string
          description: "ID of the customer who is making the payment. String starting\
            \ with **cus_**. When a payment is created without an existing customer,\
            \ the platform creates an anonymous customer with no payment methods.\
            \ Response only."
        description:
          type: string
          description: Description of the payment
        dispute:
          $ref: '#/components/schemas/Dispute'
        error_code:
          type: string
          description: Relevant error message (with an underscore between words) and
            ID number of the error. Response only.
        error_payment_url:
          type: string
          description: URL where the customer is redirected in case of an error in
            the operation. Provided by the client.Relevant to bank redirect payment
            methods
        escrow:
          type: object
          description: Describes the escrow. Relevant when the payment is created
            with escrow set to true. Response only.
        ewallet_id:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with ewallet_. Relevant when the request includes a single wallet. Response
            only.
        ewallets:
          type: array
          description: "Specifies the wallets that the money is collected into. If\
            \ this is left blank, the money goes into the oldest 'collection'-type\
            \ client wallet. If there is no 'collection' client wallet, the money\
            \ goes into the oldest 'general'-type client wallet."
          items:
            $ref: '#/components/schemas/Payment_ewallets'
        expiration:
          type: number
          description: "End of the time allowed for customer to make this payment,\
            \ in Unix time. Must be after the current time"
          default: 0
        failure_code:
          type: string
          description: Error code explaining the reason for failure of the payment.
            Response only.
        failure_message:
          type: string
          description: "Message to the merchant, explaining the reason for failure\
            \ of the payment. Response only."
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer). * buy - The currency that the Rapyd Wallet\
            \ receives for goods or services. Fixed side buy relates to the seller\
            \ (merchant) funds. For example, a US-based merchant wants to charge 100\
            \ USD. The buyer (customer) pays the amount in MXN that converts to 100\
            \ USD. This is the default. * sell - The currency that the buyer is charged\
            \ for purchasing goods or services. Fixed side sell relates to the buyer\
            \ (customer) funds. For example, a US-based merchant wants to charge a\
            \ buyer 2,000 MXN and will accept whatever amount in USD that is converted\
            \ from 2,000 MXN."
        flow_type:
          type: string
          description: Reserved.
        fx_rate:
          type: number
          description: "Exchange rate for the transaction. When fixed_side is buy,\
            \ fx_rate is the buy rate. When fixed_side is sell, fx_rate is the sell\
            \ rate. Decimal number as string. Response only."
          default: 1
        group_payment:
          type: string
          description: ID of the group payment. String starting with gp_. Relevant
            when the payment is part of a group payment.
        id:
          type: string
          description: ID of the payment. String starting with payment_. Response
            only
        initiation_type:
          type: string
          description: Reason for cancellation or reversal of a payment. Response
            only.
        instructions:
          type: array
          description: "Describes how the customer makes the payment. Read-only. Contains\
            \ the following fields - * name - Description of the payment method. *\
            \ steps - A steps object containing a list of steps for the customer to\
            \ take. Each step is named stepN, where N is an integer."
          items:
            $ref: '#/components/schemas/Payment_instructions'
        invoice:
          type: string
          description: ID of the invoice that this payment is for. String starting
            with inv_. Response only.
        is_partial:
          type: boolean
          description: "Indicates whether the payment has been partially paid. When\
            \ false, indicates that the payment is unpaid or fully paid. Response\
            \ only."
          default: false
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        merchant_requested_amount:
          type: string
          description: "Indicates the amount paid by the payer, in units of the currency\
            \ defined in merchant_requested_currency. Relevant to payments with FX.\
            \ Read only."
        merchant_requested_currency:
          type: string
          description: Indicates the currency that merchant receives. Three-letter
            ISO 4217 code. Uppercase. Relevant to payments with FX. Response only.
        metadata:
          type: object
          description: A JSON object defined by the client in the Customer Payment
            Method object. Response only.
        mid:
          type: string
          description: Reserved
        next_action:
          $ref: '#/components/schemas/NextAction'
        order:
          type: string
          description: ID of the order that this payment is for. Read-only. Relevant
            when the payment is for an order.
        original_amount:
          type: number
          description: "* Foreign exchange payments - The amount paid by the sender,\
            \ in units of the currency defined in requested_currency, including gross\
            \ transaction fees and gross FX fees. * Payments not involving foreign\
            \ exchange - The amount of the payment, in units of the currency defined\
            \ in currency, including gross transaction fees. Response only."
          default: 0.0
        outcome:
          $ref: '#/components/schemas/Outcome'
        paid:
          type: boolean
          description: Indicates whether the payment has been fully captured. Response
            only.
          default: false
        paid_at:
          type: number
          description: "Time of the last capture, in Unix time. Response only."
          default: 0
        payment_fees:
          $ref: '#/components/schemas/Fee'
        payment_method:
          type: string
          description: "payment_method ID or object. If not specified in this field,\
            \ the payment method is the default payment method specified for the customer.\
            \ Mandatory when there is no default payment method. For a description\
            \ of the fields in the payment_method object, see Customer Payment Method\
            \ Object."
        payment_method_data:
          type: object
          description: Details of the payment_method_data object. See Payment Method
            Data Object. Response only.
          nullable: true
        payment_method_options:
          type: object
          description: "Object describing additional payment method fields required\
            \ for the payment. These values are not saved as part of the payment method\
            \ object. To determine the fields required, run Get Payment Method Required\
            \ Fields."
        payment_method_type:
          type: string
          description: |-
            A type of payment method that a customer can use for making payments.
             The payment method type has a suffix with one of the following values [_bank, _card, _cash, _ewallet]
        payment_method_type_category:
          type: string
          description: Category of payment method type. Read-only.
          enum:
          - bank_transfer
          - bank_redirect
          - card
          - cash
          - ewallet
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to
        receipt_number:
          type: string
          description: Reserved. Response only
        redirect_url:
          type: string
          description: "URL where the customer is redirected for additional steps\
            \ required for the payment. Response only. To simulate 3DS authentication\
            \ in the sandbox, see Simulating 3DS Authentication"
        refunded:
          type: boolean
          description: Indicates whether there was a refund against this payment.
            Response only.
          default: false
        refunded_amount:
          type: number
          description: "The total amount refunded against this payment, in units of\
            \ the currency defined in currency. Response only."
          default: 0.0
        refunds:
          $ref: '#/components/schemas/Payment_refunds'
        remitter_information:
          type: object
          description: Contains the customer name and the associated bank account.
            This includes - * name - Name of the customer. * account_id - ID of the
            customer's bank account. * bank_code - SWIFT code for the customer's bank.
            Response only.
        save_payment_method:
          type: boolean
          description: '* true - Saves the card for future use. This is the default.
            * false - Does not save the card. Relevant when payment_method_type_category
            is card and the "Create Payment" request includes full card details.'
        statement_descriptor:
          type: string
          description: "A text description suitable for a customer's payment statement.\
            \ Limited to 22 characters. If this field is not specified, Rapyd populates\
            \ it with the name of the merchant"
        status:
          $ref: '#/components/schemas/PaymentStatus'
        textual_codes:
          type: object
          description: "A set of text codes for the customer to use to complete the\
            \ steps described in the instructions field. Response only. \n The name\
            \ of the field is the local name of the code, or some other label. For\
            \ example \n * code * paycode * pay_code * payid * pairing_code * payment_code\
            \ * response_code"
        transaction_id:
          type: string
          description: ID of the associated transaction. Response only
        visual_codes:
          type: object
          description: "A set of images for the customer to use to complete the steps\
            \ described in the instructions field. For example, a QR code or barcode.\
            \ Response only."
      description: Collects money from a payment method and deposits it into one or
        more Rapyd Wallets
    PaymentLink:
      properties:
        amount:
          type: number
          description: "The amount of the payment, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. On the hosted\
            \ payment page, the customer: <BR><BR> Cannot modify the amount when amount_is_editable\
            \ is false or not used. <BR><BR> Can modify the amount when amount_is_editable\
            \ is true and amount has a positive value. <BR><BR> Must enter an amount\
            \ when amount_is_editable is true and amount is 0, null, or not used."
          example: 100.00
        amount_is_editable:
          type: boolean
          description: Determines whether the customer can edit the amount.<br><br>
            **true** - The customer can edit the amount. <br><br> **false** - The
            customer cannot edit the amount.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
          example: FR
        currency:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country. <BR><BR>
            **Transactions without FX** - Indicates the currency of the amount received
            by the recipient. BR><BR> **FX transactions** - Indicates the currency
            of the amount paid by the buyer.
          example: EUR
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
          example: cus_34534dsfgdg3453
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer). <BR><BR> * buy - The currency that the\
            \ Rapyd Wallet receives for goods or services. Fixed side buy relates\
            \ to the seller (merchant) funds. For example, a US-based merchant wants\
            \ to charge 100 USD. The buyer (customer) pays the amount in MXN that\
            \ converts to 100 USD. This is the default. <BR><BR> * sell - The currency\
            \ that the buyer is charged for purchasing goods or services. Fixed side\
            \ sell relates to the buyer (customer) funds. For example, a US-based\
            \ merchant wants to charge a buyer 2,000 MXN and will accept whatever\
            \ amount in USD that is converted from 2,000 MXN."
          example: sell
        id:
          type: string
          description: ID of the payment link. String starting with **hp_reuse_**.
          example: hp_reuse_bd5cbfc99af8fffc834c444e746246c3
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see https://docs.rapyd.net/en/list-supported-languages.html.\
            \ <BR><BR> When this parameter is null, the language of the user's browser\
            \ is used. BR><BR> If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        max_payments:
          type: number
          description: "Indicates the maximum number of times that the payment link\
            \ can be used for payments. When not defined, there is no limit."
          example: 7
        merchant_alias:
          type: string
          description: Client's name.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal. See https://docs.rapyd.net/en/customizing-your-hosted-page.html."
          example: 323fff
        merchant_customer_support:
          $ref: '#/components/schemas/MerchantCustomerSupport'
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the client’s customers. To configure this field, use\
            \ the Client Portal."
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR><BR> * `cancel_url` <BR><BR> * `complete_url`<BR><BR> To configure\
            \ this field, use the Client Portal"
        page_expiration:
          type: number
          description: "End of the time when the customer can use the payment link,\
            \ in Unix time. One year after creation. <BR> <BR> **Note:** Each hosted\
            \ page that the payment link generates expires 14 days after creation."
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code. <BR><BR>* When `fixed_side` is **sell**, it is the currency\
            \ received in the Rapyd Wallet. <BR><BR>* When `fixed_side` is **buy**,\
            \ it is the currency charged to the buyer (customer)."
        redirect_url:
          type: string
          description: The payment link URL.
        status:
          type: string
          description: "Status of the hosted payment page. One of the following: <BR><BR>*\
            \ **NEW** - The hosted page was created. <BR><BR>* **EXP** - The hosted\
            \ page expired."
        template:
          type: object
          description: Optional parameters for the checkout page.
      description: Retrieves details of a payment link.
    PaymentMethodType:
      type: object
      properties:
        amount_range_per_currency:
          $ref: '#/components/schemas/PaymentAmountRangePerCurrency'
        category:
          $ref: '#/components/schemas/Category'
        country:
          $ref: '#/components/schemas/Country_1'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency_1'
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: '#/components/schemas/Field_1'
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        is_cancelable:
          type: boolean
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
        is_expirable:
          type: boolean
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
        is_online:
          type: boolean
          description: Indicates whether the payment is completed immediately online.
            Response only
        is_refundable:
          type: boolean
          description: Indicates whether the payment method type supports refunds
        is_tokenizable:
          type: boolean
          description: Indicates whether the token of the payment method can be used
            in a collect operation
        is_virtual:
          type: boolean
          description: Indicates whether a Web-based version of the payment method
            type exists
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
        multiple_overage_allowed:
          type: boolean
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
        name:
          type: string
          description: "The name of the payment method, in user-friendly terms. For\
            \ example, Ireland Visa card. Response only"
        payment_flow_type:
          type: string
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
          - cash
          - bank transfer
        payment_options:
          type: array
          items:
            $ref: '#/components/schemas/Field_1'
        status:
          type: string
          description: Indicates the status of the payment method. One of the following
            value is 1 means the payment_method_type is Valid
        supported_digital_wallet_providers:
          type: array
          description: Describes the digital wallet providers that support the payment
            method. These providers may include **apple_pay** and **google_pay**.
          items:
            type: string
        type:
          type: string
          description: "Type of the payment method. For example, it_visa_card"
        virtual_payment_method_type:
          type: string
          description: Indicates the name of the Web-based version of this payment
            method type
        is_restricted:
          type: boolean
          description: Indicates if the payment method type restricted or not.
        supports_subscription:
          type: boolean
          description: Indicates if the payment method type supports subscription.
      description: A type of payment method that a customer can use for making payments.
    PaymentMethodTypeRequiredFields:
      type: object
      properties:
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: '#/components/schemas/Field_1'
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
        payment_method_options:
          type: array
          description: payment method option
          items:
            $ref: '#/components/schemas/Field_1'
        payment_options:
          type: array
          items:
            $ref: '#/components/schemas/Field_1'
        type:
          type: string
      description: Payment Method Type required fields - this is the response of GET
        required fields for Payment_Method_Type
    PaymentOptions:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address_1'
        amount_range_per_currency:
          $ref: '#/components/schemas/PaymentAmountRangePerCurrency'
        bin_details:
          $ref: '#/components/schemas/BinDetails'
        category:
          $ref: '#/components/schemas/Category'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        country:
          $ref: '#/components/schemas/Country_1'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency_1'
        customer:
          $ref: '#/components/schemas/Customer'
        fingerprint:
          type: string
          description: "Hash of the card number, expiration date and CVV. Read-only.\
            \ Relevant to cards"
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        instructions:
          type: string
          description: Instructions for the field. Response only
        is_cancelable:
          type: boolean
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
        is_expirable:
          type: boolean
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
        is_online:
          type: boolean
          description: Indicates whether the payment is completed immediately online.
            Response only
        is_refundable:
          type: boolean
          description: Indicates whether the payment method type supports refunds
        is_required:
          type: boolean
          description: "Whether the field is required for using the payment method.\
            \ When the conditions defined by conditions are met, the field is required\
            \ even though the value of is_required is false. Response only"
        is_tokenizable:
          type: boolean
          description: Indicates whether the token of the payment method can be used
            in a collect operation
        is_virtual:
          type: boolean
          description: Indicates whether a Web-based version of the payment method
            type exists
        last4:
          $ref: '#/components/schemas/Last4'
        maximum_expiration_seconds:
          type: integer
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
        minimum_expiration_seconds:
          type: integer
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
        multiple_overage_allowed:
          type: boolean
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
        name:
          type: string
          description: "The name of the payment method, in user-friendly terms. For\
            \ example, 'Ireland Visa card'. Response only"
        payment_flow_type:
          type: string
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
      description: "A payment method type is a type of payment method that any customer\
        \ can use, for example, ee_mastercard_card, Mastercard for Estonia. When it\
        \ is added to a customer profile, it becomes a payment method that is specific\
        \ to that one customer. The name of the payment method type starts with a\
        \ prefix for the country, the 2-letter ISO 3166-1 alpha-2 code. If the payment\
        \ method is valid in multiple countries, the prefix is xx_. The payment method\
        \ type has a suffix with one of the following values - _bank - Bank transfer\
        \ or bank redirect _card - Credit card, debit card or other card _cash - Cash\
        \ _ewallet - Local eWallet"
    PaymentStatus:
      type: string
      default: ACT
      enum:
      - ACT
      - CLO
      - ERR
      - CAN
      - EXP
      - DLD
      - REV
      - UND
      - CRE
    Plan:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the plan is available to be added to a subscription.
        aggregate_usage:
          type: string
          description: "Determines which quantity is used to calculate the pricing.\
            \ One of the following: \n* max - The maximum reported usage within the\
            \ billing cycle. \n* sum - The sum of all usage during a billing cycle.\
            \ This is the default. \n* last_during_period - The last usage reported\
            \ within the billing cycle. \n* last_ever - The last usage ever reported,\
            \ if the latest billing cycles contain no usage at all. Required when\
            \ usage_type is metered. Relevant when billing_scheme is set to per_unit.\n"
          example: sum
          enum:
          - max
          - sum
          - last_during_period
          - last_ever
        amount:
          type: number
          description: "The amount to charge, in units of the currency defined in\
            \ currency. Decimal, including the correct number of decimal places for\
            \ the currency exponent, as defined in ISO 2417:2015. If the amount is\
            \ a whole number, use an integer and not a decimal. For a free service,\
            \ use 0. Must be null when tiers is set. Relevant when billing_scheme\
            \ is set to per_unit."
          example: 0
        billing_scheme:
          type: string
          description: "Describes how to compute the price. One of the following:\
            \ \n* per_unit - The amount specified in amount is charged for each unit.\
            \ Also set these related fields: amount, transform_usage, usage_type,\
            \ aggregate_usage. This is the default. \n* tiered - The unit pricing\
            \ is computed using a tiering strategy as defined with the tiers and tiers_mode\
            \ fields.\n"
          example: tiered
          enum:
          - per_unit
          - tiered
        created_at:
          type: number
          description: "Time the 'plan' object was created, in Unix time. Response\
            \ only."
          example: 1592311574
        currency:
          $ref: '#/components/schemas/Currency_1'
        id:
          type: string
          description: "Unique ID for this plan. English alphanumeric characters with\
            \ no special characters except underscore. If the client does not define\
            \ an ID, Rapyd generates a string starting with **plan_**."
          example: plan_51788cf4ed1b672cb0a2a97773887f5b
        interval:
          type: string
          description: "Specifies the units used in defining the billing cycle. One\
            \ of the following: \n* day \n* week \n* month \n* year Maximum interval\
            \ is 1 year. \n"
          example: month
          enum:
          - month
          - day
          - week
          - year
        interval_count:
          type: number
          description: Number of time intervals in the billing cycle. Integer
          example: 2
        metadata:
          type: object
          description: A JSON object defined by the client.
          example: {}
        nickname:
          type: string
          description: Brief description of the plan.
          example: Basic Parking
        product:
          description: "The ID of the product that this plan is for, and fields describing\
            \ this product in the plan."
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Product'
          - type: string
            example: product_ab9599d248f6d4d4311148aea68e20d0
        tiers:
          type: array
          description: Defines a tiered pricing structure. Each tier object represents
            a pricing tier.
          items:
            $ref: '#/components/schemas/Plan_tiers'
        tiers_mode:
          type: string
          description: "Determines the mode for calculating the total tiered charge.\
            \ One of the following values: \n* graduated - The total cost at each\
            \ price tier is calculated separately, then all tier charges are added\
            \ together. \n* volume - The total cost is calculated as the number of\
            \ items times the applicable tier price. Relevant when billing_scheme\
            \ is set to tiered\n"
          example: volume
          enum:
          - graduated
          - volume
        transform_usage:
          $ref: '#/components/schemas/Plan_transform_usage'
        trial_period_days:
          type: number
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
          example: 0
        usage_type:
          type: string
          description: "Determines whether the customer is billed when the service\
            \ is not actually used. Relevant when billing_scheme is set to per_unit.\
            \ One of the following: \n* metered - The customer is billed only for\
            \ actual usage. You must also set aggregate_usage. \n* licensed - The\
            \ customer is billed even if the service is not used. This is the default.\n"
          example: licensed
          enum:
          - metered
          - licensed
    Product:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
          example: true
        attributes:
          type: array
          description: "Up to 5 unique alphanumeric strings defined by the merchant.\
            \ Cannot contain spaces. For example: [ > \"size\", > \"color\"] Each\
            \ string defines the key in a key-value pair in the 'attributes' object\
            \ in the corresponding 'sku' objects."
          example:
          - armrest
          - color
          - cover
          items:
            type: string
        created_at:
          type: number
          description: "Time of creation of this product, in Unix time. Response only."
          example: 1592299157
        description:
          type: string
          description: Full text description of the product.
          example: The ultimate in comfort for the dedicated gamer
        id:
          type: string
          description: "Unique string for identification of the product. Legal input\
            \ includes alphanumeric characters and the underscore () character. If\
            \ the merchant does not define an ID, Rapyd generates it with a string\
            \ that starts with **product**."
          example: product_0d9dc6be69c769560fe913f3b086d8ca
        images:
          type: array
          description: Images associated with the product.
          example:
          - 64bit-encoded-image-1
          - 64bit-encoded-image-2
          items:
            type: string
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that appears in the line
            items in invoices.
          example: Gamer's Red Chair
        package_dimensions:
          $ref: '#/components/schemas/Product_package_dimensions'
        shippable:
          type: boolean
          description: Indicates whether the product can be shipped.
          example: true
        skus:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        statement_descriptor:
          type: string
          description: Description that is suitable for a customer's statement. Limited
            to 22 characters. Relevant when type is service. Must be null when type
            is goods.
        type:
          type: string
          description: "One of the following: \n* services - Relevant to subscriptions\
            \ and plans. \n* goods - Relevant to orders and SKUs.\n"
          example: goods
          enum:
          - goods
          - services
        unit_label:
          type: string
          description: "Determines what one unit of this product is called on customersâ\
            €™ receipts and invoices, such as minutes, viewings, kilometers or packages.\
            \ Relevant when type is service. Must be null when type is goods."
        updated_at:
          type: number
          description: "Time that this product was last updated, in Unix time. Response\
            \ only."
          example: 1592300812
    Refund:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the refund, in units defined by currency in the\
            \ original payment. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015."
        created_at:
          type: number
          description: "Time of creation of this refund, in Unix time. Response only."
        currency:
          $ref: '#/components/schemas/Currency_1'
        ewallets:
          type: array
          description: "An array of one object, which contains the following fields:\
            \ * ewallet_id - The ID of the wallet that the money is transferred from,\
            \ a string starting with ewallet_. * amount - Amount of the transaction\
            \ in currency units defined in currency. * percent - A decimal number\
            \ representing a percentage of the total payout. Response only."
          items:
            $ref: '#/components/schemas/Refund_ewallets'
        failure_reason:
          type: string
          description: Indicates the reason that the refund failed.
        fixed_side:
          type: string
          description: Indicates whether the FX rate is fixed for the buy side or
            for the sell side. Relevant for refunds with foreign exchange. Response
            only.
        fx_rate:
          type: string
          description: "Exchange rate for the transaction. When fixed_side is buy,\
            \ fx_rate is the buy rate. When fixed_side is sell, fx_rate is the sell\
            \ rate. Decimal number as string. Relevant to refunds with foreign exchange.\
            \ Response only."
        id:
          type: string
          description: ID of the Refund object. String starting with **refund_**.
        merchant_debited_amount:
          type: string
          description: Amount debited from the merchant. Relevant to refunds with
            foreign exchange. Response only.
        merchant_debited_currency:
          type: string
          description: Indicates the currency that is debited from the merchant. Three-letter
            ISO 4217 code. Relevant to refunds with foreign exchange. Response only.
        merchant_reference_id:
          type: string
          description: Merchant-defined ID. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment:
          type: string
          description: D of the Payment object that the refund is credited against.
            String starting with payment_.
        payment_created_at:
          type: number
          description: "Time that the original payment was created, in Unix time.\
            \ Response only."
        payment_method_type:
          type: string
          description: The original payment payment method type. Use List Payment
            Methods by Country for a list of supported types for a country
        proportional_refund:
          type: boolean
          description: Indicates whether the refund was returned in proportion to
            the amounts received by the wallets in the payment. Relevant to a refund
            for a payment split among multiple wallets.
        reason:
          type: string
          description: "Description of the reason for the refund, provided by the\
            \ merchant."
        receipt_number:
          type: number
          description: "Number of the receipt for the refund, provided by the merchant.\
            \ Response only."
        status:
          type: string
          description: Indicates the status of the refund operation
        updated_at:
          type: number
          description: "Time that this refund was last updated, in Unix time. Response\
            \ only."
    Sku:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently being sold. Default
            is false.
          example: true
        attributes:
          type: object
          description: Up to 5 alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the attributes list of the corresponding
            product object.
          example:
            color: green
        created_at:
          type: number
          description: "Time of creation of this SKU, in Unix time. Response  only."
          example: 1546353713
        currency:
          $ref: '#/components/schemas/Currency_1'
        id:
          type: string
          description: "ID of the SKU object. Alphanumeric characters and underscores.\
            \ Defined by the merchant, or a string starting with **sku**."
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
        image:
          type: string
          description: URL of image associated with the product.
        inventory:
          type: object
          description: "Contains the following fields: type - One of the following\
            \ values: finite - Physical objects that can be counted. infinite - Products\
            \ such as downloadable software. bucket - Products that are sold by measurable\
            \ quantity. quantity - The number of units available in inventory. Integer.\
            \ Relevant when type is finite. value - The status of the product on hand\
            \ in inventory. Relevant when type is bucket. One of the following: in_stock\
            \ - A normal amount of product is available in inventory. limited - There\
            \ is enough product in inventory for small orders only. * out_of_stock\
            \ - No product remains in inventory."
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: '#/components/schemas/Sku_package_dimensions'
        price:
          type: number
          description: Price of one unit. Decimal.
          example: 10.99
        product:
          type: string
          description: ID of the product that this SKU relates to.
          example: product_f383d03c34fb499eb3ada4e3c574002a
        updated_at:
          type: number
          description: "Time that this product was last updated, in Unix time. Response\
            \ only."
          example: 1546354288
    Subscription:
      type: object
      properties:
        billing:
          type: string
          description: "Determines the method of billing at the end of the billing\
            \ cycle. Set to pay_automatically - Rapyd generates a 'payment' object,\
            \ then attempts to pay it using the designated payment method."
          example: pay_automatically
        billing_cycle_anchor:
          description: "Determines the start of the next full billing cycle, as defined\
            \ in the plan described in the 'items'. One of the following values: \n\
            * now - The present day. The next billing cycle starts right now. \n*\
            \ Timestamp in Unix time - A time in the future, at or after the end of\
            \ the free trial period, not more than the length of the billing cycle.\
            \ The current billing cycle will be shorter than all other billing cycles.\
            \ Relevant to creation of the subscription. \n* unchanged - The original\
            \ billing cycle anchor is unchanged. Relevant to updating a subscription.\n"
          example: 1592379647
          oneOf:
          - type: string
            example: now
          - type: number
            example: 1703225137
        cancel_at_period_end:
          type: boolean
          description: "Determines the last date that charges accrue. true - Charges\
            \ accrue until the end of the current billing period, then the subscription\
            \ is canceled. \n* When no trial period is set, after cancel_at_period_end\
            \ is set to true the subscription will not be renewed at the next interval.\
            \ \n* When a trial period is set after cancel_at_period_end is set to\
            \ true, the subscription will not begin. false - This is the default.\
            \ \n* When the subscription is created, no end is defined. * When Cancel\
            \ Subscription is run, charges stop immediately and the subscription is\
            \ canceled.\n"
          example: true
        canceled_at:
          type: number
          description: Date and time that the subscription is canceled by the customer
            or by the client. Unix time. Response only.
          nullable: true
        created_at:
          type: number
          description: "Time of creation of this subscription, in Unix time. Response\
            \ only."
          nullable: true
          example: 1592379647
        current_period_end:
          type: number
          description: "End of the current billing cycle, in Unix time. Response only."
          example: 1594971647
        current_period_start:
          type: number
          description: "Start of the current billing cycle, in Unix time. Response\
            \ only."
          example: 1592379647
        customer_token:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
          nullable: true
          example: 30
        discount:
          $ref: '#/components/schemas/Discount'
        ended_at:
          type: number
          description: Date that the subscription was canceled or otherwise terminated.
            Unix time. Response only.
          nullable: true
        id:
          type: string
          description: ID of the Subscription object. String starting with sub_.
          example: sub_04fd8fbd78d7dd7e0e6323810a69275c
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Additional payment_options fields.
          nullable: true
        payment_method:
          type: string
          description: "Payment method ID or Payment Method object. if not specified\
            \ in this field, the payment method is the default payment method specified\
            \ for the customer."
          example: card_320dcb1879fbc41f13a81e690636f3c2
        payout_fields:
          type: object
          description: Reserved.
          nullable: true
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. \n* true - The invoice is issued when the subscription\
            \ is created. \n* false - The invoice is issued an hour after the subscription\
            \ is created. This is the default.\n"
          example: true
        status:
          type: string
          description: "Status of the subscription. One of the following: \n* active\
            \ - The customer is currently paying for this subscription. \n* canceled\
            \ - The customer has canceled this subscription, but it remains in the\
            \ Rapyd database. \n* past_due - Payment for this subscription was not\
            \ received by the end of the billing period. \n* trialing - The subscription\
            \ is in its free trial period. * unpaid - An error occurred in the payment\
            \ for this subscription. Response only.\n"
          example: active
          enum:
          - active
          - canceled
          - past_due
          - trialing
          - unpaid
        subscription_items:
          $ref: '#/components/schemas/SubscriptionItems'
        tax_percent:
          type: number
          description: "The percentage tax rate that is applied to the subtotal of\
            \ the invoice, after subtracting all discounts. Decimal. Range: 0-100,\
            \ with up to four decimal places."
          example: 10.5
        trial_end:
          type: number
          description: "The date and time of the end of the customer's free trial\
            \ period, in Unix time, or the string now. Takes precedence over trial_period_days.\
            \ If trial_end is not set by the client, Rapyd calculates this date by\
            \ adding trial_period_days to the date in created_at. Relevant when trial_period_days\
            \ is not defined."
          nullable: true
        trial_start:
          type: number
          description: "Date and time of the start of the customer's free trial period,\
            \ in Unix time. Response only."
          nullable: true
        type:
          type: string
          description: "The type of the subscription. One of the following values:\n\
            * payment \n* payout \nResponse only.\n"
          nullable: true
          example: payment
          enum:
          - payout
          - payment
    SubscriptionItems:
      type: object
      properties:
        data:
          type: array
          description: A list of up to three subscription items.
          items:
            $ref: '#/components/schemas/SubscriptionItem'
        has_more:
          type: boolean
          description: Indicates whether there are more than three items in this subscription.
          example: false
        total_count:
          type: number
          description: Total number of items in this subscription.
          example: 1
        url:
          type: string
          description: URL for requesting all of the items in this subscription.
          example: /v1/subscription_items?subscription=sub_324ee75f8c26f1df94bc8cc693f3c729
    SubscriptionItem:
      type: object
      properties:
        created:
          type: number
          description: "The time the subscription item was created, in Unix time.\
            \ Response only."
        id:
          type: string
          description: ID of the Subscription Item object. String starting with subi_.
          example: subi_e5dbbf84c68e5bb7db761625158d4262
        metadata:
          type: object
          description: A JSON object defined by the client.
          example: "{\"merchant_defined\": true }"
        plan:
          $ref: '#/components/schemas/Plan'
        quantity:
          type: number
          description: The number of units of the service defined in the plan. Integer.
            This number can be updated during the billing cycle using Update Subscription
            or Update Subscription Item.
        subscription_id:
          type: string
          description: ID of the subscription that this item belongs to. String starting
            with sub_.
          nullable: true
          example: sub_0de9c79c1e2beee09499dc8220493d5
    Status_1:
      type: object
      properties:
        error_code:
          type: string
          description: Error code of the API request. Empty when the response is successful.
          example: ""
        message:
          type: string
          description: Description about the API error. Empty when the response is
            successful.
          example: ""
        operation_id:
          type: string
          description: Unique identifier of the response.
          example: 0fd8809c-ed02-4862-9a79-507b9528ac23
        response_code:
          type: string
          description: Response code of the API error. Empty when the response is
            successful.
          example: ""
        status:
          type: string
          description: Status of the API response indicating success or failure.
          example: SUCCESS
    Currency_1:
      pattern: /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/
      type: string
      example: GBP
    Address_1:
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking"
        city:
          type: string
          description: City name portion of the address. Required for issuance of
            a card to an eWallet contact
        country:
          $ref: '#/components/schemas/Country_1'
        created_at:
          type: number
          description: "Time of creation of the payment, in Unix time. Response only."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking"
        id:
          type: string
          description: ID of the Address object. String starting with address_
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name"
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building"
        line_3:
          type: string
          description: Line 3 of the address
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of a contact person or an `in care of` person at this
            address
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique
        state:
          type: string
        zip:
          type: string
          description: Postal code portion of the address
      description: address associated with this specific Rapyd entity Payment/Customer
        etc...
    Country_1:
      pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|Y(E|T)|Z(A|M|W))$
      type: string
      example: GB
    Fee:
      type: object
      properties:
        fx_fee:
          $ref: '#/components/schemas/FxFee'
        gross_fees:
          type: number
          description: "The total gross fees for the transaction, in units defined\
            \ by currency_code. Relevant to responses."
          example: 4.23
        net_fees:
          type: number
          description: "The total net fees for the transaction, in units defined by\
            \ merchant_requested_currency. Relevant to responses."
          example: 0
        transaction_fee:
          $ref: '#/components/schemas/TransactionFee'
        total_merchant_fees:
          type: number
      nullable: true
    Field_1:
      type: object
      properties:
        code:
          type: string
          description: Three-letter alphabetic ISO 4217 code for the official currency
            used in the country.
        is_required:
          type: boolean
          description: Whether the field is always required for using the payment
            method
        is_updatable:
          type: boolean
          description: Indicates whether the field can be updated with Update Payment
            Method
        instructions:
          type: string
        name:
          type: string
          description: Name of the currency in English.
        numeric_code:
          type: string
          description: Three-letter ISO numeric 4217 code for the currency.
        required_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field_1'
        type:
          type: string
          enum:
          - boolean
          - number
          - string
          - object
        regex:
          type: string
          description: A regular expression that defines the format when type is string.
        conditions:
          type: array
          description: "Defines specific conditions when a field is required for a\
            \ payment method. When the conditions defined by conditions are met, the\
            \ field is required even though the value of is_required is false."
          items:
            $ref: '#/components/schemas/Field_conditions'
        description:
          type: string
          description: Description of the field.
      description: Field Object
    account_transfer_body:
      required:
      - amount
      - currency
      - destination_ewallet
      - source_ewallet
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field. Uppercase.
        destination_ewallet:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**.
        expiration:
          type: string
          description: "Determines the day the ewallet funds transfer expires, in\
            \ Unix time. Acceptance of the ewallet transfer must be completed before\
            \ the start of this day. The default setting is 14 days from the date\
            \ the ewallet transfer was created."
        metadata:
          type: object
          description: A JSON object defined by the client.
        source_ewallet:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
    inline_response_200:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Transfer'
        status:
          $ref: '#/components/schemas/Status'
    transfer_response_body:
      required:
      - id
      - status
      type: object
      properties:
        id:
          type: string
          description: "ID of the transfer transaction, from the `id` field in the\
            \ `data` object of the response. 32-digit hexadecimal."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: "Determines how to handle the transfer. One of the following\
            \ values - accept, decline, cancel"
    inline_response_200_1:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_GET_EWALLET
          message: "The request attempted an operation that requires a wallet, but\
            \ the wallet was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid wallet, a string starting with **ewallet_**."
          response_code: ERROR_GET_EWALLET
          status: ERROR
    ewalletId_contacts_body:
      required:
      - contact_type
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        contact_type:
          type: string
          description: "Type of contact: personal."
        country:
          type: string
          description: 2-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        date_of_birth:
          type: string
          description: "Date of birth of the individual. Format: MM/DD/YYYY"
        email:
          type: string
          description: Email address for the contact.
        first_name:
          type: string
          description: First name of the contact.
        last_name:
          type: string
          description: |
            Family name of the personal contact or primary person associated with the business contact. For a personal contact type, alphabetic characters and spaces. Required for issuing a card to a personal contact.
        gender:
          type: string
          description: "Gender of the contact. One of the following values: male,\
            \ female, other, not_applicable"
        house_type:
          type: string
          description: "Description of the type of residency. One of the following\
            \ values: lease, live_with_family, own, owner, month_to_month, housing_project"
        identification_number:
          type: string
          description: ID number as shown by the ID document. Alphanumeric string
        identification_type:
          type: string
          description: Type of the identification document
        marital_status:
          type: string
          description: "Marital status of the contact. One of the following values:\
            \ married, single, divorced, widowed, cohabiting, not_applicable"
        metadata:
          type: string
          description: A JSON object defined by the client.
        middle_name:
          type: string
          description: Middle name of the personal contact or primary person associated
            with the business contact.
        mothers_name:
          type: string
          description: Name of the contact's mother.
        nationality:
          type: string
          description: The citizenship of the contact. Two-letter ISO 3166-1 ALPHA-2
            code for the country. Uppercase.
        phone_number:
          type: string
          description: Phone number of the contact in E.164 format.
        second_last_name:
          type: string
          description: Second last name of the contact.
        send_notifications:
          type: boolean
          description: Determines whether Rapyd sends notifications to the contact.
            Default is false.
        contact_reference_id:
          type: string
          description: Reference ID for the contact. Limited to 45 characters. Should
            be unique per merchant per e-wallet.
    inline_response_200_2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Contact'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_1:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
          message: "The request tried to add a contact to a personal wallet, but a\
            \ personal wallet can have only one contact. The request was rejected.\
            \ Corrective action: None. Determine why an attempt was made to give a\
            \ personal wallet two contacts. Consider creating a company wallet."
          response_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
          status: ERROR
    inline_response_400_2:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_GET_EWALLET_CONTACT
          message: "The request attempted an operation that requires a wallet contact,\
            \ but the contact was not found. The request was rejected. Corrective\
            \ action: In the path, specify the ID of a valid wallet, a string starting\
            \ with \"ewallet\", and the ID of a valid contact belonging to that wallet,\
            \ a string starting with \"cont\"."
          response_code: ERROR_GET_EWALLET_CONTACT
          status: ERROR
    inline_response_400_3:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_UPDATE_EWALLET_CONTACT
          message: "The request tried to update a business wallet contact, but there\
            \ was a format error in the business details. The request was rejected.\
            \ Corrective action: Provide all data in the correct format. See the API\
            \ reference."
          response_code: ERROR_UPDATE_EWALLET_CONTACT
          status: ERROR
    inline_response_200_3:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_3_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_4:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
          message: "The request tried to delete a contact, but the wallet was a personal\
            \ wallet. A personal wallet can have only one contact and it cannot be\
            \ deleted. The request was rejected. Corrective action: None. Determine\
            \ why an attempt was made to delete the contact."
          response_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
          status: ERROR
    inline_response_200_4:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_4_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_5:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_GET_COMPLIANCE_LEVELS
          message: ""
          response_code: ERROR_GET_COMPLIANCE_LEVELS
          status: ERROR
    v1_virtual_accounts_body:
      required:
      - country
      - currency
      - ewallet
      type: object
      properties:
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the walletâ€™s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_5:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_5_data'
        status:
          $ref: '#/components/schemas/Status_1'
    virtual_accounts_transactions_body:
      required:
      - amount
      - currency
      - issued_bank_account
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code. Must
            be the same as the currency of the virtual account.
        issued_bank_account:
          type: string
          description: ID of the Virtual Account Number object. String starting with
            issuing_
    inline_response_200_6:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_6_data'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_7:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VirtualAccountIssuing'
        status:
          $ref: '#/components/schemas/Status_1'
    virtual_accounts_virtualAccountId_body:
      properties:
        requesting_currency:
          $ref: '#/components/schemas/Currency_1'
    inline_response_200_8:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_8_data'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_9:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VirtualAccountTransactionResponse'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_10:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PayoutMethodTypeDetails'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_11:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payout'
        status:
          $ref: '#/components/schemas/Status'
    v1_payouts_body:
      required:
      - beneficiary
      - beneficiary_entity_type
      - payout_amount
      - payout_currency
      - sender
      - sender_country
      - sender_currency
      - sender_entity_type
      type: object
      properties:
        beneficiary:
          description: String starting with **beneficiary_** or the object describing
            the beneficiary.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/Beneficiary'
        beneficiary_country:
          type: string
          description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
            Uppercase.
          example: US
        beneficiary_entity_type:
          type: string
          description: "Type of entity for the beneficiary. One of the following:\
            \ **individual** | **company**"
          enum:
          - individual
          - company
        confirm_automatically:
          type: boolean
          description: Determines whether completion of the payout requires confirmation
            of the FX rate. Relevant to payouts with foreign exchange. Default is
            false.
          default: false
        converstion_rate:
          type: number
          description: conversion rate
          default: 1
        description:
          type: string
          description: Description of the payout transaction.
        ewallet:
          type: string
          description: ID of the wallet that the money is transferred from. String
            starting with **ewallet_**.
          example: ewallet_4f1757749b8858160274e6db49f78ff3
        expiration:
          type: string
          description: "Determines the day the payout expires, in Unix time. The payout\
            \ must be completed before the start of this day. Relevant to cash payouts."
          example: "1607941348"
        location:
          type: string
          description: Location of the payout transaction.
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        payout_amount:
          type: number
          description: "Amount of the payout, in units of the currency defined in\
            \ `payout_currency`. Mandatory when `sender_amount` is not used. Decimal."
          example: 110
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when the beneficiary does not have
            a default payout method type.
          example: us_general_bank
        payout_options:
          type: object
          description: Payout options
        sender:
          description: String starting with **sender_** or the object describing the
            sender.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/Sender'
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
        statement_descriptor:
          type: string
          description: A statement that includes the reason for the payout. Limited
            to 35 characters.
      anyOf:
      - required:
        - payout_method_type
      - required:
        - default_payout_method_type
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/PayoutRequest'
        - required:
          - beneficiary
          - beneficiary_entity_type
          - payout_amount
          - payout_currency
          - payout_method_type
          - sender
          - sender_country
          - sender_currency
          - sender_entity_type
      - allOf:
        - $ref: '#/components/schemas/PayoutRequest'
        - required:
          - beneficiary
          - beneficiary_entity_type
          - payout_amount
          - payout_currency
          - sender
          - sender_country
          - sender_currency
          - sender_entity_type
    inline_response_200_12:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payout'
        status:
          $ref: '#/components/schemas/Status'
    payouts_beneficiary_body:
      required:
      - category
      - country
      - currency
      - entity_type
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
        company_name:
          type: string
          description: Name of the beneficiary company. Relevant when `entity_type`
            is company.
          example: ABC
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          example: us_general_bank
        entity_type:
          $ref: '#/components/schemas/EntityType'
        first_name:
          type: string
          description: First name of the beneficiary. Relevant when `entity_type`
            is individual.
          example: John
        identification_type:
          type: string
          description: Type of identification document for the beneficiary.
          example: drivers_license
        identification_value:
          type: string
          description: Identification number on the document mentioned in `identification_type`.
          example: ABNHDLK354665
        last_name:
          type: string
          description: Family name of the beneficiary. Relevant when `entity_type`
            is individual.
          example: John
        merchant_reference_id:
          type: string
          description: ID defined by the client.
          example: GHY-0YU-HUJ-POI
    inline_response_200_13:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Beneficiary'
        status:
          $ref: '#/components/schemas/Status'
    payouts_extended_beneficiary_body:
      required:
      - address
      - category
      - city
      - country
      - currency
      - entity_type
      - identification_type
      - identification_value
      type: object
      properties:
        address:
          type: string
          description: Beneficiary's street address including the build number.
          example: 123 East 32nd street
        city:
          type: string
          description: City of the beneficiary.
          example: anytown
        category:
          $ref: '#/components/schemas/Category'
        company_name:
          type: string
          description: Name of the beneficiary company. Required when `entity_type`
            is **company**.
          example: All Star Limousine Service
        country:
          $ref: '#/components/schemas/Country'
        country_of_incorporation:
          type: string
          description: The country where the company was registered. Two-letter ISO
            3166-1 ALPHA-2 code. Required when `entity_type` is **company**.
          example: IT
        currency:
          $ref: '#/components/schemas/Currency'
        date_of_birth:
          type: string
          description: "Date of birth of the individual. Format: DD/MM/YYYY. Required\
            \ when `entity_type` is **individual**."
          example: 05/03/1967
        date_of_incorporation:
          type: string
          description: "The date when the company was registered. Format: DD/MM/YYYY.\
            \ Required when `entity_type` is **company**."
          example: 05/03/1967
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          example: us_general_bank
        entity_type:
          $ref: '#/components/schemas/EntityType'
        first_name:
          type: string
          description: First name of the beneficiary. Required when `entity_type`
            is **individual**.
          example: John
        gender:
          $ref: '#/components/schemas/gender'
        identification_type:
          type: string
          description: "Type of identification document for the beneficiary. When\
            \ `entity_type` is **company**, this field must be**company_registered_number**.\
            \ When `entity_type` is **individual**:"
          example: drivers_license
          enum:
          - drivers_license
          - identification_id
          - international_passport
          - residence_permit
          - social_security
          - work_permit
        identification_value:
          type: string
          description: Identification number on the document mentioned in `identification_type`.
          example: ABNHDLK354665
        last_name:
          type: string
          description: Family name of the beneficiary. Required when `entity_type`
            is **individual**. Required when `entity_type` is **individual**.
          example: John
        merchant_reference_id:
          type: string
          description: ID defined by the client.
          example: GHY-0YU-HUJ-POI
        nationality:
          type: string
          description: "The citizenship of the beneficiary. Two-letter ISO 3166-1\
            \ ALPHA-2 code for the country. To determine the code for a country, see\
            \ 'List Countries'. Required when `entity_type` is **individual**."
          example: SG
    beneficiary_validate_body:
      required:
      - amount
      - beneficiary
      - payout_method_type
      - sender_country
      - sender_currency
      - sender_entity_type
      type: object
      properties:
        amount:
          type: number
          description: "Maximum payout amount to validate, in units of the currency\
            \ defined in `sender_currency`. Decimal."
        beneficiary:
          description: String starting with **beneficiary_** or the object describing
            the beneficiary.
          example: beneficiary_d895d90d276869efe1e359386a1fb3e3
          oneOf:
          - type: string
          - $ref: '#/components/schemas/Beneficiary'
        identifier_type:
          type: string
          description: Identifier type of beneficiary
        identifier_value:
          type: string
          description: Identifier value to filter with
        payout_method_type:
          type: string
          description: The type of the payout method. Set to a value included in the
            response to List Payout Method Types. The two-letter prefix must match
            the beneficiary country code.
          example: us_general_bank
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
    inline_response_200_14:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_14_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_15:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_15_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_6:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_UPDATE_PAYOUT
          message: "The request tried to update a payout, but the payout was not found.\
            \ The request was rejected. Corrective action: For the 'payout' path parameter,\
            \ use the ID of a valid payout, a string starting with **payout_**."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_UPDATE_PAYOUT
          status: ERROR
    payouts_sender_body:
      required:
      - country
      - currency
      - entity_type
      type: object
      properties:
        company_name:
          type: string
          description: Name of the sender company. Relevant when `entity_type` is
            **company**.
          example: ABC
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        entity_type:
          $ref: '#/components/schemas/EntityType'
        first_name:
          type: string
          description: First name of the sebder. Relevant when entity_type is individual.
          example: Scott
        identification_type:
          type: string
          description: Type of identification document for the sender.
          example: drivers_license
        identification_value:
          type: string
          description: Identification number on the document mentioned in identification_type.
          example: ANDSFS8974562
        last_name:
          type: string
          description: Last name of the sender. Relevant when `entity_type` is **individual**.
          example: Williams
    inline_response_200_16:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Sender'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_7:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_GET_SENDER
          message: "The request attempted an operation that requires a payout sender,\
            \ but the sender was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid sender."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_GET_SENDER
          status: ERROR
    inline_response_200_17:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_17_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_18:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayoutMethodType'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_400_8:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
      example:
        status:
          error_code: ERROR_GET_PAYOUT
          message: "The request tried to retrieve a payout, but the payout was not\
            \ found. The request was rejected. Corrective action: Use the ID of a\
            \ valid payout."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_GET_PAYOUT
          status: ERROR
    payouts_payoutId_body:
      type: object
      properties:
        description:
          type: string
          description: Description of the payout.
        metadata:
          type: object
          description: A JSON object defined by the client.
    inline_response_200_19:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payout'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_20:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DailyRate'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_21:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Ewallet'
    v1ewallets_contact:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        total_count:
          type: number
        has_more:
          type: boolean
        url:
          type: string
        ewallet_reference_id:
          type: string
          description: Rapyd Wallet ID defined by the customer or end user. Must be
            unique.
        first_name:
          type: string
          description: First name of the Rapyd Wallet owner.
        last_name:
          type: string
          description: Last name of the Rapyd Wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
        type:
          type: string
          description: "Type of wallet, company or person. Default is person."
        phone_number:
          type: string
          description: Phone number of the Rapyd Wallet owner.
    v1_ewallets_body:
      required:
      - contact
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/v1ewallets_contact'
        ewallet_reference_id:
          type: string
          description: Rapyd Wallet ID defined by the customer or end user. Must be
            unique.
        first_name:
          type: string
          description: First name of the Rapyd Wallet owner.
        last_name:
          type: string
          description: Last name of the Rapyd Wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
        type:
          type: string
          description: "Type of wallet, company or person. Default is person."
    inline_response_200_22:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Ewallet'
        status:
          $ref: '#/components/schemas/Status'
    ewallets_ewalletToken_body:
      required:
      - ewalletToken
      type: object
      properties:
        ewallet_reference_id:
          type: string
          description: Rapyd Wallet ID defined by the customer or end user.  Must
            be unique.
        first_name:
          type: string
          description: First name of the Rapyd Wallet owner.
        last_name:
          type: string
          description: Last name of the Rapyd Wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
    inline_response_200_23:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
    account_limits_body:
      required:
      - amount
      - currency
      - type
      type: object
      properties:
        account_id:
          type: string
          description: The ID of the account within the wallet.
        amount:
          type: string
          description: The amount of the limit.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency of an existing
            account.
        type:
          type: string
          description: The limit type.
    inline_response_200_24:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_25:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          $ref: '#/components/schemas/Account'
    inline_response_200_26:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EwalletTransaction'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_27:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EwalletTransactionDetails'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_28:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DailyRate'
        status:
          $ref: '#/components/schemas/Status'
    issuing_bankaccounts_body:
      required:
      - country
      - currency
      - ewallet
      type: object
      properties:
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the wallet’s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_29:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_29_data'
        status:
          $ref: '#/components/schemas/Status'
    bankaccounts_bankaccounttransfertobankaccount_body:
      required:
      - amount
      - currency
      - issued_bank_account
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code. Must
            be the same as the currency of the virtual account.
        issued_bank_account:
          type: string
          description: ID of the Virtual Account Number object. String starting with
            **issuing_**
    inline_response_200_30:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_30_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_31:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_31_data'
        status:
          $ref: '#/components/schemas/Status'
    bankaccounts_virtualAccountId_body:
      properties:
        requesting_currency:
          $ref: '#/components/schemas/Currency'
    inline_response_200_32:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_32_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_33:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_33_data'
        status:
          $ref: '#/components/schemas/Status'
    inline_response_200_34:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/CheckoutPageResponse'
    v1_checkout_body:
      allOf:
      - $ref: '#/components/schemas/HostedPageAdditionalResponse'
      - required:
        - amount
        - country
        - currency
    inline_response_200_35:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
    inline_response_200_36:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Coupon'
    inline_response_200_37:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_37_data'
    inline_response_200_38:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    v1_customers_body:
      allOf:
      - $ref: '#/components/schemas/CustomerRequest'
      - required:
        - name
    inline_response_200_39:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Customer'
    inline_response_400_9:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_CREATE_CUSTOMER
          message: "The request tried to create or update a customer, but the wallet\
            \ ID provided is already in use by another customer. The request was rejected.\
            \ Corrective action: Create a new wallet."
          response_code: ERROR_CREATE_CUSTOMER
          status: ERROR
    inline_response_400_10:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_GET_CUSTOMER
          message: "The request attempted an operation that requires the ID of a customer,\
            \ but the customer was not found. The request was rejected. Corrective\
            \ action: Use the correct ID of the customer, a string starting with \"\
            cus_\""
          response_code: ERROR_GET_CUSTOMER
          status: ERROR
    inline_response_400_11:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: INVALID_CUSTOMER_ID
          message: "The request attempted an operation that requires a valid customer\
            \ ID, but the customer was not found. The request was rejected. Corrective\
            \ action: Use the correct customer, or create a new customer."
          response_code: INVALID_CUSTOMER_ID
          status: ERROR
    inline_response_200_40:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_40_data'
    inline_response_400_12:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_DELETE_CUSTOMER
          message: "The request tried to delete a customer, but the operation failed.\
            \ Corrective action: Determine whether the customer was already deleted,\
            \ and why there were multiple requests to delete it."
          response_code: ERROR_DELETE_CUSTOMER
          status: ERROR
    inline_response_200_41:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/DiscountCustomerResponse'
    inline_response_200_42:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_40_data'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_43:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPaymentMethod'
    customerId_payment_methods_body:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentMethodType'
    inline_response_200_44:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/CustomerPaymentMethod'
    inline_response_400_13:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_CREATE_PAYMENT_METHOD
          message: "The request attempted an operation that requires specific fields\
            \ for payment method, but a required field was missing, or an extra, unallowed\
            \ field was included. Corrective action: Run \"Get Payment Method Required\
            \ Fields\" and check all input fields."
          response_code: ERROR_CREATE_PAYMENT_METHOD
          status: ERROR
    inline_response_400_14:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
          message: "The request attempted an operation that requires the default payment\
            \ method of a customer, but the customer does not have a default payment\
            \ method. The request was rejected."
          response_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
          status: ERROR
    inline_response_200_45:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_45_data'
    inline_response_400_15:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
          message: "The request tried to delete a customer's default payment method,\
            \ but the payment method was in use. The request was rejected. Corrective\
            \ actionis to use \"List Subscriptions\", filtered by the customer's ID,\
            \ then use \"Cancel Subscription\" to remove all subscriptions that use\
            \ the customer's ID or the payment method that you want to delete."
          response_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
          status: ERROR
    inline_response_200_46:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplePayObjectResponse'
    inline_response_200_47:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dispute'
    inline_response_200_48:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Dispute'
    inline_response_200_49:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/EscrowResponse'
    inline_response_400_16:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_GET_ESCROW
          message: "The request attempted an operation that requires a payment and\
            \ its escrow, but the payment or the escrow was not found. The request\
            \ was rejected. Corrective action: Use a valid ID for the payment and\
            \ for the escrow."
          response_code: ERROR_GET_ESCROW
          status: ERROR
    escrow_escrow_releases_body:
      allOf:
      - $ref: '#/components/schemas/Escrow'
      - required:
        - ewallets
    inline_response_200_50:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EscrowResponse'
    inline_response_400_17:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_CARD_VALIDATION_IN_PAYMENT_WITH_ESCROW
          message: "The request attempted to validate a card as part of an escrow\
            \ transaction, but these two operations must be done separately. The request\
            \ was rejected. Corrective action: Create a payment with a card payment\
            \ method, set 'capture' to false, set 'amount’ to 0, and set 'escrow'\
            \ to null. Next, create the payment with the escrow."
          response_code: ERROR_CARD_VALIDATION_IN_PAYMENT_WITH_ESCROW
          status: ERROR
    payments_group_payments_body:
      required:
      - payments
      type: object
      properties:
        description:
          type: string
          description: Description of the group payment
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payments:
          type: object
          description: "Array of 'payment' objects. For details about the fields in\
            \ the 'payment' object, see [Create Payment](https://docs.rapyd.net/en/create-payment.html)."
    inline_response_200_51:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/GroupPayment'
    inline_response_400_18:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_CREATE_GROUP_PAYMENT_EXCEEDED_MAX_PARTICIPANTS
          message: "The request tried to create a group payment, but there were too\
            \ many individual payments. The request was rejected. Corrective action:\
            \ Use 2 to 10 payments."
          response_code: ERROR_CREATE_GROUP_PAYMENT_EXCEEDED_MAX_PARTICIPANTS
          status: ERROR
    inline_response_400_19:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_GET_GROUP_PAYMENT
          message: "The request attempted an operation that requires a group payment,\
            \ but the group payment was not found. The request was rejected. Corrective\
            \ action: Use the ID of a valid group payment, a string starting with\
            \ 'gp_'."
          response_code: ERROR_GET_GROUP_PAYMENT
          status: ERROR
    inline_response_400_20:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_MISSING_GROUP_PAYMENT
          message: "The request attempted an operation that requires a group payment,\
            \ but the group payment was not found. The request was rejected. Corrective\
            \ action: Use the ID of a valid group payment, a string starting with\
            \ 'gp_'."
          response_code: ERROR_MISSING_GROUP_PAYMENT
          status: ERROR
    inline_response_200_52:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceResponse'
    inline_response_400_21:
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_53:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/InvoiceResponse'
    invoices_invoiceId_body:
      type: object
      properties:
        days_until_due:
          type: number
          description: The number of days until the due date.
        description:
          type: string
          description: Description of the invoice.
        due_date:
          type: string
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the days_until_due field. Format is in Unix time."
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Object containing additional payment_options fields.
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        tax_percent:
          type: number
          description: "The tax rate, defined as a percentage."
    invoiceId_pay_body:
      properties:
        payment_method:
          type: string
          description: "ID of the payment method for paying the invoice. If not included\
            \ in the body, then the customer's default_payment_method is used."
    inline_response_200_54:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
    v1orders_items:
      type: object
      properties:
        amount:
          type: string
          description: "Price of one SKU unit, in the currency defined in currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015."
        currency:
          $ref: '#/components/schemas/Currency_1'
        description:
          type: string
          description: Description of the item.
        parent:
          type: string
          description: "ID of the SKU object that represents the product. String starting\
            \ with sku_. Each SKU can appear in this list only one time, for items\
            \ of type 'sku'. Required when type is sku. Must be null when type is\
            \ shipping."
        type:
          type: string
          description: Type of line item.
          enum:
          - shipping
          - sku
        quantity:
          type: number
          description: Quantity of the product in the line item. Integer. Required
            when type is sku.
    v1_orders_body:
      required:
      - currency
      - customer
      - items
      type: object
      properties:
        coupon:
          type: string
          description: "ID of a coupon that is applied against this order. String\
            \ starting with coupon_. The duration field of the coupon must be set\
            \ to **repeating**, and the `duration_in_months` and `discount_duration_in_uses`\
            \ fields must be set to **1**."
        customer:
          type: string
          description: ID of the customer. String starting with cus_.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the objects
            in the 'items' list.
        email:
          type: string
          description: Email address of the customer.
        items:
          type: array
          description: Array of line items.
          items:
            $ref: '#/components/schemas/v1orders_items'
        metadata:
          type: object
          description: A JSON object defined by the client.
        shipping_address:
          $ref: '#/components/schemas/Address_1'
        tax_percent:
          type: number
          description: Percentage of tax to charge. Decimal.
        upstream_id:
          type: string
          description: "Merchant-defined ID for the order. If the merchant does not\
            \ define an ID, Rapyd generates it."
    inline_response_200_55:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/OrderResponse'
    orders_orderId_body:
      properties:
        coupon:
          type: string
          description: "ID of a coupon that is applied against this order. String\
            \ starting with **coupon_**. The duration field of the coupon must be\
            \ set to **repeating**, and the `duration_in_months` and `discount_duration_in_uses`\
            \ fields must be set to **1**."
        metadata:
          type: object
          description: A JSON object defined by the client.
        tax_percent:
          type: number
          description: Percentage of tax to charge. Decimal.
        status:
          type: string
          description: "Indicates the status of the order. Can be changed when status\
            \ is pending, paid or fulfilled"
          enum:
          - paid
          - pending
          - canceled
          - fulfilled
          - returned
          - partial
    v1ordersorderIdreturns_items:
      type: object
      properties:
        description:
          type: string
        parent:
          type: string
        type:
          type: string
          enum:
          - sku
          - shipping
          - tax
        quantity:
          type: number
        currency:
          type: string
        amount:
          type: number
        order_id:
          type: string
    orderId_returns_body:
      required:
      - items
      type: object
      properties:
        order_id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1ordersorderIdreturns_items'
    inline_response_200_56:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/OrderReturnedResponse'
    orderId_pay_body:
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_method:
          type: string
          description: "ID of the payment method. String starting with card_ or other_.\
            \ If not specified, the payment method is the default_payment_method of\
            \ the customer."
        customer:
          type: string
          description: ID of a customer. String starting with cus_. The order is paid
            with the customer's default payment method.
    inline_response_200_57:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturnedResponse'
    inline_response_200_58:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodType'
    inline_response_200_59:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/PaymentMethodTypeRequiredFields'
    inline_response_200_60:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentLink'
    v1hostedcollectcard_card_fields:
      type: object
      properties:
        recurrence_type:
          type: string
          description: "Specifies the primary intended purpose of the saved payment\
            \ method. See Saving a European Card While Creating a Payment. One of\
            \ the following values: <BR> * **installment** - Regular payments for\
            \ a defined number of payment cycles. <BR> * **recurring** - Regular payments\
            \ for an indefinite period. <BR> * **unscheduled** - Individual unrelated\
            \ payments."
          default: unscheduled
      description: Contains details about the card.
    collect_card_body:
      required:
      - country
      - customer
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Indicates whether the hosted page displays address fields\
            \ to fill in.<BR> * **true** - The address fields are displayed. <BR>\
            \ * **false** - The address fields are displayed only for country codes\
            \ **US**, **GB** and **CA**."
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        card_fields:
          $ref: '#/components/schemas/v1hostedcollectcard_card_fields'
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.The two-letter ISO 3166-1 ALPHA-2 code
            for the country.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> * If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        page_expiration:
          type: string
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. Range: 1 minute to 30 days."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, **dk_visa_card**. For a list of payment methods, use [List\
            \ Payment Methods by Country](https://docs.rapyd.net/en/list-payment-methods-by-country.html)."
    inline_response_200_61:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardTokenResponse'
    inline_response_400_22:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_TOKENIZE_CARD_NO_PAYMENT_METHODS
          message: "The request tried to create a token for future use of a card,\
            \ but there are no relevant card payment methods available in the country\
            \ for the merchant. The request was rejected. Corrective action: Contact\
            \ Client Support."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_TOKENIZE_CARD_NO_PAYMENT_METHODS
          status: ERROR
    collect_payments_body:
      required:
      - amount
      - country
      - currency
      - items
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the payment, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015.<BR> On the hosted\
            \ payment page, the customer: <BR> * Cannot modify the amount when amount_is_editable\
            \ is false or not used. <BR> * Can modify the amount when amount_is_editable\
            \ is true and amount has a positive value. <BR> * Must enter an amount\
            \ when amount_is_editable is true and amount is 0, null, or not used."
        amount_is_editable:
          type: boolean
          description: Determines whether the customer can edit the amount. <BR> *
            **true** - The customer can edit the amount. <BR> * **false** - The customer
            cannot edit the amount.
          default: false
        checkout:
          type: object
          description: Optional parameters for the checkout page.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer).<BR>* **buy** - The currency that the Rapyd\
            \ Wallet receives for goods or services. Fixed side buy relates to the\
            \ seller (merchant) funds. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD.<BR>* **sell** - The currency that the buyer is charged for\
            \ purchasing goods or services. Fixed side sell relates to the buyer (customer)\
            \ funds. For example, a US-based merchant wants to charge a buyer 2,000\
            \ MXN and will accept whatever amount in USD that is converted from 2,000\
            \ MXN."
          default: buy
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'. <BR> * When this parameter\
            \ is null, the language of the user's browser is used. <BR> If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
          default: en
        max_payments:
          type: number
          description: "Indicates the maximum number of times that the payment link\
            \ can be used for payments. When not indicated, there is no limit."
          example: 7
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code. <BR><BR>* When `fixed_side` is **sell**, it is the currency\
            \ received in the Rapyd Wallet. <BR><BR>* When `fixed_side` is **buy**,\
            \ it is the currency charged to the buyer (customer)."
    inline_response_200_62:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    v1_payments_body:
      required:
      - amount
      - currency
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address_1'
        amount:
          type: number
          description: "The amount received by the recipient, in units of the currency\
            \ defined in currency. Decimal, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015. To verify\
            \ a card, set to 0."
          default: 0.0
        capture:
          type: boolean
          description: "Determines when the payment is processed for capture. When\
            \ true, the payment is captured immediately. When false, the payment is\
            \ captured at a later time. Relevant to cards. Default is true."
          default: true
        client_details:
          $ref: '#/components/schemas/ClientDetailsObject'
        complete_payment_url:
          type: string
          description: URL where the customer is redirected after successfully completing
            an operation on an external page.
        currency:
          $ref: '#/components/schemas/Currency_1'
        customer:
          type: string
          description: string - ID of the customer who is making the payment. String
            starting with cus_. Required if payment_method is blank. object - Contains
            all required fields
        description:
          type: string
          description: Description of the payment
        error_payment_url:
          type: string
          description: URL where the customer is redirected in case of an error in
            the operation. Provided by the client.Relevant to bank redirect payment
            methods
        escrow:
          type: boolean
          description: Determines whether the payment is held in escrow for later
            release.
        escrow_release_days:
          pattern: "/[1-90]/"
          type: integer
          description: "Determines the number of days after creation of the payment\
            \ that funds are released from escrow. Funds are released at 5:00 pm GMT\
            \ on the day indicated. Integer, range between 1-90. Default is 90."
        ewallet:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
        ewallets:
          description: Represents the wallets that the money is paid into. Array of
            objects.
        expiration:
          type: number
          description: "End of the time allowed for customer to make this payment,\
            \ in Unix time. Must be after the current time"
          default: 0
        fixed_side:
          type: string
          description: Indicates whether the FX rate is fixed for the buy side (seller's
            Rapyd Wallet) or for the sell side (buyer).
        group_payment:
          type: string
          description: "ID of the group payment, a string starting with 'gp_'. Relevant\
            \ to replacing a payment that failed."
        initiation_type:
          type: string
          description: Describes how the transaction was initiated.
          enum:
          - customer_present
          - installment
          - moto
          - recurring
          - unscheduled
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fees:
          $ref: '#/components/schemas/Fee'
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/PaymentMethodType'
        payment_method_options:
          type: object
          description: "Object describing additional information required for the\
            \ payment. The object is returned by Get Payment Method Required Fields.\
            \ Note that Transactions with 3DS authentication must be authenticated\
            \ within 15 minutes, after which the possibility to authenticate expires."
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
        requested_currency:
          type: string
          description: "When fixed_side is sell, it is the currency received in the\
            \ Rapyd Wallet. . When fixed_side is buy, it is the currency charged to\
            \ the buyer (customer). Three-letter ISO 4217 code."
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's bank statement.
    inline_response_200_63:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Payment'
    inline_response_400_23:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_GET_PAYMENT
          message: "The request tried to retrieve a payment, but the payment was not\
            \ found. The request was rejected. Corrective action: Use a valid payment\
            \ ID."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_PAYMENT
          status: ERROR
    payments_paymentId_body:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address_1'
        description:
          type: string
          description: Description of the payment.
        escrow:
          type: boolean
          description: "To release escrow funds immediately, set to false. If there\
            \ are multiple sellers, the funds are released to all of them. Relevant\
            \ to payments with escrow."
        escrow_release_days:
          pattern: "/[1-90]/"
          type: integer
          description: Defines the number of days after the creation of the payment
            that the funds are automatically released. Relevant when escrow is true.
        initiation_type:
          type: string
          description: Category of transaction initiation type.
        metadata:
          type: object
          description: A JSON object defined by the client.
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
    v1_addresses_body:
      allOf:
      - $ref: '#/components/schemas/Address'
    inline_response_200_64:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/AddressResponse'
    inline_response_400_24:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: INVALID_ADDRESS_PHONE_NUMBER
          message: "The request tried to add or update a phone number for an address,\
            \ but the phone number is not in proper E.164 format or is not valid.\
            \ The request was rejected. Corrective action: Submit the phone number\
            \ in proper E.164 format."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: INVALID_ADDRESS_PHONE_NUMBER
          status: ERROR
    inline_response_400_25:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_ADDRESS_GET
          message: "The request attempted an operation that requires an address, but\
            \ the address was not found. The request was rejected. Corrective action:\
            \ For the 'address' parameter, use a valid address ID."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_ADDRESS_GET
          status: ERROR
    inline_response_400_26:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_DELETE_ADDRESS
          message: "The request tried to delete the address, but this operation failed.\
            \ The request was rejected. Corrective action: None. Only an address that\
            \ is linked to a customer or not linked to any object can be deleted."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_DELETE_ADDRESS
          status: ERROR
    inline_response_200_65:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    v1paymentssubscriptions_subscription_items:
      type: object
      properties:
        plan:
          type: string
          description: ID of the plan assigned to this subscription item.
        quantity:
          type: number
    payments_subscriptions_body:
      required:
      - customer
      - subscription_items
      type: object
      properties:
        billing:
          type: string
          description: Determines the method of billing. Set to **pay_automatically**.
        billing_cycle_anchor:
          type: number
          description: "Determines the start of the next billing cycle, as defined\
            \ in the plan described in the 'items'. Value must be timestamp in Unix\
            \ time."
        cancel_at_period_end:
          type: boolean
          description: Terminates the subscription at the end of the current billing
            period.
        coupon:
          type: string
          description: "The ID of a discount coupon that applies to all subscription\
            \ items associated with this subscription. If the coupon defines a fixed\
            \ monetary discount, it must use the same currency as the subscription's\
            \ plan."
        customer:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with cus_.
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          $ref: '#/components/schemas/Payment'
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/PaymentMethodType'
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. When true, the invoice is issued when the subscription\
            \ is created. When false (the default), the invoice is issued an hour\
            \ after the subscription is created."
        subscription_items:
          type: array
          description: Array of subscription items. Each item contains a plan (required)
            and a quantity
          items:
            $ref: '#/components/schemas/v1paymentssubscriptions_subscription_items'
        tax_percent:
          type: number
          description: The percentage of tax that is applied to the entire amount
            of the invoice.
        trial_end:
          type: number
          description: "The time of the end of the customer's free trial period. If\
            \ trial_from_plan is set, leave this parameter unset."
        trial_from_plan:
          type: boolean
          description: "Determines whether a free trial period can be defined in a\
            \ 'plan' object attached to the subscription. If trial_end is set, leave\
            \ this parameter unset."
        trial_period_days:
          type: number
          description: The number of days in the customer's free trial period.
    inline_response_200_66:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Subscription'
    subscriptions_subscriptionId_body:
      type: object
      properties:
        billing:
          type: string
          description: Determines the method of billing. Set to pay_automatically.
        billing_cycle_anchor:
          type: string
          description: "Determines the start of the next billing cycle, as defined\
            \ in the plan described in the 'items'. Value must be timestamp in Unix\
            \ time."
        cancel_at_period_end:
          type: boolean
          description: Terminates the subscription at the end of the current billing
            period.
        coupon:
          type: string
          description: "The ID of a discount coupon that applies to all subscription\
            \ items associated with this subscription. If the coupon defines a fixed\
            \ monetary discount, it must use the same currency as the subscription's\
            \ plan."
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          $ref: '#/components/schemas/PaymentOptions'
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: '#/components/schemas/PaymentMethodType'
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. When true, the invoice is issued when the subscription\
            \ is created. When false (the default), the invoice is issued an hour\
            \ after the subscription is created."
        subscription_items:
          type: array
          description: Array of subscription items. Each item contains a plan (required)
            and a quantity
          items:
            type: string
        tax_percent:
          type: number
          description: The percentage of tax that is applied to the entire amount
            of the invoice.
        trial_end:
          type: number
          description: "The time of the end of the customer's free trial period. If\
            \ trial_from_plan is set, leave this parameter unset."
        trial_from_plan:
          type: boolean
          description: "Determines whether a free trial period can be defined in a\
            \ 'plan' object attached to the subscription. If trial_end is set, leave\
            \ this parameter unset."
        trial_period_days:
          type: number
          description: The number of days in the customer's free trial period.
    inline_response_200_67:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_67_data'
    inline_response_200_68:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_69:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    v1_plans_body:
      required:
      - currency
      - interval
      - product
      type: object
      properties:
        aggregate_usage:
          type: string
          description: Determines which quantity is used to calculate the pricing.
            Relevant when usage_type is metered. Default is sum.
        amount:
          type: number
          description: "The amount to charge in the billing cycle. For a free service,\
            \ use 0. Relevant when billing_scheme is set to per_unit. When the billing_scheme\
            \ is set to tiered, set the amount in the tiers array."
        billing_scheme:
          type: string
          description: "Describes how to compute the price per billing period. One\
            \ of the following values - per_unit, tiered"
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in fields
            that represent monetary amounts. Uppercase.
        id:
          type: string
          description: "Unique ID for this payment plan. English alphanumeric characters\
            \ and underscore. Limited to 44 characters. If the merchant does not define\
            \ an ID, Rapyd generates a string starting with plan_."
        interval:
          type: string
          description: Specifies the units used in defining the billing cycle.
        interval_count:
          type: number
          description: Number of intervals in the billing cycle. Default is 1.
        metadata:
          type: object
          description: A JSON object defined by the client.
        nickname:
          type: string
          description: Brief description of the pricing plan.
        product:
          type: string
          description: ID of the 'product' object that this plan is for. The product
            must have type set to service.
        tiers:
          type: string
          description: Defines a tiered pricing structure. Array of objects. Must
            be null when billing_scheme is set to per_unit.
        tiers_mode:
          type: string
          description: Determines the mode for calculating the total tiered charge.
        transform_usage:
          type: object
          description: Defines the transformation that is applied to the reported
            usage before the billed price is computed.
        trial_period_days:
          type: number
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
        usage_type:
          type: string
          description: "Determines whether the customer is billed when the service\
            \ is not actually used. One of the following values - metered, licensed"
    inline_response_200_70:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Plan'
    plans_planId_body:
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        nickname:
          type: string
          description: Brief description of the pricing plan.
    inline_response_200_71:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_71_data'
    inline_response_200_72:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    v1products_package_dimensions:
      type: object
      properties:
        height:
          type: number
        length:
          type: number
        weight:
          type: number
        width:
          type: number
      description: Describes the physical size and weight of the product. Relevant
        when type is goods.
    v1_products_body:
      required:
      - name
      - type
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
            Default is true.
        attributes:
          type: array
          description: Array of up to 5 alphanumeric strings defined by the merchant.
            Each string defines the key in a key-value pair in the 'attributes' object
            in the corresponding 'sku' objects.
          items:
            type: string
        description:
          type: string
          description: Full text description of the product.
        id:
          type: string
          description: "Unique string for identification of the product. Legal input\
            \ includes all the English alphanumeric characters and the underscore\
            \ (_) character. If the merchant does not define an ID, Rapyd generates\
            \ it with a string that starts with product_"
        images:
          type: array
          description: An array of images. Each image is a string in Base64 encoding.
          items:
            type: string
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that is displayed to the
            customer.
        package_dimensions:
          $ref: '#/components/schemas/v1products_package_dimensions'
        shippable:
          type: boolean
          description: Indicates whether the product is physically shipped to the
            customer. Relevant when type is goods. Default is false.
          example: false
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's invoice.
            Limited to 22 characters. Relevant when type is service.
        type:
          type: string
          description: "One of the following - services, goods"
          enum:
          - services
          - goods
        unit_label:
          type: string
          description: "A label that represents units of this product, such as seats,\
            \ on customers’ invoices. Relevant when type is service."
    inline_response_200_73:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Product'
    inline_response_400_27:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: INVALID_PRODUCT
          message: "The request tried to perform an operation that requires a product,\
            \ but the product was not found. The request was rejected. Corrective\
            \ action: Use a valid product ID."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: INVALID_PRODUCT
          status: ERROR
    products_productsId_body:
      required:
      - name
      - type
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
            Default is true.
        attributes:
          type: array
          description: Array of up to 5 alphanumeric strings defined by the merchant.
            Each string defines the key in a key-value pair in the 'attributes' object
            in the corresponding 'sku' objects.
          items:
            type: string
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that is displayed to the
            customer.
        package_dimensions:
          $ref: '#/components/schemas/v1products_package_dimensions'
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's invoice.
            Limited to 22 characters. Relevant when type is service.
        unit_label:
          type: string
          description: "A label that represents units of this product, such as seats,\
            \ on customersâ€™"
    inline_response_200_74:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
    v1_refunds_body:
      required:
      - payment
      type: object
      properties:
        amount:
          type: number
          description: The amount of the refund. Decimal.
        currency:
          type: string
          description: The currency of the amount received by the original payment
            source. Three-letter ISO 4217 code.
        ewallets:
          type: array
          description: ID of the wallet contact that the card is assigned to. String
            starting with **cont_**.
          items:
            type: string
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment:
          type: string
          description: ID of the Payment object that the refund is charged against.
            String starting with **payment_**.
        reason:
          type: string
          description: Description of the reason for the refund.
    inline_response_200_75:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Refund'
    refunds_complete_body:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: ID of the refund. String starting with **refund_**.
    refunds_group_payments_body:
      required:
      - group_payment
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the refund, in the currency of the group payment.\
            \ Decimal. If this parameter is omitted, the entire group payment is refunded."
        group_payment:
          type: string
          description: ID of the group payment that the refund is charged against.
            String starting with **gp_**.
    inline_response_200_76:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_76_data'
    refunds_refundId_body:
      type: object
      properties:
        metadata:
          description: A JSON object defined by the client.
    inline_response_200_77:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItem'
    v1_subscription_items_body:
      required:
      - plan
      - subscription
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        plan:
          type: string
          description: ID of the plan assigned to this subscription item. Cannot be
            a plan that is already part of the subscription.
        prorate:
          type: boolean
          description: Determines whether the charge is prorated when a subscription
            item is switched from one subscription to another in a billing cycle.
        proration_date:
          type: number
          description: Indicates the date in the middle of the billing period that
            is the start of the prorated charges.
        quantity:
          type: number
          description: The number of units of the service defined in the plan.
        subscription:
          type: string
          description: ID of the subscription that this item belongs to. String starting
            with **sub_**.
    inline_response_200_78:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/SubscriptionItem'
    subscription_items_subscriptionItemId_body:
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        prorate:
          type: boolean
          description: Determines whether the charge is prorated when a subscription
            item is switched from one subscription to another in a billing cycle.
        proration_date:
          type: number
          description: Indicates the date in the middle of the billing period that
            is the start of the prorated charges.
        quantity:
          type: number
          description: The number of units of the service defined in the plan.
    inline_response_200_79:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_79_data'
    inline_response_200_80:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_80_data'
    subscriptionItemId_usage_records_body:
      required:
      - quantity
      - timestamp
      type: object
      properties:
        action:
          type: string
          description: Determines how the quantity is defined in the usage record.
        metadata:
          type: object
          description: A JSON object defined by the client.
        quantity:
          type: number
          description: The usage quantity for the specified date and time (timestamp).
        timestamp:
          type: number
          description: Timestamp for the usage record in Unix time.
    inline_response_200_81:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_80_data'
    inline_response_200_82:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Discount'
    inline_response_200_83:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/Sku'
    v1skusskuId_inventory:
      type: object
      properties:
        type:
          type: string
          enum:
          - finite
          - infinite
          - bucket
        quantity:
          type: integer
        value:
          type: string
          enum:
          - in_stock
          - limited
          - out_of_stock
      description: "inventory object {quantity, type, value}"
    v1skusskuId_package_dimensions:
      type: object
      properties:
        length:
          type: number
        height:
          type: number
        weight:
          type: number
        width:
          type: number
      description: "Physical attributes of the SKU item. Object containing the following\
        \ fields - height, length, weight, width"
    skus_skuId_body:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency_1'
        inventory:
          $ref: '#/components/schemas/v1skusskuId_inventory'
        price:
          type: number
          description: The amount of the price. Decimal.
        product:
          type: string
          description: ID of the product that this SKU relates to. The type field
            of the product must be set to goods.
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
        attributes:
          type: array
          description: Array of alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the "attributes" list of the corresponding
            "product" object.
          items:
            type: string
        image:
          type: string
          description: URL of image associated with the product.
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: '#/components/schemas/v1skusskuId_package_dimensions'
    inline_response_200_84:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
    v1_skus_body:
      required:
      - currency
      - inventory
      - price
      - product
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency_1'
        inventory:
          $ref: '#/components/schemas/v1skusskuId_inventory'
        price:
          type: number
          description: The amount of the price. Decimal.
        product:
          type: string
          description: ID of the product that this SKU relates to. The type field
            of the product must be set to goods.
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
        attributes:
          type: array
          description: Array of alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the "attributes" list of the corresponding
            "product" object.
          items:
            type: string
        image:
          type: string
          description: URL of image associated with the product.
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: '#/components/schemas/v1skusskuId_package_dimensions'
    v1_identities_body:
      required:
      - country
      - document_type
      - ewallet
      - face_image
      - front_side_image
      - reference_id
      properties:
        back_side_image:
          type: string
          description: Base-64-encoded image of the back of the identity document.
        back_side_image_mime_type:
          type: string
          description: MIME type of the back side image of the identity document.
            Default is
        contact:
          type: string
          description: ID of a personal contact for a 'person' wallet.
        country:
          $ref: '#/components/schemas/Country_1'
        document_type:
          type: string
          description: Type of the identification document. Two-letter code.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet. String starting with ewallet_.
        face_image:
          type: string
          description: Base-64-encoded image of the face.
        face_image_mime_type:
          type: string
          description: MIME type of the face image. Default is image/jpeg.
        front_side_image:
          type: string
          description: Base-64-encoded image of the front of the identity document.
        front_side_image_mime_type:
          type: string
          description: MIME type of the front side image of the identity document.
            Default is image/jpeg.
        reference_id:
          type: string
          description: "ID of the identity verification request. Must be unique for\
            \ each request. Defined by the client. Maximum length: 36 characters.\
            \ In sandbox, to simulate success or failure, the string must contain\
            \ one of the following values: success, failure For example: 12345678success"
        request_type:
          type: string
          description: Determines the action that is taken on the request.
        send_callback:
          type: string
          description: Determines whether a webhook is sent with the results of the
            verification request.
    inline_response_200_85:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_85_data'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_400_28:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
      example:
        status:
          error_code: ERROR_UPDATE_EWALLET_CONTACT
          message: "The request tried to update a business wallet contact, but there\
            \ was a format error in the business details. The request was rejected.\
            \ Corrective action: Provide all data in the correct format. See the API\
            \ reference."
          response_code: ERROR_UPDATE_EWALLET_CONTACT
          status: ERROR
    inline_response_200_86:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_86_data'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_87:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_87_data'
    inline_response_200_88:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status_1'
        data:
          $ref: '#/components/schemas/inline_response_200_88_data'
    applications_hosted_body:
      required:
      - country
      - phone_number
      - rapyd_entity_token
      type: object
      properties:
        application_type:
          type: string
          description: Code for the type of application.
          x-note: "If you do not specify application_type, the application is not\
            \ created until the applicant selects an application type and saves it."
        country:
          type: string
          description: The country where the company is domiciled. Two-letter ISO
            3166-1 ALPHA-2 code. The hosted application displays the country as the
            default setting.
        rapyd_entity_token:
          type: string
          description: The ID of the Rapyd wallet of the company. String starting
            with ewallet_.
          example: ewallet_ef84c580177dbfc4293b1cf73c73fc77
        phone_number:
          type: string
          description: The phone number of the applicant. This is the phone number
            where an authentication code is sent. Must have a leading plus sign (+).
        metadata:
          type: object
          description: A JSON object defined by the client.
        client_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing Back to
            Website to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing Close to
            exit the hosted page. This URL overrides the merchant_website URL. Does
            not support localhost URLs.
    inline_response_200_89:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VerifyHostedAppResponse'
        status:
          $ref: '#/components/schemas/Status_1'
    inline_response_200_90:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_90_data'
        status:
          $ref: '#/components/schemas/Status_1'
    VerifyHostedAppResponse_merchant_details_merchant_customer_support:
      type: object
      properties:
        email:
          type: string
          description: ""
        url:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
      description: ""
    VerifyHostedAppResponse_merchant_details:
      type: object
      properties:
        merchant_alias:
          type: string
          description: "The name that appears on the hosted page when merchant_logo\
            \ is not specified. To change this value, contact Client Support. Response\
            \ only."
        merchant_language:
          type: string
          description: |
            Determines the default language of the application page.  The values are documented in List Hosted Page Supported Languages.
          x-note: "When this parameter is null, the language of the user's browser\
            \ is used. * If the language of the user's browser cannot be determined,\
            \ the default language is English. Response only."
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. Response only. To\
            \ configure this feature, use the Client Portal."
        merchant_website:
          type: string
          description: The URL where the customer is redirected after exiting the
            hosted page.
        merchant_color:
          type: string
          description: ""
        merchant_design:
          type: string
          description: ""
        merchant_customer_support:
          $ref: '#/components/schemas/VerifyHostedAppResponse_merchant_details_merchant_customer_support'
        merchant_terms:
          type: string
          description: ""
        merchant_privacy_policy:
          type: string
          description: ""
      description: Object containing information about the merchant.
    PayoutAmountRangePerCurrency_inner:
      properties:
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
        payout_currency:
          $ref: '#/components/schemas/Currency'
    Ewallet_contacts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        has_more:
          type: boolean
        total_count:
          type: integer
        url:
          type: string
    Field_conditions:
      type: object
      properties:
        description:
          type: string
          description: Description of the condition.
        element_name:
          type: string
          description: "The name of a field, including the path. The field is the\
            \ first operand of the condition."
        operator:
          type: string
          description: A symbol representing the operator of the condition. String
            starting with $. The operator determines the relationship between the
            operands.
        threshold_value:
          description: des One or more possible values of the element_name field.
            The second operand of the condition.
          oneOf:
          - type: string
          - type: array
            items:
              type: string
    Payout_ewallets:
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in currency. Decimal. If the total amount of the payment is\
            \ not fully accounted for, the balance appears in the client wallet. Relevant\
            \ when percentage is not set."
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**. Read-only.
        percent:
          type: number
          description: The percentage that is paid to the wallet out of the total
            payment. Read-only.
    Payout_instructions:
      type: object
      properties:
        name:
          type: string
        steps:
          type: array
          items:
            type: object
            x-isDynamicObject: true
    PaymentAmountRangePerCurrency_inner:
      properties:
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
        currency:
          $ref: '#/components/schemas/Currency_1'
    CardTokenResponse_card_fields:
      type: object
      properties:
        recurrence_type:
          type: string
          description: "Specifies the primary intended purpose of the saved payment\
            \ method. See Saving a European Card While Creating a Payment. One of\
            \ the following values: <BR> * **installment - Regular payments for a\
            \ defined number of payment cycles.** <BR> * **recurring** - Regular payments\
            \ for an indefinite period. <BR> * **unscheduled** - Individual unrelated\
            \ payments."
      description: Contains details about the card.
    CardTokenResponse_payment_params:
      type: object
      properties:
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
      description: "Contains the following fields. When these fields do not include\
        \ values, the user is redirected to the hosted page, and a related status\
        \ message appears at the top of the page."
    Customer_payment_methods:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPaymentMethod'
        has_more:
          type: boolean
        total_count:
          type: integer
        url:
          type: string
      description: "An object containing the following fields - * data - A list of\
        \ up to three payment methods. For more information, see Customer Payment\
        \ Method Object. * has_more - Indicates whether there are more than three\
        \ payment methods for this customer. * total_count - Total number of payment\
        \ methods for this customer. * url - URL for requesting all of the payment\
        \ methods for this customer.."
    CustomerRequest_payment_method:
      type: object
      properties:
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: '#/components/schemas/Field_1'
        type:
          type: string
          description: "Type of the payment method. For example, it_visa_card"
      description: The payment method that is used when the transaction does not specify
        a payment method. String starting with **card_** or other_.
    Escrow_ewallets:
      type: object
      properties:
        ewallet:
          type: string
          description: "ID of the wallet, a string starting with **ewallet_**."
        amount:
          type: number
          description: The amount to release to this wallet. Relevant when `percentage`
            is not set.
        percentage:
          type: number
          description: "The percentage of this escrow to release to this wallet. Relevant\
            \ when `amount` is not set. On a partial release after the first, this\
            \ refers to the percentage of the original amount of the escrow."
      description: Describes the wallets and the releases from escrow.
    EscrowResponse_escrow_releases_data:
      type: object
      properties:
        amount:
          type: number
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        created_at:
          type: number
          description: "Date and time the escrow release was created, in Unix time."
        currency:
          type: string
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        ewallets:
          $ref: '#/components/schemas/Escrow_ewallets'
        id:
          type: number
          description: "ID of the escrow release, a string starting with **er_**."
        proportional_release:
          type: boolean
          description: Indicates that the wallets were released in the same proportion
            that was defined in the Create Payment request.
        trigger:
          type: string
          description: "Indicates what triggered the escrow release. One of the following:\
            \ <BR> * **event** - Funds were released due to an API request. <BR> **time**\
            \ - Funds were automatically released at 5:00 p.m. GMT (17:00 GMT) on\
            \ the day indicated in theCreate Payment request. <BR> **cancel_escrow**\
            \ - Escrow was canceled."
      description: Array of objects that describe individual escrow releases.
    EscrowResponse_escrow_releases:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EscrowResponse_escrow_releases_data'
        has_more:
          type: boolean
          description: Indicates that the number of escrow releases is greater than
            the number returned in the response.
        total_count:
          type: number
          description: Number of escrow releases.
        url:
          type: string
          description: URL for the record of all escrow releases for this payment.
      description: Array of objects that describe individual releases.
    HostedPageAdditionalResponse_cart_items:
      properties:
        amount:
          type: number
          description: The price of the item in the currency defined in currency.
        name:
          type: string
          description: The name of the item.
        quantity:
          type: number
          description: The quantity of the item.
        image:
          type: string
          description: The image that appears in the checkout page for this item.
      description: Describes the cart items that the customer is purchasing. These
        items are displayed at the checkout page.
    HostedPageAdditionalResponse_custom_elements:
      required:
      - billing_address_collect
      - cardholder_name
      - display_description
      - merchant_currency_only
      - payment_fees_display
      - save_card_default
      type: object
      properties:
        save_card_default:
          type: boolean
        payment_fees_display:
          type: boolean
        billing_address_collect:
          type: boolean
        display_description:
          type: boolean
        merchant_currency_only:
          type: boolean
        cardholder_name:
          type: string
        cardholder_preferred_currency:
          type: string
        dynamic_currency_conversion:
          type: boolean
      description: Description of the payment transaction.
    InvoiceItem_period:
      type: object
      properties:
        start:
          type: string
          description: "First date in the period covered by the invoice, in Unix time.\
            \ Response only."
        end:
          type: string
          description: "Last date in the period covered by the invoice, in Unix time.\
            \ Response only."
    OrderResponse_status_transitions:
      type: object
      properties:
        canceled:
          type: number
        fulfilled:
          type: number
        paid:
          type: number
        returned:
          type: number
        pending:
          type: number
        partial:
          type: number
      description: Indicates the last time in Unix time that the order transitioned
        to one of the following statuses. A zero value for a status indicates that
        the order has never transitioned to it.
    Payment_ewallets:
      properties:
        ewallet_id:
          type: string
        amount:
          type: number
        percent:
          type: number
        refunded_amount:
          type: number
        released_amount:
          type: number
    Payment_steps:
      type: object
      properties:
        step:
          type: string
    Payment_instructions:
      type: object
      properties:
        name:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Payment_steps'
    Payment_refunds:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        has_more:
          type: boolean
        total_count:
          type: integer
        url:
          type: string
      description: Refunds object
    Plan_tiers:
      type: object
      properties:
        amount:
          type: number
          description: The price for each item in this tier. Decimal number.
          example: 15
        flat_amount:
          type: number
          description: Additional price for the entire tier. Default is 0.
          example: 0
        up_to:
          description: "The upper volume limit for this tier. Valid values: inf (infinite)\
            \ or an integer."
          example: inf
          oneOf:
          - type: string
            example: inf
          - type: number
            example: 1
    Plan_transform_usage:
      type: object
      properties:
        divide_by:
          type: number
          description: Indicates the divisor in the transformation calculation. Integer.
            Default is 1.
          example: 1
        round:
          type: string
          description: Indicates whether the reported number of units should be rounded
            up or down to the next whole quantity specified in divide_by. String.
            Default is up.
      description: "Defines the transformation that is applied to the reported usage\
        \ before the billed price is computed. The transformation divides the quantity\
        \ by the divisor specified in divide_by, then rounds up or down according\
        \ to the setting in round. Relevant when billing_scheme is set to per_unit."
    Product_package_dimensions:
      type: object
      properties:
        height:
          type: number
          description: NA
          example: 10
        length:
          type: number
          description: NA
          example: 20
        weight:
          type: number
          description: NA
          example: 100
        width:
          type: number
          description: NA
          example: 40
      description: "Describes the physical size and weight of the product. Contains\
        \ the following fields: \n* height \n* length \n* weight \n* width \nThese\
        \ fields are represented as numbers, but it is the responsibility of the merchant\
        \ to define and interpret the relevant units of length and weight.\n"
    Refund_ewallets:
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in currency. Decimal. If the total amount of the payment is\
            \ not fully accounted for, the balance appears in the client wallet. Relevant\
            \ when percentage is not set."
        ewallet:
          type: string
          description: ID of the wallet. String starting with **ewallet_**. Read-only.
    Sku_package_dimensions:
      type: object
      properties:
        height:
          type: number
          description: NA
          example: 1
        length:
          type: number
          description: NA
          example: 2
        weight:
          type: number
          description: NA
          example: 3
        width:
          type: number
          description: NA
          example: 4
      description: "Physical attributes of the SKU item. Contains the following fields,\
        \ height length weight width These fields are represented as numbers, but\
        \ it is the responsibility of the merchant to define and interpret the relevant\
        \ units of length and weight."
    inline_response_200_3_data:
      type: object
      properties:
        delete:
          type: boolean
          description: Flag to indicate whether contact deleted or not
          example: true
        id:
          type: string
          description: Contact id
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
    inline_response_200_4_data_elements:
      minItems: 0
      type: object
      properties:
        element_name:
          type: string
        verified:
          type: boolean
    inline_response_200_4_data_compliance_levels:
      type: object
      properties:
        level:
          type: number
        elements:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_4_data_elements'
    inline_response_200_4_data:
      type: object
      properties:
        compliance_levels:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_4_data_compliance_levels'
    inline_response_200_5_data:
      type: object
      properties:
        bank_account:
          type: object
          description: Issuied virtual account.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        funding_instructions:
          type: object
          description: Issuied virtual account funding instructions.
        id:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issuied virtual account statuts.
        transactions:
          type: array
          description: Issuied virtual account transactions.
          items:
            $ref: '#/components/schemas/CardTransaction'
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the walletâ€™s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_6_data_transactions:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            cit_.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: Amount of the transaction.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        original_amount:
          type: number
          description: This field will show the initial transaction amount before
            conversion.
        original_currency:
          $ref: '#/components/schemas/Currency_1'
        fx_rate:
          type: number
          description: This field will indicate the exchange rate applied for the
            currency conversion
    inline_response_200_6_data:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            cit_.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        bank_account:
          type: object
          description: Issuied virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issuied virtual account statuts.
        description:
          type: string
          description: Description of the account.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: '#/components/schemas/inline_response_200_6_data_transactions'
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the walletâ€™s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_8_data:
      properties:
        id:
          type: string
          description: ID of the account. String starting with issuing_
        deleted:
          type: boolean
          description: Indicates whether the account has been successfully deleted
    inline_response_200_14_data:
      type: object
      properties:
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
        validated:
          type: boolean
          description: validation status
          example: true
    inline_response_200_15_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: Flag to indicate whether beneficiary deleted or not
          example: true
        id:
          type: string
          description: Beneficiary token
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
    inline_response_200_17_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: Flag to indicate whether sender deleted or not
          example: true
        id:
          type: string
          description: Sender token
          example: sender_b9342620e3eb13164286485bbff9eb7b
    inline_response_200_29_data:
      type: object
      properties:
        bank_account:
          type: object
          description: Issued virtual account.
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        id:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issued virtual account statuts.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: '#/components/schemas/CardTransaction'
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the wallet’s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_30_data_transactions:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: Amount of the transaction.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        receiving_currency:
          type: boolean
    inline_response_200_30_data:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        bank_account:
          type: object
          description: Issued virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issued virtual account statuts.
        description:
          type: string
          description: Description of the account.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: '#/components/schemas/inline_response_200_30_data_transactions'
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the wallet’s currency\
            \ account for the currency of the transaction.*"
        original_currency:
          type: string
          description: This field will display the currency in which the transaction
            was originally made.
        original_amount:
          type: string
          description: This field will show the initial transaction amount before
            conversion.
        fx_rate:
          type: string
          description: This field will indicate the exchange rate applied for the
            currency conversion
    inline_response_200_31_data:
      type: object
      properties:
        account_name:
          type: string
          description: Name of the bank account holder.
        account_number:
          type: string
          description: Number of the bank account.
        amount:
          type: string
          description: "The amount of the transaction, in units of the currency defined\
            \ in currency."
        bank_code:
          type: string
          description: "Bank identifier code, such as SWIFT, BIC, ABA, or other local\
            \ identifier."
        bank_name:
          type: string
          description: Name of the bank.
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        iban:
          type: string
          description: IBAN of the virtual bank account.
        id:
          type: string
          description: ID that is assigned by the remitter
        partner_transaction_id:
          type: string
          description: ID that is assigned by the client to the transaction.
        receiving_iban:
          type: string
          description: IBAN that was assigned to the Rapyd Wallet.
        remitter_reference:
          type: string
          description: "Optional information that the remitter adds to the transaction,\
            \ intended for the beneficiary. Supported by some payment methods."
        sort_code:
          type: string
          description: ""
        status:
          type: string
          description: Indicates the status of the transfer.
        updated_at:
          type: number
          description: "Time of update of the virtual account, in Unix time. Response\
            \ only."
        created_at_gw:
          type: string
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        original_currency:
          type: string
          description: This field will display the currency in which the transaction
            was originally made.
        original_amount:
          type: string
          description: This field will show the initial transaction amount before
            conversion.
        fx_rate:
          type: string
          description: This field will indicate the exchange rate applied for the
            currency conversion
    inline_response_200_32_data:
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        bank_account:
          type: object
          description: Issued virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issued virtual account statuts.
        description:
          type: string
          description: Description of the account.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: '#/components/schemas/inline_response_200_30_data_transactions'
    inline_response_200_33_data:
      type: object
      properties:
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: "Amount of the transaction, in units defined in currency."
        created_at:
          type: integer
          description: "Timestamp for the transaction, in Unix time"
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that is attached to the virtual account.
            String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with **isutran_**.
    inline_response_200_37_data:
      type: object
      properties:
        deleted:
          type: boolean
        id:
          type: string
    inline_response_200_40_data:
      type: object
      properties:
        id:
          type: string
        deleted:
          type: boolean
    inline_response_200_45_data:
      properties:
        id:
          type: string
        deleted:
          type: boolean
    inline_response_200_67_data:
      type: object
      properties:
        id:
          type: string
          description: discount id
        deleted:
          type: boolean
    inline_response_200_71_data:
      type: object
      properties:
        deleted:
          type: boolean
        id:
          type: string
          description: ID of the plan
    inline_response_200_76_data:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the group payment, in units defined by currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015. If the amount is a whole number,\
            \ use an integer and not a decimal."
        amount_to_replace:
          type: number
          description: Indicates the total amount of failed payments that have not
            been replaced. Response only.
        cancel_reason:
          type: string
          description: Reason for cancellation of the group payment. Response only.
        country:
          type: string
          description: Country where the payment methods are supported. Two-letter
            ISO 3166-1 ALPHA-2 code. Response only.
        currency:
          type: string
          description: Currency of the payments. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the group payment.
        expiration:
          type: number
          description: "End of the time allowed for customers to make this payment,\
            \ in Unix time. Response only."
        id:
          type: string
          description: ID of the Group Payment object. String starting with **gp_**.
        merchant_reference_id:
          type: string
          description: Merchant-defined ID. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        status:
          type: string
          description: Indicates the status of the group payment operation
    inline_response_200_79_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: "true if the item deleted successfully, else false."
        id:
          type: string
          description: ID of the subscription item.
    inline_response_200_80_data:
      type: object
      properties:
        id:
          type: string
        quantity:
          type: number
          description: The usage quantity for the specified date and time (timestamp).
        subscription_item:
          type: string
          description: ID of the subscription item.
        timestamp:
          type: string
          description: Timestamp for the usage record in Unix time.
    inline_response_200_85_data:
      type: object
      properties:
        id:
          type: string
          description: ID Verification.
        reference_id:
          type: string
          description: Organization Reference Token.
    inline_response_200_86_data:
      properties:
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            identification document.
        type:
          type: string
          description: Type of the identification document. Two-letter code
        name:
          type: string
          description: Name of the identification document. Two-letter code
        is_back_required:
          type: boolean
          description: Boolean if back image required
        is_address_extractable:
          type: boolean
          description: Boolean if address extractable
    inline_response_200_87_data:
      properties:
        application_type:
          type: string
          description: Code for the type of application. String starting with typ_.
        country:
          $ref: '#/components/schemas/Country_1'
        entity_type:
          $ref: '#/components/schemas/EntityTypeVerify'
    inline_response_200_88_data:
      type: object
      properties:
        status:
          type: string
          enum:
          - NEW
          - DON
          - EXP
    inline_response_200_90_data_application_type:
      type: object
      properties:
        application_type:
          type: string
          description: ""
        entity_type:
          type: string
          description: ""
        country:
          type: string
          description: ""
      description: ""
    inline_response_200_90_data_organization_details_merchant_customer_support:
      type: object
      properties:
        url:
          type: string
          description: ""
        email:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
      description: ""
    inline_response_200_90_data_organization_details:
      type: object
      properties:
        merchant_color:
          type: string
          description: ""
        merchant_website:
          type: string
          description: ""
        merchant_logo:
          type: string
          description: ""
        merchant_design:
          type: string
          description: ""
        merchant_language:
          type: string
          description: ""
        merchant_alias:
          type: string
          description: ""
        merchant_customer_support:
          $ref: '#/components/schemas/inline_response_200_90_data_organization_details_merchant_customer_support'
      description: ""
    inline_response_200_90_data_renew_result:
      type: object
      properties:
        redirect_to_app_type_page:
          type: boolean
          description: ""
        need_to_renew:
          type: boolean
          description: ""
      description: ""
    inline_response_200_90_data:
      type: object
      properties:
        token:
          type: string
          description: ""
          example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
        application_token:
          type: string
          description: ""
        country:
          type: string
          description: ""
        rapyd_entity_token:
          type: string
          description: ""
        client_reference_id:
          type: string
          description: ""
        cancel_url:
          type: string
          description: ""
        complete_url:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
        application_level:
          type: number
          description: ""
          enum:
          - 1
          - 2
        sell_type:
          type: string
          description: ""
        business_industry:
          type: string
          description: ""
        application_type:
          $ref: '#/components/schemas/inline_response_200_90_data_application_type'
        organization_details:
          $ref: '#/components/schemas/inline_response_200_90_data_organization_details'
        renew_result:
          $ref: '#/components/schemas/inline_response_200_90_data_renew_result'
