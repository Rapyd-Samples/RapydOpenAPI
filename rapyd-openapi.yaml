openapi: 3.0.0
info:
  title: Rapyd OpenAPI
  description: "This is a release of the OpenAPI specification for Rapyd's API methods.\
    \ It is recommended to initially run the methods in the sandbox environment. For\
    \ the most up-to-date documentation of Rapyd's methods, see the [online API Reference](https://docs.rapyd.net/en/api-reference.html).\
    \ <BR> For requirred signature, see [Request Signatures](https://docs.rapyd.net/en/request-signatures.html)."
  contact:
    email: rapyd_support@rapyd.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.20
servers:
- url: https://sandboxapi.rapyd.net/
  description: Sandbox server
- url: https://api.rapyd.net/
  description: Production server
tags:
- name: Payment Method Type
  description: A type of payment method that a customer can use for making payments.
- name: Payment
  description: Collects money from a payment method and deposits it into one or more
    Rapyd Wallets.
- name: Checkout Page
  description: Defines a customer-facing page that collects personal identifying information
    (PII) from the customer and creates a payment.
- name: Subscription
  description: "Rapyd provides the ability to create payments automatically every\
    \ month or other defined interval. This is called a subscription, and it has the\
    \ following prerequisites:<BR>* A customer profile with a payment method.<BR>*\
    \ One or more products of type service.<BR>* One or more plans that describe the\
    \ charges for services covered by the subscription."
- name: Subscription.Product
  description: A product or service for use with Rapyd Collect.
- name: Subscription.Plan
  description: Pricing structure for a single product of type service.
- name: Subscription.Subscription Item
  description: A product of type **service** that is charged to the customer periodically.
- name: Subscription.Invoice
  description: Contains a list of charges from a subscription and defines when the
    payment is due.
- name: Subscription.Invoice Item
  description: Represents one product of type **services** that is assigned to an
    invoice or a subscription.
- name: Payment Link
  description: Reuse a hosted payment page.<BR> A customer uses the payment link to
    open a hosted payment page. The customer provides required information and submits
    the payment on a Rapyd Checkout page.
- name: Payment.Card Token
  description: "Represents a card payment method that is stored in a customer profile.<BR>Sensitive\
    \ personal identifying information (PII) is stored in Rapyd's vault.<BR> The client\
    \ can use the token wherever a payment method is required, such as creating a\
    \ payment, subscription or invoice."
- name: Group Payment
  description: Collects money from multiple payment methods.<BR>A group payment consolidates
    2 to 10 individual payments into a single transaction.
- name: Escrow
  description: "Hold collected funds temporarily in an escrow.<BR>When you collect\
    \ funds from a customer, you can place the funds temporarily in an escrow instead\
    \ of paying them immediately to the payees."
- name: Refund
  description: "Full or partial refund of a payment.<BR>When the payment status is\
    \ CLO (closed), you can refund all or part of the money collected."
- name: Digital Wallet
  description: Information on supported digital wallet providers such as Apple Pay
    and Google Pay.
- name: Dispute
  description: A dispute is made against a specific payment.<BR>The disputed amount
    cannot exceed the amount of the payment.
- name: Customer
  description: "Customer profile, where payment methods are stored for future use."
- name: Payment.Address
  description: "Describes the address of a customer.<BR>The `address` object can be\
    \ added to the `Customer`, `Payment Method`, and Wallet `Contact` objects."
- name: Customer Payment Method
  description: Describes a payment method that has been saved to a customer profile.
- name: SKU
  description: A single item of physical inventory.<BR>The SKU is attached to a product
    where type is **goods**. <BR>An SKU is a prerequisite for an order.
- name: Order
  description: A single order of goods.
- name: Order.Return
  description: Represents a return of an order of goods.
- name: Coupon
  description: "Defines a discount on charges to the customer.The coupon can be applied\
    \ to the `Subscription`, `Customer`, and `Order` objects."
- name: Disburse.Payout Method Type
  description: Information about payout method types you can assign to beneficiaries
    (payees).<BR>A payout method type is a type of payout method that the client can
    use to pay money out of the Rapyd wallet.
- name: Disburse
  description: "Disbursement transactions.<BR> The source of a payout is a Rapyd Wallet.\
    \ To create a payout, you must first:<BR>* Find payout methods available in the\
    \ country of the beneficiary (payee).<BR>* Find the fields required for the payout\
    \ method you want."
- name: Disburse.Payout Beneficiary
  description: "Defines the beneficiary (payee) of a payout.<BR> When you create a\
    \ payout, you can include a fully populated `beneficiary` object or the ID of\
    \ a beneficiary."
- name: Disburse.Payout Sender
  description: "Defines the sender (payer) of a payout. <BR>When you create a payout,\
    \ you can include a fully populated `sender` object or the ID of a sender."
- name: Disburse.Upload Documents
  description: <BR>* Upload one supporting document file or multiple document files
    to a specific payout.<BR>* Retrieve and delete documents that have been uploaded.
- name: Disburse.Card Eligibility
  description: Provides additional information on the eligibility of cards for specific
    types of payout transactions.
- name: eWallet.Transaction
  description: Transfers between wallets and balances and limits of the accounts within
    the wallet.<BR>Transactions are generated by calls to the Rapyd API or by internal
    operations in the Rapyd system.
- name: eWallets
  description: "An eWallet represents a single Rapyd Wallet for a client, business,\
    \ or consumer.<BR>The Rapyd Wallet is the focus of all financial operations. Payments\
    \ are made into the wallet, payouts are made from the wallet and settlements to\
    \ the client's own bank account are made from the wallet."
- name: eWallet.Contact
  description: A personal or business contact for a Rapyd Wallet.<BR>The wallet contact
    describes a person who has rights to use the wallet.
- name: Issuing
  description: The Rapyd Issuing platform provides bank cards funded by the Rapyd
    Wallet.
- name: Issuing.Simulations
  description: Simulate third-party issuing related responses in the sandbox.
- name: Virtual Accounts
  description: Bank account number(s) issued to a Rapyd Wallet.<BR>The virtual account
    can receive funds from any bank using the bankâ€™s own tools. A wallet can have
    multiple virtual accounts.
- name: Localization Methods
  description: "Resource methods for countries, currencies, languages and FX rates."
- name: Webhook Methods
  description: Methods related to resending webhooks.
- name: Verify
  description: Methods related to verifying an identity as part of the Know Your Business
    (KYB) or Know Your Customer (KYC) verification process.
- name: Card Network Lookup Service
  description: Investigate a potential new merchant for experience with acquirers.<BR>The
    Card Network Lookup Service (CNLS) provides information about the prior credit
    card experience of a potential new merchant.
paths:
  /v1/payment_methods/countries/{countryId}:
    get:
      tags:
      - Payment Method Type
      summary: List Payment Methods by Country
      description: Retrieve a list of all payment methods available for a country.
        You can filter the results by specifying the `currency` query parameter.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/list-payment-methods-by-country.html
      operationId: getPaymentMethodsTypesByCountry
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: countryId
        in: path
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Country_1"
      - name: currency
        in: query
        description: Three-letter ISO 4217 code for the currency.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        "400":
          description: Bad Request. Country value is not recognized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payment_methods/{type}/required_fields:
    get:
      tags:
      - Payment Method Type
      summary: Get Payment Method Required Fields
      description: Retrieve the required fields for a payment method. The fields are
        returned as a list of objects. The name of each field appears in the `name`
        field of the response.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/get-payment-method-required-fields.html
      operationId: getPaymentMethodTypeRequiredFields
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: path
        description: The `type` of the payment method.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "400":
          description: Bad Request. Payment method is not recognized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_1"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments:
    get:
      tags:
      - Payment
      summary: List Payments
      description: Retrieve a list of all payments that you have created. Filter the
        list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payments.html
      operationId: listPayments
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: created_after
        in: query
        description: The ID of the payment created before the first payment you want
          to retrieve. String starting with **payment_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: created_before
        in: query
        description: The ID of the payment created after the last payment you want
          to retrieve. String starting with **payment_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customer
        in: query
        description: Filters the list for payments related to the specified customer.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: cus_753511a533a727cf28509812b4683edd
      - name: destination_card
        in: query
        description: Filters the list for payments related to the specified destination
          card.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the payment created after the last payment you want
          to retrieve. String starting with **payment_**. Deprecated.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ewallet
        in: query
        description: Filters the list for payments related to the specified wallet.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ewallet_61be0e6ad9f57121cff47a63902282ac
      - name: group
        in: query
        description: "When **true**, includes only group payments in the response.\
          \ <BR>When **false** (default), excludes group payments from the response."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: invoice
        in: query
        description: Filters according to the invoice. String starting with **invoice_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of payments to return. Range, 1-100. Default\
          \ is 50."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2
      - name: payment_method
        in: query
        description: Filters the list for payments related to the specified payment
          method.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: us_mastercard_card
      - name: order
        in: query
        description: Filters the list for payments related to the specified order.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the payment created before the first payment you want
          to retrieve. String starting with **payment_**. Deprecated.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscription
        in: query
        description: Filters the list for payments related to the specified subscription.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: merchant_reference_id
        in: query
        description: "Identifier defined by the client for reference purposes. Limit:\
          \ 45 characters."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
        "400":
          description: Bad Request. Query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_2"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Payment
      summary: Create Payment
      description: Create a payment
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/create-payment.html
      operationId: createPayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_payments_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Bad Request. Payment method not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_3"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/{paymentId}:
    get:
      tags:
      - Payment
      summary: Retrieve Payment
      description: Retrieve details of a payment
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payment.html
      operationId: retrievePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentId
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_bebddc4b4139d5a0f13cdcd4046cf2c1
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Bad Request. Payment not found for given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_4"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Payment
      summary: Update Payment
      description: "Capture some or all of a card payment that was previously authorized\
        \ with `capture` set to **false**.<BR>This method changes the `payment` object\
        \ status to **CLO** and triggers 'Payment Captured Webhook'. This webhook\
        \ contains the same information as the response. This method also triggers\
        \ 'Payment Completed Webhook'. The capture operation is also known as clearing\
        \ or completion.<BR>The scope of the capture operation depends on the client's\
        \ pre-authorization permissions. To change these permissions, contact Rapyd\
        \ Client Support."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-payment.html
      operationId: updatePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentId
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_36724a4ea01b438fd24ac3ab00b29150
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payments_paymentId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Status does not allow updates.
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_UPDATE_PAYMENT
                    message: "The request tried to update a payment, but the status\
                      \ of the payment does not allow updates. The request was rejected.\
                      \ Corrective action: None. Determine why an attempt was made\
                      \ to change the payment when the 'status' was not 'ACT'."
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_UPDATE_PAYMENT
                    status: ERROR
    delete:
      tags:
      - Payment
      summary: Cancel Payment
      description: "Cancel a payment where the status of the payment is ACT. Relevant\
        \ to payment methods where is_cancelable = true in the response to List Payment\
        \ Methods by Country. This method triggers the Payment Canceled webhook. This\
        \ webhook contains the same information as the response. NOTE: If the status\
        \ is CLO, use the Create Refund method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-payment.html
      operationId: cancelPayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentId
        in: path
        description: ID of the payment. String starting with payment_.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Bad Request. Payment not found or closed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_5"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/{paymentId}/capture:
    post:
      tags:
      - Payment
      summary: Capture Payment
      description: "Capture some or all of a card payment that was previously authorized\
        \ with `capture` set to **false**.<BR>This method changes the `payment` object\
        \ status to **CLO** and triggers 'Payment Captured Webhook'. This webhook\
        \ contains the same information as the response. This method also triggers\
        \ 'Payment Completed Webhook'. The capture operation is also known as clearing\
        \ or completion.<BR>The scope of the capture operation depends on the client's\
        \ pre-authorization permissions. To change these permissions, contact Rapyd\
        \ Client Support."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/capture-payment.html
      operationId: capturePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentId
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payment_548969fc5a0bf89da3cec70a1529338c
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/paymentId_capture_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Payment not found
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_CAPTURE_PAYMENT
                    message: "The request tried to capture a payment, but the payment\
                      \ could not be found or there was an error in the input parameters.\
                      \ The request was rejected. Corrective action: Determine whether\
                      \ the payment was closed, and check all input parameters."
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_CAPTURE_PAYMENT
                    status: ERROR
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/completePayment:
    post:
      tags:
      - Payment
      summary: Complete Payment
      description: "To simulate the completion of a payment by the action of a third\
        \ party, use this method in the sandbox.<BR> This method changes the payment\
        \ status to **CLO** (closed), and applies to the **cash**, **bank_redirect**,\
        \ **bank_transfer**, or **ewallet** payment method types.<BR> This method\
        \ also returns the 'Payment Completed' Webhook. This webhook contains the\
        \ same information as the response.<BR> For a card payment:<BR> * Capture\
        \ after authorization only - Use 'Capture Payment'.<BR> * Simulate 3-D Secure\
        \ (3DS) verification - See Simulating 3DS Authentication.<BR> **Prerequisites**:<BR>\
        \ * Create Payment"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/complete-payment-363014.html
      operationId: completePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payments_completePayment_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "400":
          description: Card used in payment not authenticated.
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_SIMULATE_COMPLETE_PAYMENT_CARD_NOT_AUTHENTICATED
                    message: "The request tried to complete a card payment in the\
                      \ sandbox, but the transaction requires 3DS authentication.\
                      \ The request was rejected. Corrective action: Browse to the\
                      \ URL in the 'redirect_url' field in the response to 'Create\
                      \ Payment'. In the simulated 3DS authentication window, enter\
                      \ '123456'."
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_SIMULATE_COMPLETE_PAYMENT_CARD_NOT_AUTHENTICATED
                    status: ERROR
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/checkout/{checkout_token}:
    get:
      tags:
      - Checkout Page
      summary: Retrieve Checkout Page
      description: Retrieve a checkout page.
      externalDocs:
        description: Learn more about customer operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-checkout-page.html
      operationId: getHostedPagePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: checkout_token
        in: path
        description: ID of the checkout page. String starting with **checkout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
        "400":
          description: Bad Request. Checkout page not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_6"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/checkout:
    post:
      tags:
      - Checkout Page
      summary: Create Checkout Page
      description: Create a checkout page that makes a payment.
      externalDocs:
        description: API Reference
        url: https://docs.rapyd.net/en/create-checkout-page.html
      operationId: generateHostedPagePayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_checkout_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
        "400":
          description: Bad Request. Checkout page not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_7"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/subscriptions:
    get:
      tags:
      - Subscription
      summary: List Subscriptions
      description: Retrieve a list of subscriptions. You can filter the list with
        query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-subscriptions.html
      operationId: getSubscriptionList
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: billing
        in: query
        description: "Method of billing. One of the following, pay_automatically,\
          \ send_invoice."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: pay_automatically
      - name: customer
        in: query
        description: ID of the customer. String starting with cus_
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: cus_494eae8b99f697107d7384
      - name: status
        in: query
        description: "Status of the subscription. One of the following, active, canceled,\
          \ trialing"
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: product
        in: query
        description: ID of a 'product' object. The product must have type set to service.
          String starting with product_. Filter for one product at a time.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: product_494eae8b99f697107d738
      - name: starting_after
        in: query
        description: The ID of a record in the list. The list begins with the record
          that was created next after the record with this ID. Use this filter to
          get the next page of results. Relevant when ending_before is not used.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
      - name: ending_before
        in: query
        description: The ID of a record in the list. The list ends with the last record
          that was created before the record with this ID. Use this filter to get
          the previous page of results.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
      - name: limit
        in: query
        description: "The maximum number of subscriptions to return. Range, 1-100.\
          \ Default is 10."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 23
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
        "400":
          description: Bad Request. Incorrect query syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_8"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription
      summary: Create Subscription
      description: "Create a subscription for regular, automatic payments."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-subscription.html
      operationId: createSubscription
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payments_subscriptions_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "400":
          description: Bad Request. Incorrect `days_until_due` value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_9"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/subscriptions/{subscriptionId}:
    get:
      tags:
      - Subscription
      summary: Retrieve Subscription
      description: Retrieve the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-subscription.html
      operationId: getSubscription
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with sub_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "400":
          description: Bad Request. Subscription not active.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_10"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription
      summary: Update Subscription
      description: Update the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-subscription.html
      operationId: updateSubscription
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subscriptions_subscriptionId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "400":
          description: Bad Request. Update not allowed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_11"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription
      summary: Cancel Subscription
      description: Cancel a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-subscription.html
      operationId: cancelSubscription
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
        "400":
          description: Bad Request. Subscription was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_12"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/subscriptions/{subscriptionId}/discount:
    delete:
      tags:
      - Subscription
      summary: Delete Discount from Subscription
      description: Delete the discount that was assigned to a subscription. This method
        does not affect the coupon that the discount was derived from.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/delete-discount-from-subscription.html
      operationId: deleteSubscriptionDiscount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: ID of the subscription. String starting with **sub_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sub_494eae8b99f697107d738
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
        "400":
          description: Bad Request. Subscription discount was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_13"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/checkout/subscriptions:
    post:
      tags:
      - Subscription
      summary: Create Subscription by Hosted Page
      description: Create a subscription using a hosted page. Relevant to card payments.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/create-subscription-by-hosted-page.html
      operationId: createSubscriptionByHostedPage
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checkout_subscriptions_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
        "400":
          description: Bad Request. Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_14"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/products:
    get:
      tags:
      - Subscription.Product
      summary: List Products
      description: Retrieve a list of all products.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-plans.html
      operationId: getProductsList
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the products created after the last product you want
          to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of products to return. Range 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 15
      - name: starting_after
        in: query
        description: The ID of the product created before the first products you want
          to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Product
      summary: Create Product
      description: Create goods or services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-product.html
      operationId: createProduct
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_products_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/products/{productsId}:
    get:
      tags:
      - Subscription.Product
      summary: Retrieve Product
      description: Retrieve details of a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-product.html
      operationId: getProduct
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
        "400":
          description: Bad Request. Invalid value of product ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_15"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Product
      summary: Update Product
      description: Change or modify a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-product.html
      operationId: updateProduct
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products_productsId_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
        "400":
          description: Bad Request. Invalid value of `attributes`.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_16"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription.Product
      summary: Delete Product
      description: Delete a product or service from the Rapyd platform. This action
        also deletes all associated plans.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-product.html
      operationId: deleteProduct
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: productsId
        in: path
        description: ID of the product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: product_0d9dc6be69c769560fe913f3b086d8ca
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
        "400":
          description: Bad Request. Product ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_17"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/plans:
    get:
      tags:
      - Subscription.Plan
      summary: List Plans
      description: Retrieve a list of all plans. Use the optional query parameters
        to filter the results. You can filter the results further by specifying one
        or more Plan fields as additional query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-plans.html
      operationId: listPlans
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the plan created after the last plan you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: plan_5a99897cdcd7175cb8119254d02befdb
      - name: limit
        in: query
        description: The maximum number of plans to return. Range 1-100. Default is
          10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 15
      - name: starting_after
        in: query
        description: The ID of the plan created before the first plan you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: plan_5a99897cdcd7175cb8119254d02befdb
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Plan
      summary: Create Plan
      description: Create a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-plan.html
      operationId: createPlan
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_plans_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
        "400":
          description: Bad Request. Invalid value to required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_18"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/plans/{planId}:
    get:
      tags:
      - Subscription.Plan
      summary: Retrieve Plan
      description: Retrieve the details of a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-plan.html
      operationId: retrievePlan
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
        "400":
          description: Bad Request. Plan ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_19"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Plan
      summary: Update Plan
      description: Change or modify a pricing plan for services. You can update a
        plan's nickname or metadata.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-plan.html
      operationId: updatePlan
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/plans_planId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
        "400":
          description: Bad Request. Invalid value to required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_20"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription.Plan
      summary: Delete Plan
      description: Delete a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-plan.html
      operationId: deletePlan
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: planId
        in: path
        description: ID of the plan.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: plan_494eae8b99f697107d738
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
        "400":
          description: Bad Request. Multiple requests to delete the same plan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_21"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/subscription_items:
    get:
      tags:
      - Subscription.Subscription Item
      summary: List Subscription Items
      description: Retrieve a list of all subscription items for a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-subscription-items.html
      operationId: listSubscriptionItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the subscription item created after the last subscription
          item you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: limit
        in: query
        description: The maximum number of subscription items to return. Range 1-100.
          Default is 10.
        required: false
        style: form
        explode: false
        schema:
          type: number
        example: 15
      - name: starting_after
        in: query
        description: The ID of the subscription item created before the first subscription
          item you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: subscription
        in: query
        description: ID of the subscription.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: sub_0de9c79c1e2beee09499dc8220493d59
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Subscription Item
      summary: Create Subscription Item
      description: Create a subscription item and add it to an existing subscription
        for recurring payment.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-subscription-item.html
      operationId: createSubscriptionItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_subscription_items_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/subscription_items/{subscriptionItemId}:
    get:
      tags:
      - Subscription.Subscription Item
      summary: Retrieve Subscription Item
      description: Retrieve the details of a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-subscription-item.html
      operationId: retrieveSubscriptionItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Subscription Item
      summary: Update Subscription Item
      description: Change or modify a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-subscription-item.html
      operationId: updateSubscriptionItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subscription_items_subscriptionItemId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription.Subscription Item
      summary: Delete Subscription Item
      description: Delete a subscription item from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-subscription-item.html
      operationId: deleteSubscriptionItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/subscription_items/{subscriptionItemId}/usage_record_summaries:
    get:
      tags:
      - Subscription.Subscription Item
      summary: Usage Records
      description: Retrieve a list of usage records for a subscription item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-usage-records.html#list-usage-records
      operationId: usageRecordSummaries
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: subi_3682d7bce9339f7b7c9e4185c7d1486f
      - name: limit
        in: query
        description: The maximum number of usage records that are returned. Range
          is 1-100. Default is 10.
        required: false
        style: form
        explode: true
        schema:
          type: number
        example: 15
      - name: ending_before
        in: query
        description: The latest date and time of the returned usage records. Format
          is in Unix time.
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: starting_after
        in: query
        description: The earliest date and time of the returned usage records. Format
          is in Unix time.
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/subscription_items/{subscriptionItemId}/usage_records:
    post:
      tags:
      - Subscription.Subscription Item
      summary: Create Usage Record
      description: Create a usage record or update an existing usage record where
        its unique identifier is composed of timestamp and subscription_item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-usage-record.html
      operationId: createSubscriptionItemUsageRecord
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionItemId
        in: path
        description: ID of the subscription item. String starting with **subi_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: subi_3682d7bce9339f7b7c9e4185c7d1486f
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subscriptionItemId_usage_records_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/subscriptions/discount/{discountId}:
    get:
      tags:
      - Subscription
      summary: Retrieve Discount of Subscription
      description: Retrieve a discount for a subscription.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-discount---subscription.html
      operationId: getSubscriptionDiscountById
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: discountId
        in: path
        description: discount Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
        "400":
          description: Bad Request. Subscription discount was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_22"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices:
    get:
      tags:
      - Subscription.Invoice
      summary: List Invoices
      description: "Retrieve the basic data of an invoice, with individual invoice\
        \ lines."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-invoices.html
      operationId: listInvoices
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customer
        in: query
        description: ID of the customer. String starting with **cus_**.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Customer"
        example: cus_753511a533a727cf28509812b4683edd
      - name: date
        in: query
        description: Date that the invoice was created.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: due_date
        in: query
        description: "The date payment is due on this invoice. This value is calculated\
          \ from the date the invoice is created, plus the number of days specified\
          \ in the days_until_due field. Format is in Unix time."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the invoice created after the last invoice you want
          to retrieve. card.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of invoices to return. Range 1-100. Default
          is 10.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the invoice created before the first invoice you want
          to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscription
        in: query
        description: ID of the subscription. String starting with sub_.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Invoice
      summary: Create Invoice
      description: "Create an invoice to add a one-time charge to a subscription.<BR>After\
        \ you create the invoice with this method, create invoice items and assign\
        \ them to the invoice with Create Invoice Item. <BR> This method triggers\
        \ the Invoice Created Webhook. This webhook contains the same information\
        \ as the response. <BR> The following asynchronous webhook provides information\
        \ about later changes to the Invoice object:Retrieve the basic data of an\
        \ invoice, with individual invoice lines.<BR> * Invoice Payment Succeeded\
        \ Webhook <BR>* Invoice Updated Webhook"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-invoice.html
      operationId: createInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_invoices_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
        "400":
          description: Bad Request. Invalid subscription trial end.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_24"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}:
    get:
      tags:
      - Subscription.Invoice
      summary: Retrieve Invoice
      description: "Retrieve the basic data of an invoice, with individual invoice\
        \ lines."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-invoice.html
      operationId: retrieveInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to retrieve.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Invoice
      summary: Update Invoice
      description: Change or modify an invoice. You can modify the invoice when its
        status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-invoice.html
      operationId: updateInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to updated.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invoices_invoiceId_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription.Invoice
      summary: Delete Invoice
      description: Delete an invoice. You can delete an invoice when status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-invoice.html
      operationId: deleteInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}/void:
    post:
      tags:
      - Subscription.Invoice
      summary: Void Invoice
      description: "Set an invoice to **void** status. <BR> Void invoices are similar\
        \ to deleted invoices, but their records are kept for accounting purposes.Retrieve\
        \ the basic data of an invoice, with individual invoice lines."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/void-invoice.html
      operationId: voidInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: The ID of the invoice that you want to void.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request. Invalid invoice ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_25"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}/finalize:
    post:
      tags:
      - Subscription.Invoice
      summary: Finalize Invoice
      description: "Finalize an invoice.Invoices are initially created with a draft\
        \ status, and this is the only state in which an invoice can be finalized.\
        \ When an invoice is ready to be paid, finalize it. This sets its status to\
        \ open. Subscriptions automatically create draft invoices during each billing\
        \ cycle, which are then automatically finalized. When an invoice is finalized,\
        \ it can no longer be deleted and its final status can be one of the following\
        \ - Paid Uncollectible* Void. An invoice can be finalized only one time."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/finalize-invoice.html
      operationId: finalizeInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: ID of the invoice you want to pay.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}/pay:
    post:
      tags:
      - Subscription.Invoice
      summary: Pay Invoice
      description: Make a payment against an invoice.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/pay-invoice.html
      operationId: payInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: ID of the invoice you want to pay.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invoiceId_pay_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}/mark_uncollectible:
    post:
      tags:
      - Subscription.Invoice
      summary: Mark Invoice Uncollectible
      description: Set an invoice to **uncollectible** status. <BR> This status indicates
        that the invoice cannot be paid by the customer.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/mark-invoice-uncollectible.html
      operationId: markInvoiceUncollectible
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: ID of the invoice you want to mark uncollectible. String starting
          with **invoice_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request. Invoice status was not 'open'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_26"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/{invoiceId}/lines:
    get:
      tags:
      - Subscription.Invoice
      summary: Retrieve Invoice Lines from Invoice
      description: Retrieve invoice lines from an invoice. <BR>Invoice lines are subscription
        items or invoice items.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-invoice-lines-from-invoice.html
      operationId: getInvoiceLines
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: invoiceId
        in: path
        description: ID of the invoice. String starting with **invoice_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: invoice_8a7200327e12b98cf5b038a3fdb2f642
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
        "400":
          description: Bad Request. Invalid invoice ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_25"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/upcoming:
    get:
      tags:
      - Subscription.Invoice
      summary: Retrieve Upcoming Invoice
      description: "Retrieve a preview of the basic data of the upcoming invoice for\
        \ a customer, with individual invoice lines.<BR> To get the invoice lines\
        \ of the invoice, use 'Retrieve Invoice Lines from Invoice'.<BR> The response\
        \ generated cannot be used to generate a payment authorization."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-upcoming-invoice.html
      operationId: getUpcomingInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customer
        in: query
        description: ID of the customer whose invoice you want to retrieve.
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: cus_4ed89a9c556fb200997e974f75895dc9
      - name: currency
        in: query
        description: Three-letter ISO 4217 code for the currency. Required when the
          invoice is not linked to a specific subscription.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: USD
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request. Invalid customer for invoice ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_27"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoices/upcoming/lines:
    get:
      tags:
      - Subscription.Invoice
      summary: Retrieve Invoice Lines from Upcoming Invoice
      description: "Retrieve invoice lines from the upcoming invoice for a customer.\
        \ <BR> If a customer has more than one subscription, this method retrieves\
        \ the invoice lines of the invoice that is due first.<BR> This method is relevant\
        \ to invoices that are automatically generated out of subscriptions."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-invoice-lines-from-upcoming-invoice.html
      operationId: getInvoiceLinesUpcomingInvoice
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customer
        in: query
        description: ID of the customer whose invoice you want to retrieve.
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: cus_4ed89a9c556fb200997e974f75895dc9
      - name: currency
        in: query
        description: Three-letter ISO 4217 code for the currency. Required when the
          invoice is not linked to a specific subscription.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: USD
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
        "400":
          description: Bad Request. Invalid customer for invoice ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_27"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoice_items:
    get:
      tags:
      - Subscription.Invoice Item
      summary: List Invoice Items
      description: Retrieve a list of all invoice items. <BR> You can filter the list
        with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-invoice-items.html
      operationId: listInvoiceItems
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: created
        in: query
        description: Date of creation of the invoice items.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1731245103
      - name: customer
        in: query
        description: ID of the customer.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: cus_325b5edb6a897e8bd4f90c734d4b4be9
      - name: invoice
        in: query
        description: ID of the invoice.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: invoice_61f092e4d9b5f500fa909eec13e3eddc
      - name: limit
        in: query
        description: "The maximum number of invoice items to return. Range: 1-100.\
          \ Default is 10."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: ending_before
        in: query
        description: The ID of the invoice item created after the last invoice item
          you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: ii_03bae0ba6b2f2d0d85b6078af82d9c04
      - name: starting_after
        in: query
        description: The ID of the invoice item created before the first invoice item
          you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: ii_03bae0ba6b2f2d0d85b6078af82d9c03
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "400":
          description: Bad Request. Invalid invoice item ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_28"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Invoice Item
      summary: Create Invoice Item
      description: "Create an invoice item and add it to an invoice or subscription.<BR>**Note**:\
        \ If you create an invoice item without specifying the invoice ID or subscription\
        \ ID, it is attached to the customerâ€™s next invoice that has the same currency.<BR>\
        \ This method triggers the following webhooks:<BR> * **Invoice Item Created**\
        \ - This webhook contains the same information as the response. <BR>* Invoice\
        \ Updated Webhook"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-invoice-item.html
      operationId: createInvoiceItem
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_invoice_items_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "400":
          description: Bad Request. Invalid `amount` value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_29"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/invoice_items/{invoiceItem}:
    get:
      tags:
      - Subscription.Invoice Item
      summary: Retrieve Invoice Item
      description: Retrieve the details of an invoice item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-invoice-item.html
      operationId: getInvoiceItem
      parameters:
      - name: invoiceItem
        in: path
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "400":
          description: Bad Request. Invoice item ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_28"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Subscription.Invoice Item
      summary: Update Invoice Item
      description: Change or modify an invoice item.<BR> You can update an invoice
        item at any time before the corresponding subscription generates an invoice.<BR>
        This method triggers the **Invoice Item Updated** webhook. This webhook contains
        the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-invoice-item.html
      operationId: updateInvoiceItem
      parameters:
      - name: invoiceItem
        in: path
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invoice_items_invoiceItem_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
        "400":
          description: Bad Request. Invalid invoice item ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_30"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Subscription.Invoice Item
      summary: Delete Invoice Item
      description: Delete an invoice item from the upcoming invoice.<BR> Use this
        method in the following situations:<BR> * The invoice item is attached to
        an invoice.<BR> * The invoice item is not attached to an invoice.<BR> This
        method triggers the **Invoice Item Deleted webhook**. This webhook contains
        the same information as the response.Retrieve the details of an invoice item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-invoice-item.html
      operationId: deleteInvoiceItem
      parameters:
      - name: invoiceItem
        in: path
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_25"
        "400":
          description: Bad Request. Invoice item was previously deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_31"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/collect/payments/{paymentLink}:
    get:
      tags:
      - Payment Link
      summary: Get Payment Link
      description: Retrieve details of a payment link.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payment-link.html
      operationId: paymentLink
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: paymentLink
        in: path
        description: ID of the payment link. String starting with **hp_reuse_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
        "400":
          description: Bad Request. Payment link expired.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_32"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/collect/card/:
    post:
      tags:
      - Payment.Card Token
      summary: Create Card Token
      description: "Create a hosted page for a customer to save card details and manage\
        \ cards. Prerequisite: [Create Customer](https://docs.rapyd.net/en/create-customer.html)."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-card-token.html
      operationId: createCardToken
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collect_card_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
        "400":
          description: No card payment methods available in the country for the merchant.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_33"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/group_payments:
    post:
      tags:
      - Group Payment
      summary: Create Group Payment
      description: Create Group Payment
      externalDocs:
        url: https://docs.rapyd.net/en/create-group-payment.html
      operationId: createGroupPayment
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payments_group_payments_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
        "400":
          description: Bad Request. Group payment not found for given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_34"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/group_payments/{groupPaymentId}:
    get:
      tags:
      - Group Payment
      summary: Retrieve Group Payment Details
      description: Retrieve details of a group payment.
      externalDocs:
        url: https://docs.rapyd.net/en/retrieve-group-payment.html
      operationId: retrieveGroupPaymentId
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupPaymentId
        in: path
        description: ID of the group payment. String starting with **gp_**
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
        "400":
          description: Bad Request. Group payment not found for given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_35"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Group Payment
      summary: Cancel Group Payment
      description: Cancel a group payment.
      externalDocs:
        url: https://docs.rapyd.net/en/cancel-group-payment.html
      operationId: deletegroupPaymentId
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupPaymentId
        in: path
        description: ID of the group payment. String starting with **gp_**
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_28"
        "400":
          description: Bad Request. Group payment ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_36"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/{payment}/escrows/{escrow}/escrow_releases:
    get:
      tags:
      - Escrow
      summary: List Escrow Releases
      description: Retrieve a list of all releases of funds from a specified escrow.
      externalDocs:
        url: https://docs.rapyd.net/en/list-escrow-releases.html
      operationId: listEscrowReleases
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: escrow_df0a95af70e696947706cb59bd53d46f
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_29"
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_37"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Escrow
      summary: Release Funds from Escrow
      description: Retrieve a list of all releases of funds from a specified escrow.
      externalDocs:
        url: https://docs.rapyd.net/en/release-funds-from-escrow.html
      operationId: releaseFundsFromEscrow
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 15
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/escrow_escrow_releases_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_30"
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_38"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payments/{payment}/escrows/{escrow}:
    get:
      tags:
      - Escrow
      summary: Retrieve Escrow
      description: Retrieve details of the escrow for a payment.
      externalDocs:
        url: https://docs.rapyd.net/en/retrieve-escrow.html
      operationId: getEscrow
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payment
        in: path
        description: ID of the payment. String starting with **payment_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: escrow
        in: path
        description: ID of the escrow. String starting with **escrow_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: escrow_df0a95af70e696947706cb59bd53d46f
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_29"
        "400":
          description: Error in card validation of payment with escrow.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_37"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/refunds:
    get:
      tags:
      - Refund
      summary: List Refunds
      description: Retrieve a list of all refunds.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-refunds.html
      operationId: allRefunds
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the refund created after the last refund you want to
          retrieve. String starting with refund_.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: refund_dabd1608796554
      - name: limit
        in: query
        description: "The maximum number of refunds to return. Range, 1-100. Default\
          \ is 10."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 12
      - name: starting_after
        in: query
        description: The ID of the refund created before the first refund you want
          to retrieve. String starting with **refund_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: refund_dabd1608796554
      - name: paymentId
        in: query
        description: The ID of the payment. String starting with **payment_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: payment_7a98328c6da659a181c16a594dae5d3d
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_31"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Refund
      summary: Create Refund
      description: "Refund of a payment. The refund is credited against a specific\
        \ payment. The money is returned to the payment method that was used for the\
        \ payment, and the currency is the same as what was used in the payment. If\
        \ the action of a third party is not required, this method triggers the Refund\
        \ Completed webhook. This webhook contains the same information as the response."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-refund.html
      operationId: requestTotal_createRefund
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_refunds_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/refunds/complete:
    post:
      tags:
      - Refund
      summary: Complete Refund
      description: "Simulate the action of a third party that is required for completing\
        \ the refund process. Relevant to sandbox. Use this method when a payment\
        \ was made with a payment method such as cash, bank redirect or bank transfer,\
        \ and the payment was completed by an action taken by the customer."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/complete-refund.html
      operationId: simulateCompleteRefund
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refunds_complete_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/refunds/group_payments:
    post:
      tags:
      - Refund
      summary: Create Group Refund
      description: "Refund a group payment when the status of the group payment is\
        \ closed. The refund is credited against a specific group payment. The money\
        \ is returned to the payment methods that were used for the payment. If the\
        \ action of a third party is not required, this method triggers the Refund\
        \ Completed webhook for each payment method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-group-refund.html
      operationId: refundGroupPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refunds_group_payments_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_33"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/refunds/{refundId}:
    get:
      tags:
      - Refund
      summary: Retrieve Refund
      description: Retrieve the details of a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-refund.html
      operationId: refundByToken
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: refundId
        in: path
        description: ID of the 'refund' object you want to retrieve. String starting
          with **refund_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: refund_a09a2e16352f56a27f5937f87d0b8705
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Refund
      summary: Update Refund
      description: Change or modify the metadata in a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-refund.html
      operationId: updateRefund
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: refundId
        in: path
        description: ID of the 'refund' object you want to retrieve. String starting
          with **refund_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: refund_a09a2e16352f56a27f5937f87d0b8705
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refunds_refundId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_32"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/digital_wallets/session/apple_pay:
    post:
      tags:
      - Digital Wallet
      summary: Retrieve Apple Pay Session
      description: "Retrieve the details of an Apple Pay payment session. Each payment\
        \ that uses Apple Pay has a unique session.  [Activating Apple Pay](https://docs.rapyd.net/en/activating-apple-pay.html)\
        \ is a prerequisite."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-apple-pay-session.html
      operationId: getApplePaySession
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplePayObject"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_34"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/disputes:
    get:
      tags:
      - Dispute
      summary: List Disputes
      description: Retrieve a detailed list of 'dispute' objects.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-disputes.html
      operationId: getDisputesListByOrgId
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the dispute created before the first dispute you want
          to retrieve. String starting with dispute_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      - name: ending_before
        in: query
        description: The ID of the dispute created after the last dispute you want
          to retrieve. String starting with dispute_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      - name: limit
        in: query
        description: The maximum number of disputes to return. Range is 1-100. Default
          is 10.
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      - name: status
        in: query
        description: Filters the list for disputes with the specified dispute status.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ACT
          - RVW
          - PRA
          - ARB
          - LOS
          - WIN
          - REV
      - name: payment
        in: query
        description: The ID of the payment that is linked to the dispute. String starting
          with payment_.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: payment_ce936f36d93bc9307a3d
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_35"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/disputes/{disputeId}:
    get:
      tags:
      - Dispute
      summary: Retrieve Dispute
      description: Retrieve the details of a dispute.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-dispute.html
      operationId: getDispute
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: disputeId
        in: path
        description: ID of the dispute you want to retrieve. String starting with
          dispute_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: dispute_3e4862ba69665f04da530154f1019998
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_36"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers:
    get:
      tags:
      - Customer
      summary: List Customers
      description: Retrieve a list of all customers
      externalDocs:
        description: GET list of customers.
        url: https://docs.rapyd.net/en/list-customers-364253.html
      operationId: listCustomer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the customer created before the first customer you
          want to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the customer created after the last customer you want
          to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of customers to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_37"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Customer
      summary: Create Customer
      description: Adds a customer to the client.
      externalDocs:
        description: Learn more about customer operations provided by this API.
        url: https://docs.rapyd.net/en/create-customer.html
      operationId: createCustomer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_customers_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_38"
        "400":
          description: Bad Request. Wallet ID is already used by another customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_39"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers/{customerId}:
    get:
      tags:
      - Customer
      summary: Retrieve Customer Details
      description: Retrieve a customer.
      externalDocs:
        description: Learn more about Retrieve a customer details provided by this
          API
        url: https://docs.rapyd.net/en/retrieve-customer.html
      operationId: retrieveCustomer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_38"
        "400":
          description: Bad Request. Customer not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_40"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Customer
      summary: Update Customer
      description: Update a customer with customer Id in Path
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/update-customer.html
      operationId: updateCustomer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_38"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_41"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Customer
      summary: Delete Customer
      description: This method triggers the Customer Deleted webhook. This webhook
        contains the same information as the response
      externalDocs:
        description: delete an existing customer
        url: https://docs.rapyd.net/en/delete-customer.html
      operationId: deleteCustomer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
        "400":
          description: "The request tried to delete a customer, but the operation\
            \ failed. Corrective action is to Determine whether the customer was alread\
            \ deleted, and why there were multiple requests to delete it."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_42"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers/discount/{discountId}:
    get:
      tags:
      - Customer
      summary: Retrieve Discount of Customer
      description: Retrieve a discount for a customer.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-discount---customer.html
      operationId: getCustomerDiscountById
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: discountId
        in: path
        description: discount Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: dis_d41d8cd98f00b204e9800998ecf8427e
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_39"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers/{customerId}/discount:
    delete:
      tags:
      - Customer
      summary: Delete Discount from Customer
      description: Delete the discount that has been assigned to a customer through
        a coupon. This action does not affect the coupon that the discount was derived
        from. This method triggers the **Customer Discount Deleted** webhook.
      operationId: deleteCustomerDiscount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_40"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/addresses:
    post:
      tags:
      - Payment.Address
      summary: Create Address
      description: Create an address.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/create-address.html
      operationId: createAddress
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_addresses_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_43"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/addresses{addressId}:
    get:
      tags:
      - Payment.Address
      summary: Retrieve Address
      description: Retrieve an address.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-address.html
      operationId: GetAddress
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_44"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Payment.Address
      summary: Update Address
      description: "Change or modify an address. To clear a field, set it to an empty\
        \ string."
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/update-address.html
      operationId: UpdateAddress
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Address"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
        "400":
          description: Invalid phone number format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_43"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Payment.Address
      summary: Delete Address
      description: Remove an address that is linked to a customer or is not linked
        to any object.
      externalDocs:
        description: Learn more about address operations provided by this API.
        url: https://docs.rapyd.net/en/delete-address.html
      operationId: DeleteAddress
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: addressId
        in: path
        description: ID of the address object. String starting with **address_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: address_71f1048a5837feb31b594f9d3d9b6623
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_41"
        "400":
          description: Address that is linked to an object cannot be removed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_45"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers/{customerId}/payment_methods:
    get:
      tags:
      - Customer Payment Method
      summary: List Payment Methods of Customer
      description: Retrieve payment methods for a customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/en/list-payment-methods-of-customer.html
      operationId: getCustomerPaymentMethods
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Category_1"
      - name: starting_after
        in: query
        description: The ID of the coupon created before the first coupon you want
          to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the coupon created after the last coupon you want to
          retrieve
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of coupons to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: The type of payment method to find.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_42"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Customer Payment Method
      summary: Add payment Method to Customer
      description: Add a payment method to a customer profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/add-payment-method-to-customer.html
      operationId: createCustomerPaymentMethod
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: customer to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/customerId_payment_methods_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_43"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_46"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/customers/{customerId}/payment_methods/{pmtId}:
    get:
      tags:
      - Customer Payment Method
      summary: Retrieve Payment Method
      description: Retrieve a payment method for a specific customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/en/retrieve-payment-method.html
      operationId: getCustomerPaymentMethod
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_43"
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                type: object
                example:
                  status:
                    error_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    message: "The request attempted an operation that requires the\
                      \ default payment method of a customer, but the customer does\
                      \ not have a default payment method. The request was rejected."
                    response_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    status: ERROR
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Customer Payment Method
      summary: Update Payment Method
      description: Change or modify a payment method that was stored in a customer
        profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/en/update-payment-method.html
      operationId: updateCustomerPaymentMethod
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: customer to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethod"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_43"
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_47"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Customer Payment Method
      summary: Delete Payment Method
      description: This method triggers the Webhook - Payment Method Canceled webhook.
        This webhook contains more information than the response.
      externalDocs:
        description: delete a payment method for customer
        url: https://docs.rapyd.net/en/delete-payment-method.html
      operationId: deleteCustomerPaymentMethod
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customerId
        in: path
        description: customer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pmtId
        in: path
        description: Pmt Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_44"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_48"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/skus/{skuId}:
    get:
      tags:
      - SKU
      summary: Retrieve SKU
      description: Retrieve the details of an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-sku.html
      operationId: retrieveSKU
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with **sku_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_45"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - SKU
      summary: Update SKU
      description: Change or modify an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-sku.html
      operationId: updateSKU
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with sku_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/skus_skuId_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_45"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - SKU
      summary: Delete SKU
      description: Delete an SKU from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-sku.html
      operationId: deleteSKU
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skuId
        in: path
        description: ID of the 'sku' object. String starting with **sku_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/skus:
    get:
      tags:
      - SKU
      summary: List SKUs
      description: Retrieve a list of all SKUs.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-skus.html
      operationId: listSKU
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: active
        in: query
        description: Determines whether the query returns active SKUs or inactive
          SKUs. Default is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
        example: true
      - name: starting_after
        in: query
        description: The ID of the SKU created before the first SKU you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: ending_before
        in: query
        description: The ID of the SKU created after the last SKU you want to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: limit
        in: query
        description: The maximum number of SKUs to return. Range 1-100. Default is
          10.
        required: false
        style: form
        explode: false
        schema:
          type: number
        example: 50
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_46"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - SKU
      summary: Create SKU
      description: Create an SKU and attach it to a product.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-sku.html
      operationId: createSKU
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_skus_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_45"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/orders:
    get:
      tags:
      - Order
      summary: List Orders
      description: Retrieve a list of all orders.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-orders.html
      operationId: listOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of orders to return. Range - 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: ending_before
        in: query
        description: The ID of the order created after the last order you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: order_d1ce10b16cd4350d12c75232628e49bd
      - name: starting_after
        in: query
        description: The ID of the order created before the first order you want to
          retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: order_d1ce10b16cd4350d12c75232628e49bd
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_47"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Order
      summary: Create Order
      description: "Create an order for goods. For services, see Create Subscription."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-an-order.html
      operationId: createOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_orders_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/orders/{orderId}:
    get:
      tags:
      - Order
      summary: Retrieve Order
      description: Retrieve the details of an order.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-an-order.html
      operationId: retrieveOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Order
      summary: Update Order
      description: Change or modify an order.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/update-an-order.html
      operationId: updateOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orders_orderId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/orders/{orderId}/returns:
    post:
      tags:
      - Order.Return
      summary: Create a Return Against an Order
      description: Make a return against an order. The maximum amount of the return
        is the amount of the order
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/create-a-return-against-an-order.html
      operationId: returnsOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: orderId
        in: path
        description: ID of the order. String starting with order_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orderId_returns_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_49"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/orders/{orderId}/pay:
    post:
      tags:
      - Order
      summary: Pay Order
      description: Pay an order.
      externalDocs:
        description: Learn more about operations provided by this API.
        url: https://docs.rapyd.net/en/pay-an-order.html
      operationId: payOrder
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: orderId
        in: path
        description: ID of the order. String starting with **order_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/orderId_pay_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_48"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/order_returns:
    get:
      tags:
      - Order.Return
      summary: List Returns
      description: Retrieve a list of all order returns.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-orders.html
      operationId: listOrderReturn
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of returns to list. Range - 1-100. Default
          is 10.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 10
      - name: ending_before
        in: query
        description: The ID of the order created after the last order you want to
          retrieve a return from.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: orre_d1ce10b16cd4350d12c75232628e49bd
      - name: starting_after
        in: query
        description: The ID of the order created before the first order you want to
          retrieve a return from.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: orre_d1ce10b16cd4350d12c75232628e49bd
      - name: tokens
        in: query
        description: Filters the list for orders related to the specified order.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_50"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/order_returns/{orderReturnsId}:
    get:
      tags:
      - Order.Return
      summary: Retrieve a Return
      description: Retrieve the details of a return.
      externalDocs:
        description: Learn more about operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-an-order.html
      operationId: retrieveOrderReturn
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: orderReturnsId
        in: path
        description: ID of the return. String starting with **orre_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_49"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/coupons:
    get:
      tags:
      - Coupon
      summary: List Coupons
      description: Retrieve a list of all coupons.
      externalDocs:
        description: Retrieve a list of all coupons.
        url: https://docs.rapyd.net/en/list-coupons.html
      operationId: listCoupon
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: starting_after
        in: query
        description: The ID of the coupon created before the first coupon you want
          to retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The ID of the coupon created after the last coupon you want to       retrieve.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of coupons to return. Range is 1-100. Default
          is 10
        required: false
        style: form
        explode: true
        schema:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_51"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Coupon
      summary: Create Coupon
      description: create a coupon
      externalDocs:
        description: Create a coupon.
        url: https://docs.rapyd.net/en/create-coupon.html
      operationId: createCoupon
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Coupon to add
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Coupon"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_52"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/coupons/{couponId}:
    get:
      tags:
      - Coupon
      summary: Retrieve Coupon
      description: Retrieve a coupon
      externalDocs:
        description: Learn more about coupon operations provided by this API.
        url: https://docs.rapyd.net/en/retrieve-coupon.html
      operationId: retrieveCoupon
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: couponId
        in: path
        description: coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_52"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Coupon
      summary: Update Coupon
      description: Modify the metadata of a coupon with a coupon ID in Path
      operationId: updateCoupon
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: couponId
        in: path
        description: coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Coupon to add.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Coupon"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_52"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Coupon
      summary: Delete Coupon
      description: "Delete a coupon from the Rapyd platform. Deleting a coupon removes\
        \ it from all customers and subscriptions, but does not affect invoices and\
        \ payment authorizations that have already been calculated."
      operationId: deleteCoupon
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: couponId
        in: path
        description: Coupon ID. String starting with **coupon_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_53"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payout_methods:
    get:
      tags:
      - Disburse.Payout Method Type
      summary: List Payout Method Types
      description: Retrieve a list of payout method types that you can use when creating
        a payout. The response contains a list of objects. Each object includes a
        payout method type and its attributes.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payout-method-types.html
      operationId: getPayoutMethodTypes
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: beneficiary_country
        in: query
        description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: beneficiary_entity_type
        in: query
        description: "Filters the type of entity for the beneficiary. One of the following:\
          \ **individual** | **company**"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: individual
      - name: category
        in: query
        description: "The category of payout method. One of the following: **bank**\
          \ | **card** | **cash** | **rapyd_ewallet** | **ewallet**"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: bank
      - name: is_cancelable
        in: query
        description: Indicates whether the payout can be canceled. Relevant when `category`
          is **cash**.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_expirable
        in: query
        description: Indicates whether the payout expires if not completed. Relevant
          when `category` is **cash**.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_location_specific
        in: query
        description: Indicates whether the payout must be made at a specific physical
          location. Relevant when `category` is **cash**.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: payout_currency
        in: query
        description: Currency received by the beneficiary. Three-letter ISO 4217 code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_country
        in: query
        description: "Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Note:\
          \ This field does not appear in the response."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: sender_currency
        in: query
        description: Currency that the sender is paying with. Three-letter ISO 4217
          code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_entity_type
        in: query
        description: "Filters the type of entity for the payer. One of the following:\
          \ **individual** | **company**"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: company
      - name: starting_after
        in: query
        description: The name of a payout method in the list. The list begins with
          the record that was created next after the record with this payout method.
          Use this filter to get the next page of results. Relevant when ending_before
          is not used.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: The name of a payout method in the list. The list ends with the
          last record that was created before the record with this payout method.
          Use this filter to get the previous page of results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of payout methods to return. Range: 1-100.\
          \ Default is 10."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 5
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_54"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payout_methods/{pomt}/required_fields:
    get:
      tags:
      - Disburse.Payout Method Type
      summary: Get Payout Required Fields
      description: |-
        Retrieve the fields required to use a payout method type. The fields are returned as an array of objects. The name of each field appears in the name field of each object. Use this information for Create Payout, Create Beneficiary and Create Sender.
         <BR> **Note:** The fields returned by this method are required when you create a payout. If you create a payout with a sender or beneficiary that was created previously, you are responsible for choosing a sender and beneficiary that have all the fields required by the payout method.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-payout-required-fields.html
      operationId: getPayoutMethodTypesDetails
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pomt
        in: path
        description: The type of the payout method. Set to the name of a payout method
          listed in the response to List Payout Method Types. The two-letter prefix
          must match the beneficiary country code.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: us_visa_card
      - name: beneficiary_country
        in: query
        description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
          Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: beneficiary_entity_type
        in: query
        description: "Type of entity for the beneficiary. One of the following, **individual**\
          \ | **company**"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: company
      - name: payout_amount
        in: query
        description: "Amount of the payout, in units of the currency that the beneficiary\
          \ is receiving. Decimal."
        required: true
        style: form
        explode: true
        schema:
          type: number
      - name: payout_currency
        in: query
        description: Currency received by the beneficiary. Three-letter ISO 4217 code.
          Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_country
        in: query
        description: Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: US
      - name: sender_currency
        in: query
        description: Currency that the sender is paying with. Three-letter ISO 4217
          code. Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: USD
      - name: sender_entity_type
        in: query
        description: "Type of entity for the sender. One of the following: **individual**\
          \ | **company**"
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: company
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_55"
        "400":
          description: Invalid payout method type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_49"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts:
    get:
      tags:
      - Disburse
      summary: List Payouts
      description: Retrieve a list of payouts that you created.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payouts.html
      operationId: listPayouts
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: beneficiary
        in: query
        description: Filters according to the beneficiary ID. String starting with
          **beneficiary_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: beneficiary_504f2e8d5618dfaa4a6e73c632f3029b
      - name: created_after
        in: query
        description: The ID of the payout created before the first payout you want
          to retrieve. String starting with **payout_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: created_before
        in: query
        description: The ID of the payout created after the last payout you want to
          retrieve. String starting with **payout_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: ending_before
        in: query
        description: The ID of a payout in the list. The list ends with the payout
          that was created before the payout with this ID. Use this filter to get
          the previous page of results. String starting with **payout_**. Deprecated.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: ewallet
        in: query
        description: Filters according to the wallet ID. String starting with **ewallet_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ewallet_61be0e6ad9f57121cff47a63902282ac
      - name: limit
        in: query
        description: "The maximum number of payouts to return. Range: 1-100. Default\
          \ is 10."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "2"
      - name: merchant_reference_id
        in: query
        description: Filters according to the merchant reference ID.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      - name: payout_method_type
        in: query
        description: Filters according to the type of payout method. The two-letter
          prefix must match the beneficiary country code.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ph_cebuana_lhuillier_cash
      - name: sender
        in: query
        description: Filters according to the sender ID. String starting with **sender_**.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: sender_ba47352b13411b7fc9d6654b953de832
      - name: sender_country
        in: query
        description: Filters according to the country of the sender. Two-letter ISO
          3166-1 ALPHA-2 code.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Country"
        example: PH
      - name: sender_currency
        in: query
        description: Filters according to the currency that the sender is paying with.
          Three-letter ISO 4217 code.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/Currency"
        example: PHP
      - name: starting_after
        in: query
        description: The ID of a payout in the list. The list begins with the payout
          that was created next after the payout with this ID. Use this filter to
          get the next page of results. Relevant when ending_before is not used. String
          starting **payout_**. Deprecated
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: ""
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_56"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Disburse
      summary: Create Payout
      description: "Create a payout (disbursement).This method triggers the _Payout\
        \ Created_ webhook. This webhook contains the same information as the response.\
        \ If the action of a third party is not required, the _Payout Completed_ webhook\
        \ is also triggered."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-payout.html
      operationId: createPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_payouts_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "400":
          description: Bad Request. Missing required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_50"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/batch_process/files/mass_payout_pci:
    post:
      tags:
      - Disburse
      summary: Create Mass Payout
      description: "Create a batch of payouts (disbursements) from a file. To enable\
        \ the use of this method, contact Rapyd support. A request input file must\
        \ be added after the header parameters in the following format: <BR> `-F 'file=@/your-file-location/mass-payout-file.csv'`"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-mass-payout.html
      operationId: createMassPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears as a file .Set to **multipart/form-data**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: eret354345
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/files_mass_payout_pci_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_58"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/beneficiary:
    post:
      tags:
      - Disburse.Payout Beneficiary
      summary: Create Beneficiary
      description: "Create a beneficiary for use in payouts.<BR>The response provides\
        \ a unique beneficiary ID, which you can use in place of the Beneficiary object\
        \ for _Create Payout_.<BR>This method triggers the _Beneficiary Created_ webhook.\
        \ This webhook contains the same information as the response.<BR>**Note:**\
        \ In addition to the required fields documented below, you must include all\
        \ other beneficiary fields listed in the response to _Get Payout Required\
        \ Fields_, and you must conform to the regex provided.<BR>To create a beneficiary\
        \ that you can use with multiple payout methods, include all fields that are\
        \ required by each payout method.<BR>The client is responsible for including\
        \ all required fields."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-beneficiary.html#create-beneficiary
      operationId: createBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payouts_beneficiary_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_59"
        "400":
          description: Bad Request. Invalid value to a required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_51"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/extended_beneficiary:
    post:
      tags:
      - Disburse.Payout Beneficiary
      summary: Create Extended Beneficiary
      description: "Create a beneficiary that includes all compliance related data\
        \ for payouts. The response provides a unique beneficiary ID, which you can\
        \ use in place of the beneficiary object for Create Payout"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-extended-beneficiary.html
      operationId: createExtendedBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payouts_extended_beneficiary_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_60"
        "400":
          description: Bad Request. Invalid value to a required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_52"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/beneficiary/validate:
    post:
      tags:
      - Disburse.Payout Beneficiary
      summary: Validate Beneficiary
      description: "Validate the format of the details for a payout beneficiary. You\
        \ can validate a beneficiary multiple times for different payout methods.\
        \ You can enter a Beneficiary object or a previously created beneficiary ID.\
        \ \n Note: In addition to the required fields for Create Beneficiary, the\
        \ Beneficiary object must include all required fields for the beneficiary\
        \ listed in the response to Get Payout Required Fields. The examples include\
        \ additional fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/validate-beneficiary.html#validate-beneficiary
      operationId: validateBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/beneficiary_validate_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_61"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/beneficiary/{beneficiaryId}:
    get:
      tags:
      - Disburse.Payout Beneficiary
      summary: Retrieve Beneficiary
      description: "Retrieve details of a payout beneficiary. \n Note: The 'Retrieve\
        \ Beneficiary - individual' response includes additional fields for the 'ca_general_bank'\
        \ payout method. The 'Retrieve Beneficiary - company' response includes additional\
        \ fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-beneficiary.html
      operationId: getBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: beneficiaryId
        in: path
        description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_60"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Disburse.Payout Beneficiary
      summary: Update Beneficiary
      description: "Update a beneficiary with additional fields. <BR>Note: You cannot\
        \ update the values of the beneficiary fields which were defined when it was\
        \ created."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-beneficiary.html
      operationId: updateBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: beneficiaryId
        in: path
        description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/beneficiary_beneficiaryId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_60"
        "400":
          description: Bad Request. Beneficary ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_53"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Disburse.Payout Beneficiary
      summary: Delete Beneficiary
      description: Delete a payout beneficiary from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-beneficiary.html
      operationId: deleteBeneficiary
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: beneficiaryId
        in: path
        description: ID of the 'beneficiary' object. String starting with **beneficiary_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_62"
        "400":
          description: Bad Request. Beneficary ID not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_53"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/complete/{payoutToken}/{amount}:
    post:
      tags:
      - Disburse
      summary: Complete Payout
      description: Use this method in the sandbox to simulate the action of a third
        party that is required for completing the payout process.<BR> Relevant when
        the status of the payout is **Created**.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/complete-payout.html#complete-payout
      operationId: simulateCompletePayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payoutToken
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      - name: amount
        in: path
        description: "The payout amount. Decimal, including the correct number of\
          \ decimal places for the currency exponent, as defined in ISO 2417:2015."
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/disburse/beneficiary:
    post:
      tags:
      - Disburse.Payout Beneficiary
      summary: Create Beneficiary Tokenization Page
      description: Create a customer-facing page for creating a beneficiary token.<BR>
        This method creates a URL for a page where the customer enters details required
        for payouts to the beneficiaryâ€™s bank account. All available payout methods
        for the beneficiaryâ€™s country are listed.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-beneficiary-tokenization-page.html
      operationId: beneficiaryTokenizationPage
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disburse_beneficiary_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_63"
        "400":
          description: Bad Request. Payout category was not valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_54"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/confirm/{payoutToken}:
    post:
      tags:
      - Disburse
      summary: Confirm Payout
      description: Confirm the exchange rate of a payout that involves foreign exchange.<BR>Relevant
        when the payout was created with `confirm_automatically` set to **false**.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/confirm-payout-with-fx.html
      operationId: confirmPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payoutToken
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "400":
          description: Bad Request. Payout not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_55"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/response:
    post:
      tags:
      - Disburse
      summary: Set Payout Response
      description: "Accept or decline a payout to a Rapyd Wallet.<BR>If the `beneficiary`\
        \ accepts the payout, this method triggers the 'Payout Completed' webhook.<BR>If\
        \ the `beneficiary` declines the payout, this method triggers the 'Payout\
        \ Failed' webhook."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-payout-response.html
      operationId: setPayoutResponse
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payouts_response_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
        "400":
          description: Bad Request. Invalid parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_56"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/sender:
    post:
      tags:
      - Disburse.Payout Sender
      summary: Create Sender
      description: |-
        Create a sender for use in payouts.
        The response provides a unique sender ID, which you can use in place of the sender object for Create Payout.
        Note: In addition to the required fields documented below, you must include all other sender fields listed in the response to Get Payout Required Fields, and you must conform to the regex provided.
        To create a sender that you can use with multiple payout methods, include all fields that are required by each payout method.
        The client is responsible for including all required fields.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-sender.html
      operationId: createSender
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payouts_sender_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_65"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/sender/{senderId}:
    get:
      tags:
      - Disburse
      summary: Retrieve Sender
      description: "Note: The Retrieve Sender - individual response includes additional\
        \ fields for the **ca_general_bank** payout method. The Retrieve Sender -\
        \ company response includes an additional field for the **us_ach_bank** payout\
        \ method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-sender.html
      operationId: getPayer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: senderId
        in: path
        description: ID of the Sender object. String starting with **sender_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: sender_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_65"
        "400":
          description: Bad Request. Sender not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_57"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Disburse.Payout Sender
      summary: Delete Sender
      description: Delete a payout sender from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-sender.html
      operationId: deletePayer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: senderId
        in: path
        description: ID of the `sender` object. String starting with **sender_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: sender_b9342620e3eb13164286485bbff9eb7b
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_66"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/{payoutId}:
    get:
      tags:
      - Disburse
      summary: Retrieve Payout
      description: Retrieve the details of a payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-payout.html
      operationId: getPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "400":
          description: Bad Request. Payout not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_58"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Disburse
      summary: Update Payout
      description: Change or modify a payout. This method triggers the Payout Updated
        webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-payout.html
      operationId: updatePayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payouts_payoutId_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Disburse
      summary: Cancel Payout
      description: |-
        The payout can be canceled unless its status is confirmation or completed.
        This method triggers the Payout Canceled webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/cancel-payout.html
      operationId: cancelPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payoutId
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: payout_548969fc5a0bf89da3cec70a1529338c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_57"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/return/{payout}:
    post:
      tags:
      - Disburse
      summary: Simulating a Payout Returned Status
      description: Use this method in the sandbox to simulate the action of a third
        party that is required for returning the payout.<BR>Relevant when the status
        of the payout is Completed.<BR>Prerequisites:<BR>* Create Wallet<BR>* Add
        Funds to Wallet Account<BR>* Create Payout<BR>* Complete Payout<BR>This method
        triggers the 'Payout Returned' Webhook. This webhook contains the same information
        as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulating-a-payout-returned-status.html
      operationId: simulatePayoutReturnedStatus
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_67"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/files/documents/payout/{payout}:
    post:
      tags:
      - Disburse.Upload Documents
      summary: Upload Documents to Payout
      description: "Upload one supporting document file or multiple document files\
        \ to a specific payout. These documents include ID scans, company registrations,\
        \ and all other documents that support the validity of the payout. A file\
        \ can be uploaded only when the payout is in a **Created**, **Hold**, or **Pending**\
        \ status."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/upload-documents-to-payout.html
      operationId: uploadDocumentsToPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears as a file. Set to **multipart/form-data**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/payout_payout_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_68"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/{payout}/documents/:
    get:
      tags:
      - Disburse.Upload Documents
      summary: List Documents of Payout
      description: Retrieve details of all supporting document files that were previously
        uploaded to a specific payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-documents-of-payout.html
      operationId: listDocumentsOfPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_68"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Disburse.Upload Documents
      summary: Delete All Documents of Payout
      description: Delete all document files that were previously uploaded to a specific
        payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-all-documents-of-payout.html
      operationId: deleteDocumentsOfPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/payouts/{payout}/documents/{file_id}:
    get:
      tags:
      - Disburse.Upload Documents
      summary: Retrieve Document of Payout
      description: Retrieve details of all supporting document files that were previously
        uploaded to a specific payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-document-of-payout.html
      operationId: getDocumentOfPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file_id
        in: path
        description: ID of the specific document file. UUID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_68"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - Disburse.Upload Documents
      summary: Delete Document of Payout
      description: Delete a document file that was previously uploaded to a specific
        payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-document-of-payout.html
      operationId: deleteDocumentOfPayout
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: payout
        in: path
        description: ID of the payout. String starting with **payout_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: file_id
        in: path
        description: ID of the specific document file. UUID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/cards/eligibility:
    post:
      tags:
      - Disburse.Card Eligibility
      summary: Retrieve Card Eligibility Details
      description: "Retrieve information about a beneficiaryâ€™s card to determine whether\
        \ it is eligible for card payouts (Original Credit Transactions (OCT)), and\
        \ card payments (Account Funding Transactions (AFT)). Currently available\
        \ for Visa cards."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-card-eligibility-details.html
      operationId: cardEligibility
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_eligibility_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_69"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/transfer:
    post:
      tags:
      - eWallet.Transaction
      summary: Transfer Funds Between Wallets
      description: Transfer funds between Rapyd Wallets.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/transfer-funds-between-wallets.html
      operationId: fundsTransfer
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/account_transfer_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_70"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/transfer/response:
    post:
      tags:
      - eWallet.Transaction
      summary: Set Transfer Response
      description: Respond to a funds transfer between wallets. The transferee uses
        this method to accept or decline the transfer.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-transfer-response.html
      operationId: setFundsTransferResponse
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transfer_response_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_70"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/deposit:
    post:
      tags:
      - eWallet
      summary: Add Funds to Wallet Account
      description: "Transfer virtual currency to a Rapyd Wallet account.<BR>If the\
        \ account does not already exist for the indicated currency, it is created.<BR>Use\
        \ this method in the sandbox for testing purposes.<BR>This method triggers\
        \ the 'Funds Added Webhook'."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/add-funds-to-wallet-account.html
      operationId: addFundsToWalletAccount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/account_deposit_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/deposit/{id}:
    get:
      tags:
      - eWallet
      summary: Get Details of Add Funds Request
      description: Retrieve details of a specific 'Add Funds to Wallet Account' request.<BR>
        Use this method in the sandbox for testing purposes.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-details-of-add-funds-request.html
      operationId: detailsOfAddFundstoWalletAccount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: "ID of the 'Add Funds to Wallet Account' request, from the `id`\
          \ field in the data object of the response. UUID."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/withdraw:
    post:
      tags:
      - eWallet
      summary: Remove Funds From Wallet Account
      description: "Remove virtual currency from a Rapyd Wallet account.<BR>If the\
        \ account does not have sufficient funds in the indicated currency, the funds\
        \ transfer fails.<BR>Use this method in the sandbox for testing purposes.<BR>This\
        \ method triggers the 'Funds Removed' Webhook"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/remove-funds-from-wallet-account.html
      operationId: withdrawFundsFromWalletAccount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/account_withdraw_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/account/withdraw{id}:
    get:
      tags:
      - eWallet
      summary: Get Details of Remove Funds Request
      description: Retrieve details of a specific 'Remove Funds From Wallet Account'
        request.<BR>Use this method in the sandbox for testing purposes.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-details-of-remove-funds-request.html
      operationId: getDetailsOfRemoveFundsRequest
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: "ID of the 'Remove Funds From Wallet Account' request, from the\
          \ `id` field in the `data` object of the response. UUID."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_71"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/accounts/balance/hold:
    post:
      tags:
      - eWallet.Transaction
      summary: Put Funds on Hold
      description: "Put a hold on funds in the wallet. Sandbox only.<BR> This action\
        \ transfers funds from the available balance to the on-hold balance. If the\
        \ wallet does not have enough funds in the available balance in the specified\
        \ currency, the transfer fails.<BR>This method triggers the **Transfer Funds\
        \ Between Balances** webhook. This webhook contains the same information as\
        \ the response.<BR>The customer cannot move funds that are on hold until the\
        \ client releases the hold.<BR>This method is relevant for **person** and\
        \ **company** wallets."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/put-funds-on-hold.html
      operationId: putFundsOnHold
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/balance_hold_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_72"
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_59"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/accounts/balance/release:
    post:
      tags:
      - eWallet.Transaction
      summary: Release Funds on Hold
      description: "Release a hold on funds in the wallet. Sandbox only.<BR>This action\
        \ transfers funds from the on-hold balance to the available balance. If the\
        \ wallet does not have enough funds in the on-hold balance in the specified\
        \ currency, the transfer fails.<BR>This method triggers the **Transfer Funds\
        \ Between Balances** webhook. This webhook contains the same information as\
        \ the response.<BR>This method is relevant for person and company wallets."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/release-on-hold-funds.html
      operationId: releaseFundsOnHold
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/balance_release_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_72"
        "400":
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_60"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401_1"
  /v1/ewallets/{ewalletId}/contacts:
    get:
      tags:
      - eWallet.Contact
      summary: List Contacts of Wallet
      description: Retrieve all contacts for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-contacts-for-a-rapyd-wallet.html
      operationId: getEwalletContacts
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_73"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_61"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - eWallet.Contact
      summary: Add Contact to Wallet
      description: Add a personal contact to a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/add-contact-to-wallet.html
      operationId: createEwalletContact
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ewalletId_contacts_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_74"
        "400":
          description: Bad Request. Too many contacts in wallet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_62"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{ewalletId}/contacts/{contactId}:
    get:
      tags:
      - eWallet.Contact
      summary: Retrieve Wallet Contact
      description: Retrieve a contact for an existing Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet-contact.html
      operationId: getEwalletContact
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: One of two values. either ID of the contact - String starting
          with the prefix **cont_** or Contact reference ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_75"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_63"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - eWallet.Contact
      summary: Update Wallet Contact
      description: Update a contact for a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet-contact.html#update-wallet-contact
      operationId: updateEwalletContact
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with the prefix **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_75"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_64"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - eWallet.Contact
      summary: Delete Wallet Contact
      description: Delete a personal contact from a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-wallet-contact.html
      operationId: deleteEwalletContact
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with the prefix **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_76"
        "400":
          description: Bad Request. Contact was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_65"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{ewalletId}/contacts/{contactId}/compliance_levels:
    get:
      tags:
      - eWallet.Contact
      summary: Get Compliance Status of Personal Contact
      description: Verify the compliance status of a personal contact.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet-contact.html#update-wallet-contact
      operationId: getEwalletContactComplianceLevels
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      - name: contactId
        in: path
        description: ID of the contact. String starting with **cont_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_77"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_66"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/issuing/card_details/{cardToken}:
    post:
      tags:
      - Issuing
      summary: Display Issued Card Details to Customer
      description: "Generate a hosted page that displays details of a virtual issued\
        \ card directly to the customer. The URL is available for 24 hours after the\
        \ response is sent, and then it expires."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/display-issued-card-details-to-customer.html
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cardToken
        in: path
        description: ID of the Issued Card Details to Customer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ci_7a9e7ef54d174ff9fe23f66e425145d5
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/card_details_cardToken_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_78"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards:
    get:
      tags:
      - Issuing
      summary: List issuing Cards
      description: Retrieve a list of all issuing cards.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-issued-cards.html
      operationId: getCardIssuingList
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contact
        in: query
        description: ID of a wallet contact. String starting with **cont_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: cont_c34bd6bfd9575f6f7b06647999a93126
      - name: page_number
        in: query
        description: Page number to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: page_size
        in: query
        description: Number of results per page.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: creation_start_date
        in: query
        description: Start date of card creation.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: creation_end_date
        in: query
        description: End date of card creation.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: activation_start_date
        in: query
        description: Start date of card activation.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: activation_end_date
        in: query
        description: End date of card activation.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: card_program
        in: query
        description: Card program token.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: status
        in: query
        description: Card status.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: allow_deleted
        in: query
        description: Is card allow delete.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_79"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Issuing
      summary: Issue Card
      description: Issue a card to a wallet contact.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/issue-card.html
      operationId: issueCard
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issuing_cards_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_80"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/{cardId}:
    get:
      tags:
      - Issuing
      summary: Retrieve Card Details
      description: Retrieve the details of a card.
      externalDocs:
        description: Learn more about details provided by this API
        url: ""
      operationId: getCardIssuingDetails
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cardId
        in: path
        description: ID of a cardId. String starting with **ci_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: card_c34bd6bfd9575f6f7b06647999a93126
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_81"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_23"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/activate:
    post:
      tags:
      - Issuing
      summary: Activate Issued Card Using API
      description: Activate a card that was issued via the Rapyd issuing platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/activate-issued-card-using-api.html
      operationId: activateCard
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_activate_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_82"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/issuing/activate_card:
    post:
      tags:
      - Issuing
      summary: Activate Issued Card Using Hosted Page
      description: A contact can activate his or her physical issued card.<BR>Rapyd
        sends you webhooks for the following actions:<BR> * Personalize a card - See
        'Bulk-Issued Card Personalized Webhook' in online API reference.<BR> * Activate
        a card - See 'Issued Card Activated Webhook' in online API reference.<BR>**Prerequisites**<BR>
        * Rapyd Wallet. See 'Rapyd Wallet' in online API reference.<BR> * Wallet contact
        with a valid phone number. See 'Wallet Contact' in online API reference.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/activate-issued-card-using-hosted-page.html
      operationId: hostedActivateCard
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issuing_activate_card_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_83"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/issuing/pin:
    post:
      tags:
      - Issuing
      summary: Create Hosted Page for PIN Management
      description: "Create a hosted page for viewing and resetting a PIN.<BR>In the\
        \ sandbox, you can set any number other than 1111.<BR>Rapyd sends you the\
        \ 'Issued Card PIN Set' Webhook when the customer sets a Personal Identification\
        \ Number (PIN).<BR>**Note:**<BR> * PINs are relevant to physical cards.<BR>*\
        \ Some card programs do not support resetting the PIN. Holders of those cards\
        \ must reset the PIN at an ATM.<BR>**Prerequisites**<BR>* Rapyd Wallet.<BR>*\
        \ Wallet contact with a valid phone number.<BR>* Issued card that is activated."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-hosted-page-for-pin-management.html
      operationId: hostedCardPIN
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issuing_pin_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_84"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/personalize:
    post:
      tags:
      - Issuing
      summary: Personalize Bulk-Issued Card
      description: Create a connection between an issued card and a wallet contact.
        Relevant to cards that are issued in bulk and not assigned to any specific
        person. This method can be used only once per card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/personalize-bulk-issued-card.html
      operationId: modifyCard
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_personalize_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_82"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/status:
    post:
      tags:
      - Issuing
      summary: Update Card Status
      description: Block or unblock a card that was issued via the Rapyd issuing platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-card-status.html
      operationId: updateCardStatus
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_status_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_82"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/{cardId}/transactions:
    get:
      tags:
      - Issuing
      summary: List Issued Card Transactions
      description: Use the GET method to retrieve a list of transactions for a specific
        issued card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-issued-card-transactions.html
      operationId: getCardIssuingTransactions
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cardId
        in: path
        description: ID of the issued card. String starting with **card_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: card_5004bc56594a31fb9a48b9b88c2d6f48
      - name: end_date
        in: query
        description: "Timestamp of the last transaction or later, in Unix time."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      - name: min_amount
        in: query
        description: Transactions greater than a specific amount.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 200
      - name: max_amount
        in: query
        description: Transactions smaller than a specific amount.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1000
      - name: merchant_name_search
        in: query
        description: Filters the results to return only transactions that have this
          string as part of the name or location.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: Don Joe
      - name: page_size
        in: query
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: 20
      - name: page_number
        in: query
        description: Page number to retrieve.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: start_date
        in: query
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_85"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/{cardId}/transactions/{transactionId}:
    get:
      tags:
      - Issuing
      summary: Retrieve Issued Card Transaction Details
      description: Use the GET method to retrieve details of a specific transaction
        from a specific issued card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-issued-card-transaction-details.html
      operationId: getCardIssuingTransaction
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cardId
        in: path
        description: Card id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: card_5004bc56594a31fb9a48b9b88c2d6f48
      - name: transactionId
        in: path
        description: Card transaction id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: cit_8d8a34d280ff02b0bd218ac6ede21931
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_86"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/pin:
    post:
      tags:
      - Issuing
      summary: Set PIN Code
      description: "Set the PIN code for an issued card.<BR>This method triggers the\
        \ 'Issued Card PIN Set' Webhook.<BR> **Note:**<BR>* In the sandbox, you can\
        \ set any number other than 1111.<BR>* Clients with PCI certification can\
        \ handle personal identifying information for cards, such as card number.<BR>\
        \ * PINs are relevant to physical cards."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-pin-code.html
      operationId: setPINCode
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_pin_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_87"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/{card_id}/card_tokens/google_pay:
    post:
      tags:
      - Issuing
      summary: Add Card to Google Pay - Google Pay Push Provisioning
      description: "Add a card to a Google Pay wallet using Google Pay Push Provisioning.<BR>**Note:**<BR>\
        \ * PCI certification is required for this method as it contains PCI data.<BR>\
        \ * The response returns the `getEncryptedPaymentInstrument` string, which\
        \ is used to add the card to the Google pay wallet by using the Google Pay\
        \ `pushTokenizeRequest` method. For more information refer to the Google Pay\
        \ Provisioning developer documentation"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/add-card-to-google-pay---google-pay-push-provisioning.html
      operationId: addCardtoGooglePay
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: card_id
        in: path
        description: ID of the card. String starting with **card_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/card_tokens_google_pay_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_88"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/simulate_block:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate Blocking a Card
      description: "Simulate a third-party stop notice for an issued card.<BR>Relevant\
        \ to the sandbox.<BR>Rapyd sets the card status to **BLO** (blocked) and sends\
        \ you the Card Issuing Blocked Webhook.<BR> To unblock the card, see Update\
        \ Card Status.<BR>**Prerequisites**:<BR> * Issue Card <BR> * Activate Issued\
        \ Card Using API"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-blocking-a-card.html
      operationId: simulateBlockCard
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_simulate_block_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_89"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/authorization:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate a Card Transaction Authorization Request-EEA
      description: "Simulate Rapydâ€™s request to your authorization server.<BR> If\
        \ you have implemented Remote Authorization, Rapyd sends authorization requests\
        \ to your remote authorization server when the card network requests approval\
        \ of a transaction on a card issued to a Rapyd Wallet. Use this method in\
        \ the sandbox.<BR>The response contains all the fields you must send to Rapyd\
        \ when you receive an authorization request in production. See also Remote\
        \ Authorization.<BR> When `financial_impact` is set to **credit**, this method\
        \ triggers 'Card Issuing Credit Webhook'.   When `financial_impact` is set\
        \ to debit, this method triggers 'Card Issuing Authorization Approved' Webhook.\
        \ Funds in the wallet move from **available balance** to **on-hold balance**.\
        \ <BR> To simulate deducting the funds from the wallet, run 'Simulate Clearing\
        \ a Card Transaction - EEA'.<BR> This method applies to cards issued in the\
        \ European Economic Area (EEA). For cards issued outside the EEA, see Simulate\
        \ a Card Transaction Authorization Request - Non-EEA.<BR>**Prerequisites**<BR>\
        \ * A **company** wallet with a **personal** contact. Run 'Create Wallet'\
        \ and then 'Add Contact to Wallet'<BR>* Issue Card<BR> * Activate Issued Card\
        \ Using API<BR> * Add Funds to Wallet Account"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-card-transaction-authorization-request---eea.html
      operationId: simulateCardTransactionAuthorizationRequestEEA
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_authorization_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_90"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/reversal:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate a Card Transaction Authorization Reversal-EEA
      description: "Simulate a retail locationâ€™s reversal of a card authorization.<BR>The\
        \ retail location where a card was used for a purchase can send a reversal\
        \ through the card network to cancel a previous authorization request. This\
        \ can occur when the transaction is not completed within the time required\
        \ by the card issuer. When Rapyd receives a request for reversal from the\
        \ card network, it reverses the transaction and sends you a webhook. Use this\
        \ method in the sandbox.<BR>This method triggers Card Issuing Reversal Webhook\
        \ . This method moves the reversed funds in the wallet from **on-hold** balance\
        \ to **available balance**. <BR>This method applies to cards issued in the\
        \ European Economic Area (EEA). For cards issued outside the EEA, see 'Simulate\
        \ a Card Transaction Authorization Reversal - Non-EEA' in Rapyd's online API\
        \ reference.<BR>**Prerequisites:**<BR> * Issue Card<BR> * Activate Issued\
        \ Card Using API<BR> * Simulate a Card Transaction Authorization Request -\
        \ EEA"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-card-transaction-authorization-reversal---eea.html
      operationId: simulateCardTransactionAuthorizationReversalEEA
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_reversal_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_91"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/clearing:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate Clearing a Card Transaction-EEA
      description: "Simulate clearing a debit transaction.<BR>This method triggers\
        \ Webhook - Card Issuing Sale. When a fee is charged for an ATM transaction,\
        \ this method also triggers Webhook - Card Issuing ATM Fee. Use this method\
        \ in the sandbox.<BR>This method deducts funds from the **on-hold** balance\
        \ in the wallet.<BR>**Prerequisites:**<BR> * Issue Card<BR> * Activate Issued\
        \ Card Using API<BR> * Simulate a Card Transaction Authorization Request -\
        \ EEA"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-card-transaction-authorization-reversal---eea.html
      operationId: simulateClearingCardTransactionEEA
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_clearing_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_92"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/refund:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate a Card Refund-EEA
      description: "Simulate a retail location making a refund to an issued card.<BR>\
        \ This method triggers Card Issuing Refund Webhook. This method credits the\
        \ **available balance** of the wallet with the refunded amount. See 'Wallet\
        \ Balance Types' in online API reference. Use this method in the sandbox.<BR>\
        \ This method applies to cards issued in the European Economic Area (EEA).\
        \ For cards issued outside the EEA, see 'Simulate a Card Refund - Non-EEA'\
        \  in online API reference. <BR>**Prerequisites:**<BR>* An issued card. See\
        \ 'Issue Card'.<BR>* Activate the card via API or by using a Hosted Page.<BR>*\
        \ Authorization of a card transaction. See 'Simulate a Card Transaction Authorization\
        \ Request - EEA'."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-card-refund---eea.html
      operationId: simulateCardRefundEEA
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_refund_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_92"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/cards/adjustment:
    post:
      tags:
      - Issuing.Simulations
      summary: Simulate a Card Transaction Adjustment - EEA
      description: Use this method in the sandbox to simulate an adjustment to a card
        transaction. A retail location can adjust the amount of a transaction made
        by an issued card. The adjustment is either a credit or a debit. This method
        triggers Card Issuing Adjustment Webhook. This method updates the **available
        balance** of the wallet with the credit or deduction. See 'Wallet Balance
        Types' in online API Reference. This method applies to cards issued in the
        European Economic Area (EEA). <BR>**Prerequisites:**<BR>* Issue card<BR>*
        Activate the card via API <BR>* Simulate a Card Transaction Authorization
        Request - EEA
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-card-transaction-adjustment---eea.html
      operationId: SimulateCardTransactionAdjustmentEEA
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cards_adjustment_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_92"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/virtual_accounts:
    post:
      tags:
      - eWallet.Virtual Account
      summary: Issue Virtual Account Number to Wallet
      description: Issue a virtual account number to an existing wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/issue-virtual-account-to-wallet.html
      operationId: createVirtualAccount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_virtual_accounts_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_93"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/virtual_accounts/transactions:
    post:
      tags:
      - eWallet.Virtual Account
      summary: Simulate a Bank Transfer to a Wallet
      description: Simulate a deposit to a virtual account number that was issued
        to a wallet. This method is relevant only for testing in the sandbox. The
        currency of the transfer must be supported by the specific virtual account.
        This method triggers the Deposit Completed webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/simulate-a-bank-transfer-to-a-virtual-account.html
      operationId: simulateBankTransferToVirtualAccount
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_accounts_transactions_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_94"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/virtual_accounts/{virtualAccountId}:
    get:
      tags:
      - eWallet.Virtual Account
      summary: Retrieve Virtual Account History
      description: Retrieve a Virtual Account Number object for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-history.html
      operationId: retrieveVirtualAccount
      parameters:
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_95"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - eWallet.Virtual Account
      summary: Update Requested Currency
      description: "Define, change, or cancel the currency to which funds received\
        \ by a virtual account are converted.<BR>The status of the virtual account\
        \ must be **ACT** (active) or **PEN** (pending).<BR>To cancel a previously\
        \ defined currency conversion, set `requested_currency` to **null**.<BR> Prerequisites:<BR>*\
        \ Create Wallet<BR>* Verify Identity<BR> * Issue Virtual Account to Wallet"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-requested-currency.html
      operationId: updateRequestedCurrency
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_accounts_virtualAccountId_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_96"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - eWallet.Virtual Account
      summary: Close VA
      description: Delete a virtual account number of an existing wallet. In order
        to close a virtual account its status must be ACT.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-virtual-account.html
      operationId: closeIssuing
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: virtualAccountId
        in: path
        description: ID of the virtual account. String starting with issuing_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_97"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/virtual_accounts/capabilities/{country}:
    get:
      tags:
      - eWallet.Virtual Account
      summary: Issue Virtual Account Number
      description: Retrieve a list of the capabilities of virtual accounts you can
        issue to a Rapyd Wallet.<BR> The list is filtered by country.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-capabilities-of-virtual-accounts.html
      operationId: capabilitiesOfVirtualAccounts
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: country
        in: path
        description: Two-letter ISO 3166-1 ALPHA-2 code of the country.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_98"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets:
    get:
      tags:
      - eWallet
      summary: List eWallets
      description: Retrieve a list of Rapyd Wallets. You can filter the list with
        query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallets.html
      operationId: getUsers
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: phone_number
        in: query
        description: Phone number of the Rapyd Wallet in E.164 format.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: email
        in: query
        description: Email address of the wallet owner.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ewallet_reference_id
        in: query
        description: Wallet ID defined by the customer or end user.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: page_number
        in: query
        description: "Page number to retrieve. If `page_number` is not specified,\
          \ page 1 is retrieved."
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: page_size
        in: query
        description: Number of results per page.
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: type
        in: query
        description: "Type of wallet - company, person, client."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: min_balance
        in: query
        description: ""
        required: false
        style: form
        explode: false
        schema:
          type: number
      - name: currency
        in: query
        description: ""
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_99"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - eWallet
      summary: Create Wallet
      description: Create a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-wallet.html
      operationId: createUser
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_ewallets_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_100"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{ewalletToken}:
    get:
      tags:
      - eWallet
      summary: Retrieve Wallet
      description: Retrieve the details of a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet.html
      operationId: getUser
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_100"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - eWallet
      summary: Update Wallet
      description: Change or modify a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet.html
      operationId: updatedUser
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ewallets_ewalletToken_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_100"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - eWallet
      summary: Delete Wallet
      description: Delete a Rapyd Wallet. Use this method when the wallet has never
        been used. This method triggers the Wallet Deleted webhook. This webhook contains
        the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-wallet.html
      operationId: deleteUser
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletToken
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{ewalletToken}/statuses/{status}:
    post:
      tags:
      - eWallet
      summary: Change Wallet Status
      description: Change Wallet Status
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/change-wallet-status.html
      operationId: updateEwalletStatus
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewalletToken
        in: path
        description: ID of the Rapyd Wallet. String starting with **ewallet_**. Required
          when phone number is not used.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: path
        description: "Status of the wallet. One of the following: ACT - Active, DIS\
          \ - Disabled, CLO - Close."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - ACT
          - DIS
          - CLO
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_64"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{walletId}/account/limits:
    post:
      tags:
      - eWallet.Transaction
      summary: Set Wallet Account Limit
      description: Set the maximum balance limit or the minimum balance threshold
        for an existing wallet account.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/set-wallet-account-limit.html
      operationId: setAccountLimit
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/account_limits_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_101"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    delete:
      tags:
      - eWallet.Transaction
      summary: Delete Wallet Account Limit
      description: Delete a limit on a wallet account.
      operationId: removeAccountLimit
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_102"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{walletId}/accounts:
    get:
      tags:
      - eWallet.Transaction
      summary: Retrieve Wallet Balances
      description: Retrieve details of the balances in a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-balances-of-wallet-accounts.html
      operationId: getUserAccounts
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: ID of the Rapyd Wallet that this contact is associated with.
          String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_16feaaa27c852f30214dd7b3b359e88c
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_101"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{walletId}/transactions:
    get:
      tags:
      - eWallet.Transaction
      summary: List Wallet Transactions
      description: Retrieve a list of all transactions related to a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallet-transactions.html
      operationId: getUserTransactions
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      - name: balance
        in: query
        description: The updated wallet balance after successful completion of the
          transaction.
        required: true
        style: form
        explode: false
        schema:
          type: number
        example: 3422
      - name: currency
        in: query
        description: Three-letter ISO 4217 code for the currency of the transactions.
          Uppercase.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      - name: end_date
        in: query
        description: "Timestamp of the last transaction or later, in Unix time."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1000
      - name: ending_before
        in: query
        description: The ID of the wallet transaction created after the last wallet
          transaction you want to retrieve. String starting with **wt_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
      - name: page_number
        in: query
        description: Page number to retrieve.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 23
      - name: page_size
        in: query
        description: Number of results per page.
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: 20
      - name: start_date
        in: query
        description: "Timestamp of the first transaction or earlier, in Unix time."
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: 1608796554
      - name: starting_after
        in: query
        description: The ID of the wallet transaction created before the first wallet
          transaction you want to retrieve. String starting with **wt_**.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
      - name: type
        in: query
        description: Type of transaction.
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: payout_funds_in
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_103"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{walletId}/transactions/{transactionId}:
    get:
      tags:
      - eWallet.Transaction
      summary: Get Details of Wallet Transaction
      description: Retrieve the details of a wallet transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-details-of-wallet-transaction.html
      operationId: getUserTransactionDetails
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: ID of the wallet. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: ewallet_95feaa629caa5ef64c49e5c24b29171d
      - name: transactionId
        in: path
        description: "ID of the transaction, from the response to List Wallet Transactions.\
          \ String starting with wt_."
        required: true
        style: simple
        explode: false
        schema:
          type: number
        example: wt_8029af385b9614ac6e70f44aea3383b8
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_104"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/ewallets/{ewallet}/virtual_accounts:
    get:
      tags:
      - eWallet.Virtual Account
      summary: List Virtual Accounts by Rapyd Wallet
      description: List the virtual accounts that are attached to a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-virtual-accounts-by-rapyd-wallet.html
      operationId: virtualAccountsByRapydWallet
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ewallet
        in: path
        description: ID of the Rapyd Wallet that the virtual accounts were issued
          to. String starting with **ewallet_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_105"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/fx_rates:
    get:
      tags:
      - Localization Methods
      summary: Get FX Rate
      description: Retrieve a daily rate for conversion of currencies in payments
        and payouts. Rapyd uses a snapshot of daily foreign exchange rates fetched
        at 9 PM UTC. The rate returned includes the FX markup fees.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-fx-rate.html
      operationId: getFXRate
      parameters:
      - name: action_type
        in: query
        description: "Determines the type of transaction that the currency exchange\
          \ applies to. One of the following - **payment**, **payout**."
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: amount
        in: query
        description: "Amount of the currency exchange transaction, in units of the\
          \ fixed-side currency in Decimal."
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: decimal
      - name: buy_currency
        in: query
        description: Defines the currency purchased in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The date when the rate is applicable. Today or earlier. Format
          **YYYY-MM-DD**
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: fixed_side
        in: query
        description: "Indicates whether the rate is fixed for the currency defined\
          \ by `buy_currency` or `sell_currency`. One of the following - **buy**,\
          \ **sell**."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sell_currency
        in: query
        description: Defines the currency sold in the currency exchange transaction.
          Three-letter ISO 4217 code in Uppercase.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_106"
        "400":
          description: Bad Request. Invalid fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_67"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/webhooks/{webhook}:
    get:
      tags:
      - Webhook Methods
      summary: Retrieve Webhook
      description: Retrieve a webhook. Use 'List Webhooks' to find the IDs of webhooks.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-webhook.html
      operationId: getWebhook
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: webhook
        in: path
        description: The webhook ID. String starting with **wh_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: wh_6fcbb2a25aba03de3545f7d36e06cce8
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_107"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
    post:
      tags:
      - Webhook Methods
      summary: Resend Webhook
      description: Resend a webhook that was not sent successfully. Use 'List Webhooks'
        to find the IDs of webhooks. You can resend a webhook that is in status **ERR**.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/resend-webhook.html
      operationId: resendWebhook
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: webhook
        in: path
        description: The webhook ID. String starting with **wh_**.
        required: true
        style: simple
        explode: true
        schema:
          type: string
        example: wh_6fcbb2a25aba03de3545f7d36e06cce8
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_107"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/webhooks:
    get:
      tags:
      - Webhook Methods
      summary: List Webhooks
      description: Retrieve a list of all webhooks that were sent. You can filter
        the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-supported-languages.html
      operationId: listWebhooks
      parameters:
      - name: from_created_at
        in: query
        description: "The earliest date and time when the object was created, in Unix\
          \ time (seconds)."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "The maximum number of objects to return. Range: 1-1000."
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: decimal
          default: 50
      - name: page
        in: query
        description: Page number for pagination.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: "Status of the webhook. One of the following: <BR> * **NEW**\
          \ (new) - The webhook was created and has not yet been sent successfully.\
          \ <BR> * **CLO** (closed) - The webhook was sent successfully.<BR> * **ERR**\
          \ (error) - Attempts were made to send the webhook, but the maximum number\
          \ of retries was  reached. The automatic retry process failed. The webhook\
          \ was not sent. <BR> * **RET** (retried) - The webhook was resent."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: type
        in: query
        description: The type of webhook.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_created_at
        in: query
        description: "The latest date and time when the object was created, in Unix\
          \ time (seconds)."
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_108"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/bankaccounts:
    post:
      tags:
      - Issuing
      summary: Issue Virtual Account Number
      description: Issue a virtual account number to an existing wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/issue-virtual-account-to-wallet.html
      operationId: createIssuing
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issuing_bankaccounts_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_109"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/bankaccounts/remitters/{virtualAccountId}/transactions/{transaction_id}:
    get:
      tags:
      - eWallet.Virtual Account
      summary: Retrieve Remitter Details
      description: Retrieve the details of the remitter of a transfer to a virtual
        bank account.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-remitter-details.html
      operationId: getRemitterDetails
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      - name: transaction_id
        in: path
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: isutran_59599bcba9ab9c79113f88cade1ed655
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_110"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/issuing/bankaccounts/{virtualAccountId}/transactions/{transactionId}:
    get:
      tags:
      - eWallet.Virtual Account
      summary: Retrieve Virtual Account Transaction
      description: Retrieve a virtual account transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-virtual-account-transaction.html
      operationId: retrieveIssuingTransaction
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: virtualAccountId
        in: path
        description: ID of the Virtual Account Number object. String starting with
          **issuing_**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: issuing_16feaaa27c852f30214dd7b3b359e88c
      - name: transactionId
        in: path
        description: "ID of the transaction, as appears in the array of transactions\
          \ in the response to 'Retrieve Virtual Account History'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: isutran_59599bcba9ab9c79113f88cade1ed655
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_111"
        "400":
          description: bad input parameter
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/collect/payments/:
    post:
      tags:
      - Payment Link
      summary: Create Payment Link
      description: "Creates a reusable link for a hosted payment page. <BR> A customer\
        \ can use the link and the hosted payment page multiple times. After providing\
        \ required information, the customer is redirected seamlessly to a Rapyd Checkout\
        \ page to complete the payment.You can create the link for everyone or for\
        \ a specific customer. You can make the payment amount fixed, editable, or\
        \ open."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-payment-link.html
      operationId: createPaymentLink
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collect_payments_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
        "400":
          description: Bad Request. Invalid value to a required field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_68"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/identities:
    post:
      tags:
      - Verify
      summary: Verify Identity
      description: Verification of the identity of a personal contact associated with
        a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/verify-identity.html
      operationId: verifyIdentity
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1_identities_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_112"
        "400":
          description: Bad Request. Customer was not found for given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_69"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/identities/types:
    get:
      tags:
      - Verify
      summary: List ID Documents
      description: "Use this method to determine the types of documents to use for\
        \ identification purposes, and also whether you need the reverse side of the\
        \ document. You can filter your search results by country with the `country`\
        \ query parameter."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-official-identification-documents.html
      operationId: getKycIdVerificationSupportedDocTypes
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: country
        in: query
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: form
        explode: false
        schema:
          $ref: "#/components/schemas/Country_1"
        example: US
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_113"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/verify/applications/types/country/{country}:
    get:
      tags:
      - Verify
      summary: List Verify Application Types
      description: Retrieve a List types of identity verification applications by
        country. You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-rapyd-verify-application-types.html
      operationId: getApplicationTypesByCountry
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: country
        in: path
        description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/Country_1"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_114"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/verify/applications/status/{application}:
    get:
      tags:
      - Verify
      summary: Retrieve verify Application Status
      description: Retrieve the status of an application for verification of identity.
        You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-status-of-rapyd-verify-application.html
      operationId: getApplicationStatus
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: application
        in: path
        description: ID of the application. String starting with app_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_115"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/verify/applications/hosted:
    post:
      tags:
      - Verify
      summary: Create Hosted Verify Application
      description: |
        Create an application for Rapyd Verify where the client (applicant) provides information directly to Rapyd. After the applicant submits the application on the hosted page, Rapyd verifies the information. When the status of the application changes, Rapyd sends you a webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-rapyd-verify-application.html
      operationId: createHostedApplicationToken
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/applications_hosted_body"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_116"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/verify/applications/hosted/{verifyAppId}:
    get:
      tags:
      - Verify
      summary: Get Verify Hosted Application
      description: Retrieve Rapyd Verify Application
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-rapyd-verify-application.html
      operationId: getHostedApplicationByToken
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: verifyAppId
        in: path
        description: ID of the Rapyd Verify application. String starting with happ_.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Hosted application details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_117"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/idv:
    post:
      tags:
      - Verify
      summary: Create Identity Verification Page
      description: "Create a hosted page for verifying the identity of a personal\
        \ contact for a Rapyd Wallet.<BR>The customer completes the process by accessing\
        \ the URL returned in the response.<BR>After the customer submits the identity\
        \ verification request on the hosted page, Rapyd verifies the information\
        \ and sends you a webhook with a summary of the identity check. See:<BR>*\
        \ Identity Verification Webhook - Sandbox Approved<BR>* Identity Verification\
        \ Webhook - Production Approved<BR>* Identity Verification Webhook - Production\
        \ Not Approved<BR>**Prerequisites**<BR>* Rapyd Wallet"
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-identity-verification-page.html
      operationId: identityVerificationPage
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/hosted_idv_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_118"
        "400":
          description: Bad Request. Invalid contact type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_70"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/cnl/termination_query:
    post:
      tags:
      - Card Network Lookup Service
      summary: Initiate Merchant Query
      description: "Submit information about a merchant to begin the process of querying\
        \ the merchant history in the databases of the card networks.<BR>This method\
        \ validates the data in your request.<BR>This is the first step in the process\
        \ of querying the card networks about a potential new merchant. When this\
        \ step is completed successfully, proceed to 'Retrieve Query Results'."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/initiate-merchant-query.html
      operationId: initiateMerchantQuery
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cnl_termination_query_body"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_119"
        "400":
          description: Bad Request. Invalid fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_71"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/cnl/termination_query/{partner_query_reference}:
    get:
      tags:
      - Card Network Lookup Service
      summary: Retrieve Query Results
      description: "Submit information about a merchant to begin the process of querying\
        \ the merchant history in the databases of the card networks.<BR>This method\
        \ validates the data in your request.<BR>This is the first step in the process\
        \ of querying the card networks about a potential new merchant. When this\
        \ step is completed successfully, proceed to 'Retrieve Query Results'."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-query-results.html
      operationId: retrieveQueryResults
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: partner_query_reference
        in: path
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_120"
        "400":
          description: Bad Request. Invalid fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_400_72"
        "401":
          description: Authentication issue. Check status of account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_401"
  /v1/hosted/config/supported_languages:
    get:
      tags:
      - Localization Methods
      summary: List Supported Languages
      description: "Retrieve a list of the languages supported for hosted pages.<BR>\
        \ A hosted page can appear in many foreign languages. The `language` (or `merchant_language`)\
        \ field determines the default language of a hosted page. The field type is\
        \ string. Use lower-case letters for the value.<BR> * If no value is specified,\
        \ the language of the user's browser is used. <BR> * If the language of the\
        \ user's browser cannot be determined, the default language is English. <BR>\
        \ Relevant to: <BR>* Display Issued Card Details to Customer <BR> * Create\
        \ Subscription by Hosted Page <BR> * Create Checkout Page <BR> * Create Payment\
        \ Link <BR> * Create Beneficiary Tokenization Page <BR> * Create Card Token\
        \ <BR> * Create Identity Verification Page <BR> * Activate Issued Card Using\
        \ Hosted Page <BR> * Create Hosted Page for PIN Management "
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-supported-languages.html
      operationId: listSupportedLanguages
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_121"
  /v1/data/countries:
    get:
      tags:
      - Localization Methods
      summary: List Countries
      description: Retrieve a list of all countries.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-countries.html
      operationId: listCountries
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_122"
  /v1/data/currencies:
    get:
      tags:
      - Localization Methods
      summary: List Currencies
      description: Retrieve a list of all currencies.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-currencies.html
      operationId: listCurrencies
      parameters:
      - name: access_key
        in: header
        description: Unique access key provided by Rapyd for each authorized user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Indicates that the data appears in JSON format. Set to **application/json**.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: idempotency
        in: header
        description: A unique key that prevents the platform from creating the same
          object twice.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: salt
        in: header
        description: "Random string. Recommended length: 8-16 characters."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: signature
        in: header
        description: "Signature calculated for each request individually. See [Request\
          \ Signatures](https://docs.rapyd.net/en/request-signatures.html)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: timestamp
        in: header
        description: "Timestamp for the request, in Unix time (seconds)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_123"
components:
  schemas:
    ApplePayObject:
      required:
      - display_name
      - initiative_context
      type: object
      properties:
        display_name:
          type: string
          description: "The canonical name for the client's business, suitable for\
            \ display. 64 or fewer UTF-8 characters. Relevant to Apple Pay."
        initiative_context:
          type: string
          description: "The client's fully qualified domain name, without the final\
            \ period. For example, **acmegeneralproducts.rapyd.net**"
    ApplePayObjectResponse:
      type: object
      properties:
        display_name:
          type: string
          description: "The canonical name for the client's business, suitable for\
            \ display. 64 or fewer UTF-8 characters. Relevant to Apple Pay."
        domainName:
          type: string
          description: The domain name of the client's ecommerce site.
        epochTimestamp:
          type: number
          description: "Time of creation of the Apple Pay session, in Unix time."
        expiresAt:
          type: number
          description: "Time of expiration of the Apple Pay session, in Unix time."
        merchantIdentifier:
          type: string
          description: Your Apple Pay merchant ID.
        merchantSessionIdentifier:
          type: string
          description: Your Apple Pay session ID.
        nonce:
          type: string
          description: A string that uniquely identifies each call to Apple Pay.
        retries:
          type: number
          description: The number of previous attempts to get an Apple Pay Session
            object.
        signature:
          type: string
          description: Digital signature that validates the authenticity and integrity
            of a digital wallet payment.
    EntityTypeVerify:
      type: string
      enum:
      - Partnership
      - Sole Proprietor
      - Private Limited Company
      - Charity or NPO
      - Individual
    VerifyHostedAppResponse:
      type: object
      properties:
        token:
          type: string
          description: Identifier of the hosted application. String starting with
            happ_.
          example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
        rapyd_entity_token:
          type: string
          description: The ID of the Rapyd wallet of the company. String starting
            with ewallet_. Must be a company type wallet.
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing Back to
            Website to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing Close to
            exit the hosted page. This URL overrides the merchant_website URL. Does
            not support localhost URLs.
        client_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        application_token:
          type: string
          description: Identifier of the application. String starting with app_.
        phone_number:
          type: string
          description: The phone number of the applicant. This is the phone number
            where an authentication code is sent. Must have a leading plus sign (+).
        merchant_details:
          $ref: "#/components/schemas/VerifyHostedAppResponse_merchant_details"
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
          x-note: |
            The redirect_url value in the response provides the link to the hosted application. When the customer browses to the URL, Rapyd sends an authentication code to the applicant's phone. For the sandbox, the authentication code is 111111.
        metadata:
          type: object
          description: A JSON object defined by the client
        authorized_user_email:
          type: string
          description: ""
    Account:
      type: object
      properties:
        alias:
          type: string
          description: Three-letter ISO 4217 code for the currency of the account.
        balance:
          type: number
          description: Available funds in the account.
        currency:
          $ref: "#/components/schemas/Currency"
        id:
          type: string
          description: ID of the account. UUID
        limit:
          type: string
        limits:
          type: array
          items:
            $ref: "#/components/schemas/Limit"
        on_hold_balance:
          type: number
          description: Amount in the on-hold balance of the account.
        received_balance:
          type: number
          description: Amount of escrow funds in the account.
        reserve_balance:
          type: number
          description: Amount in the reserve balance of the account.
    Address:
      required:
      - line_1
      - name
      type: object
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking."
        city:
          type: string
          description: City portion of the address. Required for issuance of a card
            to the wallet contact.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        created_at:
          type: number
          description: "Time of creation of the payment, in Unix time. Response only."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking."
        id:
          type: string
          description: ID of the Address object. String starting with **address_**.
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name."
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        line_3:
          type: string
          description: "Line 3 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: "The name of a contact person or an 'in care of' person at\
            \ this address. For a **personal** wallet contact type, alphabetic characters\
            \ and spaces.A JSON object defined by the client."
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique.
        state:
          type: string
          description: State or province portion of the address.
        zip:
          type: string
          description: Postal code portion of the address.
      description: address associated with this specific Rapyd entity Payment/Customer
        etc...
    AddCardtoGooglePayResponse:
      properties:
        PaymentInstrumentData:
          type: string
          description: "The base64 encoded string that contains the encrypted object\
            \ for Push Provisioning. Required for adding the card to the Google Pay\
            \ wallet by using the Google Pay `pushTokenizeRequest` method. For more\
            \ information refer to the Google Pay Provisioning developer documentation\
            \ .Details of an account funding transaction (AFT), which transfers funds\
            \ from a card to a cardholder's wallet."
        UserAddress:
          $ref: "#/components/schemas/AddCardtoGooglePayResponse_UserAddress"
    AddressResponse:
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking."
        city:
          type: string
          description: City portion of the address.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        created_at:
          type: number
          description: "Time of creation of the object, in Unix time."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking."
        id:
          type: string
          description: ID of the `address` object.
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name."
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        line_3:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building."
        metadata:
          description: A JSON object defined by the client.
        name:
          type: string
          description: "The name of a contact person or an 'in care of' person at\
            \ this address. For a **personal** wallet contact type, alphabetic characters\
            \ and spaces.A JSON object defined by the client."
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique.
        state:
          type: string
          description: State or province portion of the address.
        zip:
          type: string
          description: Postal code portion of the address.
    PayoutAmountRangePerCurrency:
      type: array
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      items:
        $ref: "#/components/schemas/PayoutAmountRangePerCurrency_inner"
    VirtualAccountIssuing:
      type: object
      properties:
        id:
          type: string
          description: ID of the virtual account number object. String starting with
            issuing_.
        merchant_reference_id:
          type: string
          description: Identifier defined by the client for reference purposes. Limit
            - 45 characters.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that the virtual account is attached
            to. String starting with ewallet_.
        bank_account:
          type: object
          description: Details about the virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: |
            Indicates the status of the virtual account. * ACT (Active) * CLO (Closed)  * ERR (Error)  * PEN (Pending)  * REJ (REjected)  * DIS  * ENA
          example: ACT
          enum:
          - ACT
          - CLO
          - ERR
          - PEN
          - REJ
          - DIS
          - ENA
        description:
          type: string
          description: "Description of the transaction, as defined by the client."
        funding_instructions:
          type: object
          description: Issuied virtual account funding instructions.
          nullable: true
        currency:
          $ref: "#/components/schemas/Currency_1"
        requested_currency:
          type: string
          description: |
            Currency received by the virtual account after conversion. One of the following: AUD - Australian Dollar EUR - Euro GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD - US Dollar
        transactions:
          type: array
          description: Issuied virtual account transactions.
          items:
            $ref: "#/components/schemas/VirtualAccountTransactionResponse"
    Beneficiary:
      type: object
      properties:
        aba:
          type: string
          description: American Bankers Association routing transit number. United
            States.
        account_number:
          type: string
          description: The person's account number.
        ach_code:
          type: string
          description: Automated Clearing House (ACH) code.
        additional_data:
          type: object
          description: Additional data required by the payout method. Object.
        additional_last_name:
          type: string
          description: The person's second last name.
        address:
          type: string
          description: Street and number portion of the person's address.
          example: "23 NY, US"
        amount:
          type: number
          description: "Maximum payout amount to validate, in units of the `currency`\
            \ defined in `sender_currency`. Decimal."
        bank_account_holder_name:
          type: string
          description: Name of the account holder.
        bank_account_type:
          type: string
          description: "Type of bank account, such as checking or savings."
        bank_address:
          type: string
          description: Street and number portion of the bank's address.
        bank_branch_code:
          type: string
          description: Identifier for the bank branch.
        bank_branch_name:
          type: string
          description: Name of the bank branch.
        bank_city:
          type: string
          description: City portion of the bank's address.
        bank_code:
          type: string
          description: Domestic identifier of the bank.
          example: CNFC120452
        bank_country:
          type: string
          description: Two-letter ISO 3166-1 ALPHA-2 code for the bank's country.
        bank_name:
          type: string
          description: Name of the bank.
          example: Central Bank
        bank_province:
          type: string
          description: State or province portion of the bank's address.
        beneficiary:
          type: string
          description: ID of the `beneficiary` object. String starting with **beneficiary_**.
        beneficiary_bic_local:
          type: string
          description: NA.
        beneficiary_relationship:
          type: string
          description: Relationship between the sender and the beneficiary.
          example: Friend
        bic_swift:
          type: string
          description: BIC (SWIFT) code for the bank account.
          example: 12345678XXX
        bin_details:
          $ref: "#/components/schemas/Beneficiary_bin_details"
        bsb_code:
          type: string
          description: Bank State Branch code for Australia.
        card_expiration_month:
          type: string
          description: The cardÃ¢â‚¬â„¢s expiration month.
        card_expiration_year:
          type: string
          description: The cardÃ¢â‚¬â„¢s expiration year.
        card_number:
          type: string
          description: The card number.
        category:
          $ref: "#/components/schemas/Category"
        city:
          type: string
          description: City portion of the address.
          example: New York
        clabe:
          type: string
          description: Standardized bank code for Mexico.
        cnaps:
          type: string
          description: China National Advanced Payments System (CNAPS) code number.
        company_name:
          type: string
          description: Name of the beneficiary company. Relevant when entity_type
            is company.
          example: Rapyd
        confirmation_required:
          type: boolean
          description: Indicates whether the beneficiary must respond to accept or
            decline a payout. Default is false. Relevant to the rapyd_ewallet payout
            method type
        country:
          $ref: "#/components/schemas/Country"
        currency:
          $ref: "#/components/schemas/Currency"
        date_of_birth:
          type: string
          description: The person's date of birth.
        date_of_incorporation:
          type: string
          description: Date of incorporation of the corporation.
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
        email:
          type: string
          description: The person's email address.
        entity_type:
          $ref: "#/components/schemas/EntityType"
        ewallet:
          type: string
          description: ID of the wallet that the money is transferred to. String starting
            with **ewallet_**. Relevant to payout to Rapyd Wallet.
        first_name:
          type: string
          description: First name of the beneficiary. Relevant when **entity_type**
            is individual.
          example: John
        iban:
          type: string
          description: International Bank Account Number.
          example: "12873045315519"
        id:
          type: string
          description: ID of the `beneficiary` object. String starting with **beneficiary_**.
            Response only.
          example: beneficiary_8ba699483c80b7fb9f7e658be3275703
        id_date_of_issue:
          type: string
          description: The date of issuance of the person's identification document.
          example: 27/10/2019
        id_issue_authority:
          type: string
          description: The government agency that issued the person's identification
            document.
          example: Indian Government
        id_issue_location:
          type: string
          description: The location where the person's identification document was
            issued.
          example: INDIA
        identification_type:
          type: string
          description: "Type of identification document for the beneficiary. When\
            \ `entity_type` is **company**, this field must be **company_registered_number**.<BR>\
            \ When `entity_type` is **individual**, one of the following values:<BR>*\
            \ **drivers_license**<BR>* **identification_id**<BR>* **international_passport**<BR>*\
            \ **residence_permit**<BR>* **social_security**<BR>* **work_permit**"
          example: drivers_license
          enum:
          - drivers_license
          - identification_id
          - international_passport
          - residence_permit
          - social_security
          - work_permit
          - company_registered_number
        identification_value:
          type: string
          description: identification number on the document mentioned in identification_type.
          example: AYKI86547930
        ifsc:
          type: string
          description: Indian Financial System Code for a bank branch.
        issuer_code:
          type: string
          description: NA.
        last_name:
          type: string
          description: Last name of the beneficiary. Relevant when `entity_type` is
            individual.
          example: Doe
        merchant_reference_id:
          type: string
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
          example: GHY-0YU-HUJ-POI
        middle_name:
          type: string
          description: The person's middle name.
        mobile_number:
          type: string
          description: Mobile phone number in E.164 format.
        name:
          type: string
          description: The person's full name.
          example: John Doe
        nationality:
          type: string
          description: The person's nationality.
          example: Indian
        payment_type:
          type: string
          description: "Additional classification of the type of payment, as required\
            \ by the bank. Possible values: priority , regular"
        phone_country_code:
          type: string
          description: The country code of the person's phone.
          example: "1"
        phone_number:
          type: string
          description: Phone number in E.164 format.
        postcode:
          type: string
          description: Postal code portion of the address.
          example: "110004"
        province:
          type: string
          description: Province portion of the address.
        purpose_code:
          type: string
          description: Purpose of the transaction.
        routing_code_type_1:
          type: string
          description: NA.
        routing_code_type_2:
          type: string
          description: NA.
        routing_code_type_3:
          type: string
          description: NA.
        routing_code_value_1:
          type: string
          description: NA.
        routing_code_value_2:
          type: string
          description: NA.
        routing_code_value_3:
          type: string
          description: NA.
        sort_code:
          type: string
          description: Routing number for the UK.
        state:
          type: string
          description: State portion of the address.
          example: New York
        statement_narrative:
          type: string
          description: Additional description suitable for a customer transaction
            statement.
        suburb:
          type: string
          description: District of the sender's or beneficiary's city.
        tax_id:
          type: string
          description: Tax identification number.
          example: AIYPK06263
        vpa:
          type: string
          description: Virtual Payment Address.
      description: Note that some response fields only appear for specific types of
        transactions.
    CardEligibility:
      type: object
      properties:
        aft:
          $ref: "#/components/schemas/CardEligibility_aft"
        billing_currency:
          type: string
          description: The billing currency of the card. Three-letter ISO 4217 code.
        card_type:
          type: string
          description: The type of card.
          enum:
          - commercial
          - consumer
        issuer_country:
          type: string
          description: The country where the issuer of the card is registered.
        oct:
          $ref: "#/components/schemas/CardEligibility_oct"
        product_type:
          type: string
          description: The type of card product.
          enum:
          - Debit
          - Credit
        scheme:
          type: string
          description: The scheme of the card.
          enum:
          - Visa
          - Mastercard
    Category:
      type: string
      description: The category of payout method type.
      enum:
      - bank
      - card
      - cash
      - ewallet
      - rapyd_ewallet
      - bank_redirect
      - bank_transfer
    CardIssuing:
      type: object
      properties:
        activated_at:
          type: number
          description: "Time that the card was activated, in Unix time. Response only."
        assigned_at:
          type: number
          description: "Time that the card was assigned to a cardholder, in Unix time.\
            \ Response only."
        blocked_reason:
          type: string
          description: Reason for blocking the card.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**.
        country_iso_alpha_2:
          type: string
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code. Response only.
        created_at:
          type: number
          description: "Time of creation of the issued card object, in Unix time.\
            \ Response only."
        ewallet_contact:
          $ref: "#/components/schemas/Contact"
        id:
          type: string
          description: ID of the Issued Card object. String starting with **ci_**.
        metadata:
          type: object
          description: A JSON object defined by the client.
        public_details:
          type: object
          description: Details of the issued card.
        status:
          type: string
          description: Status of the card
        card_tracking_id:
          type: string
          description: Reserved
    CardIssuingMasked:
      type: object
      properties:
        activated_at:
          type: number
          description: "Time that the card was activated, in Unix time. Response only."
        assigned_at:
          type: number
          description: "Time that the card was assigned to a cardholder, in Unix time.\
            \ Response only."
        blocked_reason:
          type: string
          description: Reason for blocking the card.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**.
        configuration:
          type: string
          description: Reserved. Webhook only.
        country_iso_alpha_2:
          type: string
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code. Response only.
        created_at:
          type: number
          description: "Time of creation of the issued card object, in Unix time.\
            \ Response only."
        ewallet_contact:
          $ref: "#/components/schemas/Contact"
        id:
          type: string
          description: ID of the Issued Card object. String starting with **ci_**.
        metadata:
          type: string
          description: A JSON object defined by the client.
        public_details:
          type: object
          description: Details of the issued card.
        status:
          type: string
          description: Status of the card
        card_tracking_id:
          type: string
          description: Reserved
        card_number:
          type: string
          description: Actual card number
        cvv:
          type: string
          description: Card security code
        expiration_month:
          type: string
          description: Expiration month of the card. Two digits. Relevant when the
            card issuer supports it for the country.
        expiration_year:
          type: string
          description: Expiration year of the card. Two digits. Relevant when the
            card issuer supports it for the country.
        bin:
          type: string
          description: Bank Identifier Number for the institution issuing the card.
            Response only.
        sub_bin:
          type: string
          description: Two-digit code.
    CardDetailsResponse:
      type: object
      properties:
        card:
          type: string
          properties:
            name:
              type: string
              description: The name of the person that the card is issued to.
        country:
          $ref: "#/components/schemas/Country_1"
        currency:
          $ref: "#/components/schemas/Currency_1"
        customer:
          type: string
          description: "ID of the customer, a string starting with **cus_**."
        id:
          type: string
          description: "ID of the card token hosted page, a string starting with hp_card_"
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If page_expiration is not set, the hosted page expires\
            \ 14 days after creation. Range is 1 minute to 30 days."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, dk_visa_card"
        payment_params:
          $ref: "#/components/schemas/PaymentParams"
        customer_card_payment_methods:
          $ref: "#/components/schemas/CustomerPaymentMethod"
    CardTransaction:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the transaction, in units defined in currency. Decimal,\
            \ including the correct number of decimal places for the currency exponent,\
            \ as defined in ISO 2417:2015. Response only."
        auth_code:
          type: string
          description: Authorization code sent to the merchant. Relevant to authorizations
            approved by Rapyd. Response only.
        authorization_approved_by:
          type: string
          description: Approver of the transaction when remote authorization is used.
            See Remote Authorization.
        bin:
          type: string
          description: The first 6 digits of the card number. Response only.
        card_authorization:
          type: string
        card_id:
          type: string
          description: ID of the card. String starting with card_. Response only.
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**. Response only.
        created_at:
          type: number
          description: "Time of creation of the transaction object, in Unix time.\
            \ Response only."
        currency:
          $ref: "#/components/schemas/Currency"
        fx_rate:
          type: number
          description: The exchange rate. Response only.
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        issuing_txn_type:
          type: string
          description: Type of the transaction.
        last4:
          type: string
          description: The last 4 digits of the card number. Response only.
        merchant_category_code:
          type: string
          description: "Four-digit merchant category code (MCC) of the initiator of\
            \ the transaction, as defined in ISO 18245. Response only."
        merchant_name_location:
          type: string
          description: Name and location of the merchant. Maximum 40 characters. Response
            only.
        original_transaction_id:
          type: string
          description: ID of the original card transaction. Response only.
        original_txn_amount:
          type: number
          description: "Original amount for FX transactions, when currency is different\
            \ from original_txn_currency. Response only."
        original_txn_currency:
          type: string
          description: Original currency in FX transaction. Three-letter ISO 4217
            code. Response only.
        pos_entry_mode:
          type: string
          description: The mode of the POS entry. One of the following
          enum:
          - magstripe
          - manual_entered
          - emv
          - emv_standin
          - nfc
          - network_token
          - ecommerce
          - 3ds_ecommerce
          - adjustment
        retrieval_reference_number:
          type: string
          description: Reserved.
        systems_trace_audit_number:
          type: string
          description: Reserved
        wallet_transaction_id:
          type: string
          description: ID of the wallet transaction. String starting with **wt_**.
            Response only.
    Contact:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
        business_details:
          $ref: "#/components/schemas/ContactBusiness"
        compliance_profile:
          type: number
          description: Indicates the degree to which this contact can use the wallet.
          enum:
          - 1
          - 0
          - -1
        contact_reference_id:
          type: string
          description: Reference ID for the contact. Limited to 45 characters. Should
            be unique per merchant per e-wallet.
        contact_type:
          type: string
          description: Type of contact.
          enum:
          - personal
          - business
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        created_at:
          type: number
          description: "Time of creation of the `contact` object, in Unix time."
        date_of_birth:
          type: string
          description: Date of birth of the individual. Format **YYYY-MM-DD**.
        email:
          pattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
          type: string
          description: Email address of the contact
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with **ewallet_**.
        first_name:
          type: string
          description: First name of the **personal** contact or primary person associated
            with the business contact.
        gender:
          type: string
          description: Gender of the personal contact or primary person associated
            with the business contact
          enum:
          - male
          - female
          - other
          - not_applicable
        house_type:
          type: string
          description: Description of the type of residency at the contact's residence.
          enum:
          - lease
          - live_with_family
          - own
          - owner
          - month_to_month
          - housing_project
        id:
          type: string
          description: ID of the contact object. String starting with **cont_**.
        identification_number:
          type: string
          description: ID number as shown by the ID document.
        identification_type:
          type: string
          description: Type of the identification document associated with the contact.
            Uppercase.
        issued_card_data:
          $ref: "#/components/schemas/Contact_issued_card_data"
        last_name:
          type: string
          description: Family name of the personal contact or primary person associated
            with the business contact. Required for issuing a card to a personal contact.
        marital_status:
          type: string
          description: Marital status of the personal contact or primary person associated  with
            the business contact.
          enum:
          - married
          - single
          - divorced
          - widowed
          - cohabiting
          - not_applicable
        metadata:
          type: object
          description: A JSON object defined by the client.
        middle_name:
          type: string
          description: Middle name of the personal contact or primary person associated
            with the business contact.
        mothers_name:
          type: string
          description: Name of the contact's mother
        nationality:
          type: string
          description: The citizenship of the contact. Two-letter ISO 3166-1 ALPHA-2
            code for the country.
        phone_number:
          type: string
          description: Phone number of the contact in E.164 format.
        second_last_name:
          type: string
          description: Second last name of the personal contact or primary person
            associated with the business contact.
        send_notifications:
          type: boolean
          description: Determines whether Rapyd sends notifications to the contact.
            Default is false.
          default: false
        verification_status:
          type: string
          description: Result of the verification check.
          enum:
          - not verified
          - KYCd
    ContactBusiness:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
        annual_revenue:
          type: number
          description: Annual revenue of the business in US dollars. Maximum value
            100000000000000. Decimal.
        cnae_code:
          type: string
          description: "Business activity code of the business, according to the ClassificaÃƒ\
            Â§ÃƒÂ£o Nacional de Atividades EconÃƒÂ´micas of Brazil. Alphanumeric string.\
            \ Maximum 7 characters."
        customer_service_phone_number:
          type: number
          description: Phone number for contacting the customer support service of
            the business. Relevant to Rapyd Platform.
        created_at:
          type: number
          description: "Time of creation of the business_details object, in Unix time."
        entity_type:
          type: string
          description: Type of business entity
          enum:
          - sole_prop
          - partnership
          - company
          - government
          - charity
          - NPO
          - association
          - trust
        establishment_date:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Date that the business was established. Format **YYYY-MM-DD**.
        id:
          type: string
          description: ID of the business_details object. String starting with **busi_**.
        industry_category:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
          description: Name of the industry that this business belongs to. Required.
            Alphanumeric string with no special characters.
        industry_sub_category:
          type: string
          description: Subcategory of the industry that this business belongs to.
        legal_entity_type:
          type: string
          description: Type of legal entity. Alphanumeric string.
        mcc:
          type: string
          description: "Four-digit merchant category code (MCC) of the business, as\
            \ defined in ISO 18245. Relevant to Rapyd Platform."
        name:
          type: string
          description: Business name.
        registration_number:
          type: string
          description: Registration number.
        statement_descriptor:
          type: string
          description: "The business name followed by the merchant name, separated\
            \ by an asterisk. Relevant to Rapyd Platform."
        website_url:
          description: URL of the business website. Relevant to Rapyd Platform.
      description: Describes additional information for business entities.
    Country:
      type: string
      description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
        The two-letter prefix of the payout method type must match the beneficiary
        country code.
    Currency:
      pattern: /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/
      type: string
    DailyRate:
      type: object
      properties:
        action_type:
          type: string
          description: "The type of transaction that the currency exchange applies\
            \ to. One of the following - **payment**, **payout**."
          example: payment
        buy_amount:
          type: number
          description: "If fixed_side is buy, the value of amount. If fixed_side is\
            \ sell, the value of buy_currency following the currency exchange transaction.\
            \ Relevant when amount and `fixed_side` are specified."
          example: 1000
        buy_currency:
          type: string
          description: The currency purchased in the currency exchange transaction.
            Three-letter ISO 4217 code. Uppercase.
          example: ISK
        date:
          type: string
          description: The date when the rate is applicable. Today or earlier. Format
            is YYYY-MM-DD. Default is today.
          format: date
          example: 2024-06-15
        fixed_side:
          type: string
          description: "Indicates which currency the rate is fixed for. One of the\
            \ following : * buy - The currency defined by `buy_currency`. * sell :\
            \ The currency defined by `sell_currency`."
          example: buy
        rate:
          type: number
          description: The exchange rate. Includes FX markup fees.
          example: 128.1629678715
        sell_amount:
          type: number
          description: "If `fixed_side` is **sell**, the value of amount. If `fixed_side`\
            \ is **buy**, the value of `sell_currency` following the currency exchange\
            \ transaction. Relevant when `amount` and `fixed_side` are specified."
          format: float
          example: 7.8
        sell_currency:
          type: string
          description: Selling currency
          example: USD
      description: Describes currency conversion for payments and payouts. Rapyd uses
        a snapshot of daily foreign exchange rates fetched at 9 PM UTC. The rate returned
        includes the FX markup fees.
    ListWebhooksResponse:
      type: object
      properties:
        attempts:
          $ref: "#/components/schemas/ListWebhooksResponse_attempts"
        created_at:
          type: number
          description: Timestamp for the creation of the webhook. Unix time.
        data:
          type: object
          description: The data section of the webhook itself.
        last_attempt_at:
          type: number
          description: Timestamp of the last attempt at sending the webhook. Unix
            time.
        next_attempt_at:
          type: number
          description: Timestamp of the next attempt at sending the webhook. Unix
            time.
        status:
          type: string
          description: "Status of the webhook. One of the following: <BR> * **NEW**\
            \ (new) - The webhook was created and has not yet been sent successfully.\
            \ <BR> * **CLO** (closed) - The webhook was sent successfully.<BR> * **ERR**\
            \ (error) - Attempts were made to send the webhook, but the maximum number\
            \ of retries was reached. The automatic retry process failed. The webhook\
            \ was not sent. <BR> * **RET** (retried) - The webhook was resent."
        token:
          type: string
          description: ID of the webhook. String starting with **wh_**.
        type:
          type: number
          description: Internal name of the webhook type.
    ResendWebhookResponse:
      type: object
      properties:
        attempts:
          $ref: "#/components/schemas/ListWebhooksResponse_attempts"
        created_at:
          type: number
          description: Timestamp for the creation of the webhook. Unix time.
        data:
          type: object
          description: The data section of the webhook itself.
        last_attempt_at:
          type: number
          description: Timestamp of the last attempt at sending the webhook. Unix
            time.
        next_attempt_at:
          type: number
          description: Timestamp of the next attempt at sending the webhook. Unix
            time.
        status:
          type: string
          description: "Status of the webhook. One of the following: <BR> * **NEW**\
            \ (new) - The webhook was created and has not yet been sent successfully.\
            \ <BR> * **CLO** (closed) - The webhook was sent successfully.<BR> * **ERR**\
            \ (error) - Attempts were made to send the webhook, but the maximum number\
            \ of retries was reached. The automatic retry process failed. The webhook\
            \ was not sent. <BR> * **RET** (retried) - The webhook was resent."
    ListCountriesResponse:
      type: object
      properties:
        languages:
          $ref: "#/components/schemas/ListCountriesResponse_languages"
    ListCurrenciesResponse:
      type: object
      properties:
        code:
          type: string
          description: Three-letter ISO 4217 alphabetic code for the currency.
        digits_after_decimal_separator:
          type: string
          description: Number of digits for the minor currency unit.
        name:
          type: string
          description: Name of the currency in English.
        numeric_code:
          type: string
          description: ISO 4217 numeric code for the currency.
        symbol:
          type: string
          description: "Unicode symbol for the currency. If there is no official Unicode\
            \ symbol, this field contains the string **undefined**."
    ListSupportedLanguagesResponse:
      type: object
      properties:
        languages:
          $ref: "#/components/schemas/ListSupportedLanguagesResponse_languages"
    CustomerDiscount:
      type: object
      properties:
        coupon:
          $ref: "#/components/schemas/Coupon"
        customer:
          type: string
          description: ID of the Customer object that the discount applies to. String
            starting with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with dis_. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        subscription:
          type: string
          description: ID of the Subscription object that the discount applies to.
            String starting with sub_. Response only.
          example: sub_199e8c92ec0ec2bcbe56740042639d6e
        valid:
          type: boolean
          description: Indicates whether the discount can be used. Response only.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process - 1. Create Coupon, which returns a coupon ID. 2. Add\
        \ the coupon ID to the coupon field of the customer with Create Customer or\
        \ Update Customer."
      nullable: true
    SubscriptionDiscount:
      type: object
      properties:
        coupon:
          $ref: "#/components/schemas/Coupon"
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with dis_. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        subscription:
          type: string
          description: ID of the Subscription object that the discount applies to.
            String starting with sub_. Response only.
          example: sub_199e8c92ec0ec2bcbe56740042639d6e
        valid:
          type: boolean
          description: Indicates whether the discount can be used. Response only.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process - 1. Create Coupon, which returns a coupon ID. 2. Add\
        \ the coupon ID to the coupon field of the customer with Create Customer or\
        \ Update Customer."
      nullable: true
    EntityType:
      type: string
      enum:
      - company
      - individual
    EwalletTransactionDetails:
      type: object
      properties:
        id:
          type: string
          description: ID of the transaction. String starting with **wt_** or UUID.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        amount:
          type: number
          description: "Amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 4217:2015."
        destination_balance_type:
          type: string
          description: Type of the currency account balance of the wallet receiving
            the money.
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        type:
          type: string
          description: Type of transaction
        subtype:
          type: string
          description: Sub type of the transaction
        balance_type:
          type: string
          description: Balance type affected by the transaction. One of the following
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        balance:
          type: number
          description: The updated wallet balance after successful completion of the
            transaction.
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        metadata:
          type: object
        reason:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        status:
          type: string
          description: Status of the transaction* **CAN** - Canceled. The transferor
            canceled the transfer.<BR>* **CLO** - Closed. The transferee accepted
            the funds.<BR>* **DEC** - Declined. The transferee rejected the transfer.<BR>*
            **EXP** - Expired. The transferee did not respond before the transfer
            expired.<BR>* **HLD** - Hold. Rapyd Protect is putting this transfer on
            hold and reviewing it.<BR>* **PEN** - Pending. Waiting for the transferee
            to accept.<BR>* **REJ** - Rejected. Rapyd Protect has rejected this transfer.
          enum:
          - CAN
          - CLO
          - DEC
          - EXP
          - HLD
          - PEN
          - REJ
    EwalletTransaction:
      type: object
      properties:
        metadata:
          type: object
        amount:
          type: number
          description: "Amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 4217:2015."
        balance:
          type: number
          description: The updated wallet balance after successful completion of the
            transaction.
        balance_type:
          type: string
          description: Balance type affected by the transaction. One of the following
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        destination_balance_type:
          type: string
          description: The destination balance type when funds are transferred from
            one balance to another within the wallet.
          nullable: true
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**. Response only.
          nullable: true
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with wt_ or UUID.
        reason:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        source_balance_type:
          type: string
          description: The source balance type when funds are transferred from one
            balance to another within the wallet
          nullable: true
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
          nullable: true
        status:
          type: string
          description: Status of the transaction.<BR>* **CAN** - Canceled. The transferor
            canceled the transfer.<BR>* **CLO** - Closed. The transferee accepted
            the funds.<BR>* **DEC** - Declined. The transferee rejected the transfer.<BR>*
            **EXP** - Expired. The transferee did not respond before the transfer
            expired.<BR>* **HLD** - Hold. Rapyd Protect is putting this transfer on
            hold and reviewing it.<BR>* **PEN** - Pending. Waiting for the transferee
            to accept.<BR>* **REJ** - Rejected. Rapyd Protect has rejected this transfer.
          enum:
          - CAN
          - CLO
          - DEC
          - EXP
          - HLD
          - PEN
          - REJ
        type:
          type: string
          description: "Type of transaction. See [Transaction Types](https://docs.rapyd.net/en/transaction-types.html)"
        subtype:
          type: number
          description: Subtype of the transaction.
        action_data:
          type: object
    EwalletTransactionP2PAdditionlData:
      type: object
      properties:
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with ewallet_.
          nullable: true
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            ewallet_. Response only.
          nullable: true
    Ewallet:
      type: object
      properties:
        accounts:
          type: array
          description: ""
          items:
            $ref: "#/components/schemas/Account"
        category:
          type: string
          description: Indicates the type of client wallet
          enum:
          - collect
          - disburse
          - card_authorization
          - general
        cnls_partner_query_reference:
          type: string
          description: Value of the `partner_query_reference` parameter used as the
            query request ID in the Card Network Lookup Service (CNLS). See 'Retrieve
            Query Results'. Relevant to Rapyd Platform.
        contacts:
          $ref: "#/components/schemas/Ewallet_contacts"
        email:
          type: string
          description: Email address of the wallet owner. Response only. Deprecated.
        ewallet_reference_id:
          type: string
          description: Wallet ID defined by the customer or end user. Must be unique.
        first_name:
          type: string
          description: First name of the wallet owner.
        id:
          type: string
          description: Unique identifier of the wallet object. String starting with
            **ewallet_**.
        last_name:
          type: string
          description: Last name of the wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
        phone_number:
          type: string
          description: Phone number of the wallet owner in E.164 format. Response
            only. Deprecated.
        status:
          type: string
          description: Status of the wallet
          enum:
          - ACT
          - DIS
        type:
          type: string
          description: Type of wallet.
          enum:
          - company
          - person
          - client
        verification_status:
          type: string
          description: Result of the verification check.
    Field:
      type: object
      properties:
        code:
          type: string
          description: Three-letter alphabetic ISO 4217 code for the official currency
            used in the country.
        is_required:
          type: boolean
          description: Whether the field is always required for using the payment
            method
        is_updatable:
          type: boolean
          description: Indicates whether the field can be updated with Update Payment
            Method
        instructions:
          type: string
        name:
          type: string
          description: Name of the currency in English.
        numeric_code:
          type: string
          description: Three-letter ISO numeric 4217 code for the currency.
        type:
          type: string
          enum:
          - boolean
          - number
          - string
          - object
        regex:
          type: string
          description: A regular expression that defines the format when type is string.
        conditions:
          type: array
          description: "Defines specific conditions when a field is required for a\
            \ payment method. When the conditions defined by conditions are met, the\
            \ field is required even though the value of `is_required` is **false**."
          items:
            $ref: "#/components/schemas/Field_conditions"
        description:
          type: string
          description: Description of the field.
      description: Field Object
    FxFee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
          enum:
          - net
          - gross
        value:
          type: number
          description: The amount of the fee. Percentage.
          example: 2.5
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
    HostedBeneficiaryTokenResponse:
      type: object
      properties:
        beneficiary_country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            beneficiaryâ€™s bank account. The two-letter prefix of the payout method
            type matches the beneficiary country code.
          example: FR
        beneficiary_currency:
          type: string
          description: Currency accepted by the beneficiaryâ€™s bank account. Three-letter
            ISO 4217 code.
          example: EUR
        beneficiary_entity_type:
          type: string
          description: "Type of entity for the beneficiary. One of the following:"
          enum:
          - company
          - individual
        beneficiary_extended_fields:
          type: boolean
          description: "When the value is **true**, the hosted tokenization page displays\
            \ additional required fields.<BR> * Additional required fields when `beneficiary_entity_type`\
            \ is **individual**: `address`, `city`, `country`, `date_of_birth`, `first_name`,\
            \ `gender`, `identification_type`, `identification_value`, `last_name`,\
            \ `nationality`. <BR> * Additional required fields when `beneficiary_entity_type`\
            \ is **company**: `address`, `city`, `company_name`, `country`, `country_of_incorporation`,\
            \ `date_of_incorporation`, `identification_type`, `identification_value`.<BR>\
            \ For more information on the additional required fields, see 'Create\
            \ Extended Beneficiary'.<BR> **Note**: Currently only available in the\
            \ sandbox."
          enum:
          - true
          - false
        beneficiary_id:
          type: string
          description: ID of the beneficiary. String starting with **beneficiary_**.
        beneficiary_optional_fields:
          type: array
          description: Additional information about the beneficiary.
          items:
            $ref: "#/components/schemas/HostedBeneficiaryTokenResponse_beneficiary_optional_fields"
        beneficiary_validated:
          type: boolean
          description: Indicates whether the beneficiary has been validated.
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        category:
          type: string
          description: "The category of payout method. One of the following: <BR>\
            \ * **bank**<BR> * **card** - US only."
          enum:
          - bank
          - card
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the beneficiaryâ€™s
            country. The two-letter prefix of the payout method type must match the
            beneficiary country code.
        currency:
          type: string
          description: Currency accepted by the beneficiaryâ€™s bank account. Three-letter
            ISO 4217 code.
        entity_type:
          type: string
          description: "Type of entity for the beneficiary. One of the following:"
          enum:
          - company
          - individual
        expiration:
          type: string
          description: The page expiration date in Unix time.
        id:
          type: string
          description: ID of the beneficiary tokenization page. String starting with
            **hp_ben_**.The page expiration date in Unix time.
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'.<BR> * When this parameter\
            \ is null, the language of the user's browser is used.<BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        merchant_alias:
          type: string
          description: Client's name.
          example: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.<BR>\
            \ To configure this field, use the Client Portal."
        merchant_customer_support:
          type: array
          description: "Contains details of the clientâ€™s customer support. To configure\
            \ these fields, use the Client Portal."
          items:
            $ref: "#/components/schemas/HostedBeneficiaryTokenResponse_merchant_customer_support"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo.<BR> To configure this\
            \ field, use the Client Portal."
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. <BR> **Range**: 1 minute to 30 days."
        payout_currency:
          type: string
          description: Currency accepted by the beneficiaryâ€™s bank account. Three-letter
            ISO 4217 code.
        payout_method_type:
          type: string
          description: The payout method type selected by the customer. The two-letter
            prefix must match the beneficiary country code.
        payout_method_types_exclude:
          type: array
          description: List of payout methods that are excluded from display on the
            beneficiary tokenization page.
          items:
            type: object
        payout_method_types_include:
          type: array
          description: Array of strings. List of payout methods that are displayed
            on the beneficiary tokenization page.
          items:
            type: object
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        sender_country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the senderâ€™s country.
        sender_currency:
          type: string
          description: Currency paid from the senderâ€™s wallet. Three-letter ISO 4217
            code.
        sender_entity_type:
          type: string
          description: Type of entity for the sender. One of the following:.
          enum:
          - company
          - individual
        status:
          type: string
          description: Status of the hosted page. One of the following:<BR> * **NEW**
            - The hosted page was created.<BR>* **DON** - Done. The card was added
            to the customer profile.<BR>* **EXP** - The hosted page expired.<BR>*
            **INP** - Creation of the payment is still in progress.<BR>* **DEC** -
            Rapyd Protect blocked the payment.
          enum:
          - NEW
          - DON
          - EXP
          - INP
          - DEC
        timestamp:
          type: string
          description: "Timestamp for the request to create the beneficiary tokenization\
            \ object page, in Unix time."
        tokenization_page:
          type: string
          description: ID of the beneficiary tokenization page. String starting with
            **hp_ben_**.
    Limit:
      type: object
      properties:
        amount:
          type: number
          description: The amount of the limit.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency of an existing
            account.
        type:
          type: string
          description: The limit type.
        updated_at:
          type: integer
    MassPayoutResponse:
      type: object
      properties:
        created_at:
          type: number
          description: "Time of creation of the batch operation, in Unix time (seconds)."
        id:
          type: string
          description: ID of the batch operation. String starting with **batch_**.Three-letter
            ISO 4217 code for the currency of an existing account.
        original_name:
          type: string
          description: Filename of the uploaded batch file.
        status:
          type: string
          description: Status of the batch operation - "NEW".
        type:
          type: string
          description: Batch operation type - "mass_payout_pci".
    gender:
      type: string
      description: Gender of the individual. Required when `entity_type` is **individual**.
      enum:
      - male
      - female
      - other
      - not_applicable
    VirtualAccountTransactionResponse:
      type: object
      description: virtual account transaction.
      allOf:
      - $ref: "#/components/schemas/IssuingTransactionFxData"
      - properties:
          account_id:
            type: string
            description: ID of the virtual bank account.
          account_id_type:
            type: string
            description: Type of the virtual account number.
          amount:
            type: number
            description: "Amount of the transaction, in units defined in currency."
          created_at:
            type: integer
            description: "Timestamp for the transaction, in Unix time"
          currency:
            type: string
            description: Currency of the account. Three-letter ISO 4217 code.
          ewallet:
            type: string
            description: ID of the Rapyd Wallet that is attached to the virtual account.
              String starting with ewallet_.
          id:
            type: string
            description: ID of the transaction. String starting with isutran_.
    IssuingTransactionFxData:
      type: object
      properties:
        original_amount:
          type: number
          description: "The amount sent by the sender to the virtual account, in units\
            \ of the currency defined in original_currency."
        original_currency:
          $ref: "#/components/schemas/Currency_1"
        fx_rate:
          type: number
          description: Currency conversion rate for the transaction.
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
    Payout:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the payout, in units defined by payout_currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015. Same as payout_amount. Response\
            \ only."
          example: 1000
        beneficiary:
          $ref: "#/components/schemas/Beneficiary"
        beneficiary_country:
          $ref: "#/components/schemas/Country_1"
        created_at:
          type: integer
          description: "Time of creation of the payout, in Unix time. Response only."
        description:
          type: string
          description: Description of the payout transaction.
        error:
          type: string
          description: Indicates the error code of the last unsuccessful operation
            on the Payout object.
          nullable: true
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive
            the funds.
        ewallets:
          type: array
          description: "An array of one object, which contains the following fields:\
            \ * ewallet_id - The ID of the wallet that the money is transferred from,\
            \ a string starting with **ewallet_**. * amount - Amount of the transaction\
            \ in currency units defined in currency. * percent - A decimal number\
            \ representing a percentage of the total payout. Response only."
          items:
            $ref: "#/components/schemas/Payout_ewallets"
        expiration:
          type: number
          description: "Determines the day the payout expires, in Unix time. The payout\
            \ must be completed before the start of this day. Relevant to cash payout\
            \ methods where the is_expirable field is true in the response to List\
            \ Payout Method Types."
          nullable: true
          example: 1607941348
        fx_rate:
          type: number
          description: Currency conversion rate for the payout. Decimal. Response
            only.
        gc_error_code:
          type: string
          description: Reserved. Response only.
          nullable: true
        id:
          type: string
          description: ID of the payout. String starting with **payout_**.
          example: payout_548969fc5a0bf89da3cec70a1529338c
        identifier_type:
          type: string
          description: Reserved. Response only.
          nullable: true
        identifier_value:
          type: string
          description: Reserved. Response only.
          nullable: true
        instructions:
          type: array
          description: |
            Describes how the customer collects the payout. Contains the following fields: * name - Short description of the instructions. * steps - A 'steps' object containing a list of steps for the customer to take. Each step is named stepN, where N is an integer.
          items:
            $ref: "#/components/schemas/Payout_instructions"
        instructions_value:
          type: object
          description: "Additional information from the merchant. For example, the\
            \ merchant's instructions and transaction number that must be presented\
            \ for collecting the payout."
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          nullable: true
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        paid_amount:
          type: number
          description: "Cumulative amount received by the beneficiary, in units defined\
            \ by payout_currency. Response only."
          example: 1000
        paid_at:
          type: string
          description: "Time of the payout, in Unix time. Response only."
          nullable: true
          example: "1607941348"
        payout_currency:
          $ref: "#/components/schemas/Currency"
        payout_fees:
          $ref: "#/components/schemas/PayoutFees"
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country computed.
          example: us_general_bank
        payout_type:
          type: string
          description: The type of the payout method.
          example: bank
          enum:
          - card
          - cash
          - ewallet
          - bank
          - rapyd_ewallet
        sender:
          $ref: "#/components/schemas/Sender"
        sender_amount:
          type: number
          description: "Amount that the sender is paying in units of the currency\
            \ defined in sender_currency. \nThis amount remains the same regardless\
            \ of FX fees. Required when payout_amount is not used. Decimal.\n"
        sender_country:
          $ref: "#/components/schemas/Country"
        sender_currency:
          $ref: "#/components/schemas/Currency"
        statement_descriptor:
          type: string
          description: A statement that includes the reason for the payout. Limited
            to 35 characters.
        status:
          $ref: "#/components/schemas/PayoutStatus"
    PayoutFees:
      type: object
      properties:
        fx_fee:
          $ref: "#/components/schemas/FxFee"
        gross_fees:
          type: number
          description: "The total gross fees for the transaction, in units defined\
            \ by `currency_code`."
          example: 4.23
        net_fees:
          type: number
          description: "The total net fees for the transaction, in units defined by\
            \ merchant_requested_currency."
          example: 0
        transaction_fee:
          $ref: "#/components/schemas/TransactionFee"
      nullable: true
    PayoutMethodType:
      type: object
      properties:
        amount_range_per_currency:
          $ref: "#/components/schemas/PayoutMethodType_amount_range_per_currency"
        beneficiary_country:
          $ref: "#/components/schemas/Country"
        beneficiary_entity_types:
          type: array
          description: A list of the beneficiary entity types supported by this payout
            method.
          example:
          - company
          - individual
          items:
            $ref: "#/components/schemas/EntityType"
        category:
          $ref: "#/components/schemas/Category"
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive
            the funds.
        image:
          type: string
          description: URL of an image that the merchant can use to represent the
            payout method.
        is_cancelable:
          type: boolean
          description: Indicates whether the payout can be canceled. Relevant when
            `category` is **cash**. One of the following values:<BR>* **0** - Not
            cancelable<BR>* **1** - cancelable
        is_expirable:
          type: boolean
          description: Indicates whether the payout expires if not completed. Relevant
            when `category` is **cash**. One of the following values<BR>* **0** -
            Not expirable<BR>* **1** - expirable
        is_location_specific:
          type: boolean
          description: Indicates whether the payout must be made at a specific physical
            location. Relevant when `category` is **cash**.<BR>One of the following
            values:<BR>* **0** - Not location specific<BR>* **1** - location specific
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when `is_expirable` is **true**.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when `is_expirable` is **true**.
        name:
          type: string
          description: Payout method name.
        payout_currencies:
          type: array
          description: A list of the currencies supported by this payout method. Three-letter
            ISO 4217 code. Uppercase. Response only.
          example:
          - USD
          items:
            $ref: "#/components/schemas/Currency"
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code.
          example: us_general_bank
        sender_country:
          $ref: "#/components/schemas/Country"
        sender_currencies:
          type: array
          description: List of currencies that the sender is paying with. Currency
            consists of a three-letter ISO 4217 code.
          example:
          - USD
          items:
            $ref: "#/components/schemas/Currency"
        sender_entity_types:
          type: array
          description: A list of the sender entity types supported by this payout
            method. One or more of the following:<BR>* **company**<BR>* **individual**
          example:
          - company
          - individual
          items:
            $ref: "#/components/schemas/EntityType"
        status:
          type: boolean
          description: Indicates whether the payout method is currently available.
            One of the following values:<BR>* **0** - Not available<BR>* **1** - Available
    PayoutMethodTypeDetails:
      type: object
      properties:
        batch_file_header:
          type: string
          description: Contains a comma-separated list of the headers required for
            creating a batch file. Relevant for creating a mass payout through the
            Client Portal.
        beneficiary_country:
          $ref: "#/components/schemas/Country"
        beneficiary_entity_type:
          $ref: "#/components/schemas/EntityType"
        beneficiary_required_fields:
          type: array
          description: Lists all the beneficiary required fields for payout method
          items:
            $ref: "#/components/schemas/PayoutRequiredFields"
        image:
          type: string
          description: URL of an image that the merchant can use to represent the
            payout method.
        is_cancelable:
          type: boolean
          description: "Indicates whether the payout can be canceled. Relevant when\
            \ category is cash. One of the following values: <BR>* **0** - Not cancelable.<BR>*\
            \ **1** - cancelable."
        is_expirable:
          type: boolean
          description: "Indicates whether the payout expires if not completed. Relevant\
            \ when category is cash. One of the following values: <BR>* **0** - Not\
            \ expirable.<BR>* **1** - expirable."
        is_location_specific:
          type: boolean
          description: Indicates whether the payout must be made at a specific physical
            location. Relevant when category is cash. One of the following values:<BR>*
            **0** - Not location specific.<BR>* **1** - location specific.
        is_online:
          type: boolean
          description: "Indicates whether the payout is made automatically, without\
            \ any action by the beneficiary."
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            `currency`. Decimal number.
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when `is_expirable` is **true**.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            `currency`. Decimal number.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when `is_expirable` is **true**.
        payout_currency:
          type: string
          description: Currency received by the beneficiary. Three-letter ISO 4217
            code.
        payout_method_type:
          type: string
          description: The type of payout method. Required when `default_payout_method_type`
            is not used.
          example: us_general_bank
        payout_options:
          type: array
          description: Lists all the payout options for payout method.
          items:
            $ref: "#/components/schemas/PayoutRequiredFields"
        sender_country:
          type: string
          description: Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code.
            * means 'all countries'.
        sender_currency:
          type: string
          description: Currency that the sender is paying with. Three-letter ISO 4217
            code. * means 'all currencies'.
        sender_entity_type:
          $ref: "#/components/schemas/EntityType"
        sender_required_fields:
          type: array
          description: Lists all the sender required fields for payout method
          items:
            $ref: "#/components/schemas/PayoutRequiredFields"
        status:
          type: integer
          description: Indicates whether the payout method is currently available.
            One of the following values:<BR>* **0** - Not available.<BR>* **1** -
            Available.
    PayoutReturned:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the payout, in units defined by payout_currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015. Same as payout_amount. Response\
            \ only."
          example: 1000
        beneficiary:
          $ref: "#/components/schemas/Beneficiary"
        beneficiary_country:
          $ref: "#/components/schemas/Country"
        created_at:
          type: integer
          description: "Time of creation of the payout, in Unix time. Response only."
        description:
          type: string
          description: Description of the payout transaction.
        error:
          type: string
          description: Indicates the error code of the last unsuccessful operation
            on the Payout object.
          nullable: true
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive
            the funds.
        ewallets:
          type: array
          description: "An array of one object, which contains the following fields:\
            \ * ewallet_id - The ID of the wallet that the money is transferred from,\
            \ a string starting with **ewallet_**. * amount - Amount of the transaction\
            \ in currency units defined in currency. * percent - A decimal number\
            \ representing a percentage of the total payout. Response only."
          items:
            $ref: "#/components/schemas/Payout_ewallets"
        expiration:
          type: number
          description: "Determines the day the payout expires, in Unix time. The payout\
            \ must be completed before the start of this day. Relevant to cash payout\
            \ methods where the is_expirable field is true in the response to List\
            \ Payout Method Types."
          nullable: true
          example: 1607941348
        fx_rate:
          type: number
          description: Currency conversion rate for the payout. Decimal. Response
            only.
        gc_error_code:
          type: string
          description: Reserved. Response only.
          nullable: true
        id:
          type: string
          description: ID of the payout. String starting with **payout_**.
          example: payout_548969fc5a0bf89da3cec70a1529338c
        identifier_type:
          type: string
          description: Reserved. Response only.
          nullable: true
        identifier_value:
          type: string
          description: Reserved. Response only.
          nullable: true
        instructions:
          type: array
          description: |
            Describes how the customer collects the payout. Contains the following fields: * name - Short description of the instructions. * steps - A 'steps' object containing a list of steps for the customer to take. Each step is named stepN, where N is an integer.
          items:
            $ref: "#/components/schemas/Payout_instructions"
        instructions_value:
          type: object
          description: "Additional information from the merchant. For example, the\
            \ merchant's instructions and transaction number that must be presented\
            \ for collecting the payout."
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          nullable: true
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        paid_amount:
          type: number
          description: "Cumulative amount received by the beneficiary, in units defined\
            \ by payout_currency. Response only."
          example: 1000
        paid_at:
          type: string
          description: "Time of the payout, in Unix time. Response only."
          nullable: true
          example: "1607941348"
        payout_currency:
          $ref: "#/components/schemas/Currency"
        payout_fees:
          $ref: "#/components/schemas/PayoutFees"
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country computed.
          example: us_general_bank
        payout_type:
          type: string
          description: The type of the payout method.
          example: bank
          enum:
          - card
          - cash
          - ewallet
          - bank
          - rapyd_ewallet
        sender:
          $ref: "#/components/schemas/Sender"
        sender_amount:
          type: number
          description: "Amount that the sender is paying in units of the currency\
            \ defined in sender_currency. \nThis amount remains the same regardless\
            \ of FX fees. Required when payout_amount is not used. Decimal.\n"
        sender_country:
          $ref: "#/components/schemas/Country"
        sender_currency:
          $ref: "#/components/schemas/Currency"
        statement_descriptor:
          type: string
          description: A statement that includes the reason for the payout. Limited
            to 35 characters.
        status:
          $ref: "#/components/schemas/PayoutReturnedStatus"
    PayoutStatus:
      type: string
      enum:
      - Created
      - Completed
      - Canceled
      - Rejected
      - Error
      - Confirmation
      - Expired
      - Returned
    PayoutRequiredFields:
      type: object
      properties:
        description:
          type: string
          description: Description of the field
        is_required:
          type: boolean
          description: Indicates whether the field is always required for using the
            payout method
        name:
          type: string
          description: Name of the field
        regex:
          type: string
          description: "A regular expression that defines the format when type is\
            \ string. Note: Rapyd uses a unique variant of the regex standard. See\
            \ [note](https://docs.rapyd.net/en/get-payment-method-required-fields.html)."
        type:
          type: string
          description: Indicates datatype of the field
          enum:
          - boolean
          - number
          - string
    PayoutReturnedStatus:
      type: string
      enum:
      - Returned
      - Created
      - Completed
      - Canceled
      - Rejected
      - Error
      - Confirmation
      - Expired
    PutFundsOnHoldResponse:
      type: object
      properties:
        amount:
          type: number
          description: " * **Transactions** - Amount of the transaction, in units\
            \ of the currency defined in `currency`. Decimal, including the correct\
            \ number of decimal places for the currency exponent, as defined in ISO\
            \ 4217:2015.<BR> * **Wallet Account Operations** - Amount of the account\
            \ limit."
          example: 100.0
        currency_code:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        destination_account_id:
          type: string
          description: ID of the wallet owner's user. UUID.
        destination_balance_type:
          type: string
          description: Balance type that the funds are transferred to. See 'Wallet
            Balance Types'.
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        destination_transaction_id:
          type: string
          description: ID of the transaction with regard to the destination. String
            starting with **wt_**.
        destination_user_profile_id:
          type: string
          description: ID of the wallet owner's user. UUID.
        id:
          type: string
          description: ID of the transaction. UUID.
        source_balance_type:
          type: string
          description: Balance type that the funds are transferred from. See 'Wallet
            Balance Types'. See 'Wallet Balance Types'.
          enum:
          - available_balance
          - on_hold_balance
          - received_balance
          - reserve_balance
        source_transaction_id:
          type: object
          description: ID of the transaction with regard to the source. String starting
            with **wt_**.
        source_user_profile_id:
          type: string
          description: ID of the wallet owner's user. UUID.
    Sender:
      type: object
      properties:
        account_number:
          type: string
          description: Bank account number of sender.
          example: "10285730135312349"
        additional_data:
          type: object
          description: Additional data required by the payout method. Object..
        additional_last_name:
          type: string
          description: The person's second last name.
        address:
          type: string
          description: The address of the sender.
        bank_code:
          type: string
          description: Domestic identifier of the bank.
        bank_name:
          type: string
          description: Name of the bank.
        beneficiary_relationship:
          type: string
          description: "When the beneficiary is not a relative of the sender, the\
            \ relationship should be specified as client or non-relative."
        city:
          type: string
          description: City where the sender is located.
          example: New York
        company_name:
          type: string
          description: Name of the sender company. Relevant when entity_type is company.
          example: ABC
        country:
          $ref: "#/components/schemas/Country"
        currency:
          $ref: "#/components/schemas/Currency"
        date_of_birth:
          type: string
          description: The date of birth of the sender. Relevant when entity_type
            is individual.
          example: 18/03/1990
        date_of_incorporation:
          type: string
          description: Date of incorporation of the corporation.
          example: 18/03/2010
        email:
          type: string
          description: The person's email address.
        entity_type:
          $ref: "#/components/schemas/EntityType"
        first_name:
          type: string
          description: First name of the sender. Relevant when `entity_type` is **individual**.
          example: Scott
        id:
          type: string
          description: ID of the Sender object. String starting with **sender_**.
            Response only.
          example: sender_216cf9141fba698e7dc2729d1f439c1b
        id_date_of_issue:
          type: string
          description: The date of issuance of the person's identification document.
        id_expiry:
          type: string
          description: The expiration date of the person's identification document.
        id_issue_authority:
          type: string
          description: The government agency that issued the person's identification
            document.
        id_issue_location:
          type: string
          description: The location where the person's identification document was
            issued.
        identification_type:
          type: string
          description: "Type of identification document for the sender. When entity_type\
            \ is company, this field must be company_registered_number. When entity_type\
            \ is individual, one of the following values: \n* drivers_license \n*\
            \ identification_id \n* international_passport \n* residence_permit* social_security\
            \ \n* work_permit\n"
          example: drivers_license
        identification_value:
          type: string
          description: identification number on the document mentioned in `identification_type`.
          example: HJKOSN2435460
        last_name:
          type: string
          description: Last name of the sender. Relevant when `entity_type` is individual.
          example: Williams
        merchant_reference_id:
          type: string
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
        middle_name:
          type: string
          description: The person's middle name.
        mobile_number:
          type: string
          description: Mobile phone number in E.164 format.
        name:
          type: string
          description: Name of the sender. Relevant when `entity_type` is company.
          example: Scott Williams
        nationality:
          type: string
          description: The person's nationality.
          example: US
        occupation:
          type: string
          description: The person's occupation.
        phone_country_code:
          type: string
          description: The country code of the person's phone.
        phone_number:
          type: string
          description: Phone number in E.164 format.
        postcode:
          type: string
          description: Postal code of the sender.
          example: "110005"
        province:
          type: string
          description: Province portion of the address.
        purpose_code:
          type: string
          description: Reason for the payout.
        source_of_income:
          type: string
          description: The person's source of income.
        state:
          type: string
          description: State where the sender is located.
          example: New York
        suburb:
          type: string
          description: District of the sender's or beneficiary's city.
        tax_id:
          type: string
          description: Tax identification number.
    setPINResponse:
      type: object
      properties:
        activated_at:
          type: number
          description: "Time that the card was activated, in Unix time."
        assigned_at:
          type: string
          description: "Time that the card was assigned to a cardholder, in Unix time."
        bin:
          type: string
          description: Bank Identifier Number for the institution issuing the card.
        blocked_reason:
          type: string
          description: Reason for blocking the card.
          enum:
          - blocked_reversible
          - canceled
          - compliance
          - locked_incorrect_pin
          - migrated
          - none
          - other
          - reissued
          - suspected_fraud
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**.
        card_tracking_id:
          type: string
          description: Reserved.
        country_iso_alpha_2:
          type: string
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code.
        created_at:
          type: number
          description: "Time of creation of the issued card object, in Unix time."
        cvv:
          type: number
          description: Card security code. only.
        expiration_month:
          type: string
          description: Expiration month of the card. Two digits. Relevant when the
            card issuer supports it for the country. only.
        expiration_year:
          type: string
          description: Expiration year of the card. Two digits. Relevant when the
            card issuer supports it for the country.
        ewallet_contact:
          type: string
          description: "Describes the wallet contact that the card is assigned to.\
            \ String starting with **cont_**. For details about the fields of the\
            \ 'contact' object, see 'Add Contact to Wallet'in online API reference."
        id:
          type: string
          description: ID of the issued card object. String starting with **ci_**.
        metadata:
          type: string
          description: A JSON object defined by the client.
        status:
          type: string
          description: "Status of the card. One of the following:<BR>* **ACT** - Active.<BR>\
            \ * **BLO** - Blocked.<BR>* **IMP** - Imported in bulk, but not yet personalized.<BR>*\
            \ **INA** - Inactive.<BR>"
          enum:
          - ACT
          - BLO
          - IMP
          - INA
        sub_bin:
          type: string
          description: Two-digit code.
    SimulateCardTransactionAuthorizationRequestEEA:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the transaction, in units defined in `currency`."
        auth_response:
          $ref: "#/components/schemas/SimulateCardTransactionAuthorizationRequestEEA_auth_response"
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_transaction_id:
          type: string
          description: ID of the transaction. String starting with **cit_**.
        currency_code:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code.Currency
            of the refund transaction. Three-letter ISO 4217 code.
        fx_rate:
          type: string
          description: The exchange rate. Relevant to capture (clearing) transactions.
        id:
          type: string
          description: ID of the issued card transaction. String starting with **cit_**.
        issuing_txn_type:
          type: string
          description: Type of transaction on the issued card.
          enum:
          - ADJUSTMENT
          - ATM_FEE
          - CREDIT
          - REFUND
          - REVERSAL
          - SALE
        last4:
          type: string
          description: Last 4 digits of the card number.
        merchant_category_code:
          type: string
          description: "Four-digit merchant category code (MCC) of the initiator of\
            \ the transaction, as defined in ISO 18245."
        merchant_name_location:
          type: string
          description: Name and location of the merchant.
        original_transaction_id:
          type: string
          description: ID of the original issued card transaction. String starting
            with **cit_**.
        original_txn_amount:
          type: number
          description: "Original amount for FX transactions, when `currency` is different\
            \ from `original_txn_currency`."
        original_txn_currency:
          type: string
          description: Original currency in an FX transaction.
        pos_entry_mode:
          type: string
          description: The mode of entry of the transaction at the point of sale.
          enum:
          - adjustment
          - ecommerce
          - emv
          - emv_standin
          - magstripe
          - manual_entered
          - network_token
          - nfc
          - 3ds_ecommerce
        retrieval_reference_number:
          type: string
          description: Retrieval reference number for the card transaction.
        systems_trace_audit_number:
          type: string
          description: Reserved.
        wallet_transaction_id:
          type: string
          description: ID of the wallet transaction String starting with **wt_**.
    SimulateClearingCardTransactionEEA:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the transaction, in units defined in `currency`."
        auth_response:
          $ref: "#/components/schemas/SimulateCardTransactionAuthorizationRequestEEA_auth_response"
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_transaction_id:
          type: string
          description: ID of the transaction. String starting with **cit_**.
        currency_code:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code.Currency
            of the refund transaction. Three-letter ISO 4217 code.
        fx_rate:
          type: string
          description: The exchange rate. Relevant to capture (clearing) transactions.
        id:
          type: string
          description: ID of the issued card transaction. String starting with **cit_**.
        is_remote_auth:
          type: boolean
          description: Indicates whether remote authorization is enabled.
        merchant_category_code:
          type: string
          description: "Four-digit merchant category code (MCC) of the initiator of\
            \ the transaction, as defined in ISO 18245."
        merchant_identification_code:
          type: string
          description: Reserved.
        merchant_name_location:
          type: string
          description: Name and location of the merchant. Maximum 40 characters.
        remote_auth_endpoint:
          type: string
          description: The URL where the remote authorization is sent.
        remote_auth_response:
          $ref: "#/components/schemas/SimulateClearingCardTransactionEEA_remote_auth_response"
        transaction_amount:
          type: number
          description: "Amount debited from the Rapyd Wallet. Decimal, including the\
            \ correct number of decimal places for the currency exponent, as defined\
            \ in ISO 2417:2015."
        transaction_currency_code:
          type: string
          description: "Original transaction currency, if different from the currency\
            \ credited to the Rapyd Wallet. Three-letter ISO 4217 code."
        txn_type:
          type: string
          description: Type of transaction.
          enum:
          - ADJUSTMENT
          - ATM_FEE
          - CREDIT
          - REFUND
          - REVERSAL
          - SALE
    SimulateCardTransactionAuthorizationReversalEEA:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the refund, in units defined in `currency`."
        auth_response:
          $ref: "#/components/schemas/SimulateCardTransactionAuthorizationRequestEEA_auth_response"
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        card_transaction_id:
          type: string
          description: ID of the transaction. String starting with **cit_**.
        currency_code:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code.Currency
            of the refund transaction. Three-letter ISO 4217 code.
        fx_rate:
          type: string
          description: The exchange rate. Relevant to capture (clearing) transactions.
        id:
          type: string
          description: ID of the issued card transaction. String starting with **cit_**.
        is_remote_auth:
          type: boolean
          description: Indicates whether remote authorization is enabled.
        merchant_category_code:
          type: string
          description: "Four-digit merchant category code (MCC) of the initiator of\
            \ the transaction, as defined in ISO 18245."
        merchant_identification_code:
          type: string
          description: Reserved.
        merchant_name_location:
          type: string
          description: Name and location of the merchant. Maximum 40 characters.
        remote_auth_endpoint:
          type: string
          description: The URL where the remote authorization is sent.
        remote_auth_response:
          $ref: "#/components/schemas/SimulateClearingCardTransactionEEA_remote_auth_response"
        transaction_amount:
          type: number
          description: "Amount debited from the Rapyd Wallet. Decimal, including the\
            \ correct number of decimal places for the currency exponent, as defined\
            \ in ISO 2417:2015."
        txn_type:
          type: string
          description: Type of transaction.
          enum:
          - ADJUSTMENT
          - ATM_FEE
          - CREDIT
          - REFUND
          - REVERSAL
          - SALE
    simulateBlockCardResponse:
      type: object
      properties:
        activated_at:
          type: number
          description: "Time that the card was activated, in Unix time."
        assigned_at:
          type: number
          description: "Time that the card was assigned to a cardholder, in Unix time."
        blocked_reason:
          type: string
          description: Reason for blocking the card.
          enum:
          - blocked_reversible
          - canceled
          - compliance
          - locked_incorrect_pin
          - migrated
          - none
          - other
          - reissued
          - suspected_fraud
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        country_iso_alpha_2:
          type: string
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code.
        created_at:
          type: number
          description: "Time of creation of the issued card object, in Unix time.\
            \ only."
        ewallet_contact:
          type: string
          description: "Describes the wallet contact that the card is assigned to.\
            \ String starting with **cont_**. For details about the fields of the\
            \ 'contact' object, see 'Add Contact to Wallet'."
        id:
          type: string
          description: ID of the issued card object. String starting with **ci_**.
        metadata:
          type: string
          description: A JSON object defined by the client.
        status:
          type: string
          description: "Status of the card. One of the following:<BR>* **ACT** - Active.<BR>\
            \ * **BLO** - Blocked.<BR>* **IMP** - Imported in bulk, but not yet personalized.<BR>*\
            \ **INA** - Inactive.<BR>"
          enum:
          - ACT
          - BLO
          - IMP
          - INA
    TransactionFee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
        fee_type:
          type: string
          description: "One of the following: \npercentage - A percentage of the transaction\
            \ amount. \nFor example, 5 percent is represented by value=5. absolute\
            \ - A fixed amount\n"
          example: absolute
        value:
          type: number
          description: "The amount of the fee. Decimal, including the correct number\
            \ of decimal places for the currency exponent, as defined in ISO 2417:2015.\
            \ If the amount is a whole number, use an integer and not a decimal."
          example: 2
      description: Describes the fee for processing the transaction.
    Transfer:
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
        created_at:
          type: number
          description: "Time the transaction was made, in Unix time."
        currency_code:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        destination_ewallet_id:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**. Response only.
        destination_phone_number:
          type: string
          description: "Phone number of the owner of the wallet receiving the money,\
            \ in E.164 format."
        destination_transaction_id:
          type: string
          description: ID of the transaction with regard to the destination. String
            starting with **wt_**.
        id:
          type: string
          description: ID of the transaction. String starting with **wt_** or UUID.
        metadata:
          type: object
          description: A JSON object defined by the client.
        response_metadata:
          type: object
          description: Metadata created with Set Transfer Response. Response only.
        source_ewallet_id:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
            Response only.
        source_transaction_id:
          type: string
          description: ID of the transaction with regard to the source. String starting
            with **wt_**.
        status:
          type: string
          description: < Status of the transaction. CAN - Canceled. The transferor
            canceled the transfer. CLO - Closed. The transferee accepted the funds.
            DEC - Declined. The transferee rejected the transfer. EXP - Expired. The
            transferee did not respond before the transfer expired. HLD - Hold. Rapyd
            Protect is putting this transfer on hold and reviewing it. PEN - Pending.
            Waiting for the transferee to accept. REJ - Rejected. Rapyd Protect has
            rejected this transfer.
          enum:
          - CAN
          - CLO
          - DEC
          - EXP
          - HLD
          - PEN
          - REJ
        transfer_response_at:
          type: number
          description: "Time of the Set Transfer Response operation, in Unix time.\
            \ Read-only."
        expiration:
          type: number
          description: "Determines the day the transfer expires, in Unix time. Acceptance\
            \ of the transfer must occur before the start of this day. Default is\
            \ 14 days after creation of the transfer."
    PaymentAmountRangePerCurrency:
      type: array
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      items:
        $ref: "#/components/schemas/PaymentAmountRangePerCurrency_inner"
    BinDetails:
      type: object
      properties:
        brand:
          type: string
        bin_number:
          type: string
        type:
          type: string
        issuer:
          type: string
        country:
          $ref: "#/components/schemas/Country_1"
        level:
          type: string
      description: "Bank Identification Number (BIN) details. Read-only. Object containing\
        \ the following fields - * bin_number - BIN number * country - The two-letter\
        \ ISO 3166-1 ALPHA-2 code for the country. Uppercase. * funding - Type of\
        \ card funding. One of the following [credit, debit, prepaid, unknown] * bank\
        \ - Name of the issuing bank. Relevant to cards"
    CardTokenResponse:
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Indicates whether the hosted page displays address fields\
            \ to fill in.<BR> * **true** - The address fields are displayed. <BR>\
            \ * **false** - The address fields are displayed only for country codes\
            \ **US**, **GB** and **CA**."
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
          default: "false"
        card_fields:
          $ref: "#/components/schemas/CardTokenResponse_card_fields"
        category:
          type: string
          description: "Category of payment method: **card**."
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.The two-letter ISO 3166-1 ALPHA-2 code
            for the country.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**.
        error_code:
          type: string
          description: Relevant error message and ID number of the error.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        id:
          type: string
          description: "ID of the card token hosted page, a string starting with **hp_card_**."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        merchant_alias:
          type: string
          description: Reserved.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal. See [Customizing Your\
            \ Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        merchant_customer_support:
          $ref: "#/components/schemas/MerchantCustomerSupport"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: string
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. Range: 1 minute to 30 days."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, **dk_visa_card**. For a list of payment methods, use []List\
            \ Payment Methods by Country](https://docs.rapyd.net/en/list-payment-methods-by-country.html)."
        payment_params:
          $ref: "#/components/schemas/CardTokenResponse_payment_params"
        redirect_url:
          type: string
          description: "URL of the hosted page that is shown to the customer.Contains\
            \ the following fields. When these fields do not include values, the user\
            \ is redirected to the hosted page, and a related status message appears\
            \ at the top of the page."
        status:
          type: string
          description: Status of the hosted page. One of the following:<BR> * **NEW**
            - The hosted page was created.<BR>* **DON** - Done. The card was added
            to the customer profile.<BR>* **EXP** - The hosted page expired.<BR>*
            **INP** - Creation of the payment is still in progress.<BR>* **DEC** -
            Rapyd Protect blocked the payment.
          enum:
          - NEW
          - DON
          - EXP
          - INP
          - DEC
    ClientDetailsObject:
      type: object
      properties:
        ip_address:
          type: string
          description: IP address of the customer.
        java_enabled:
          type: boolean
          description: Indicates whether the browser is enabled for Java.
        java_script_enabled:
          type: boolean
          description: Indicates whether the browser is enabled for JavaScript.
        language:
          type: string
          description: "The language the browser is configured for, as defined in\
            \ IETF BCP 47."
        screen_color_depth:
          type: integer
          description: "Indicates the screen color depth of the customer's browser,\
            \ in bits."
          enum:
          - 1
          - 4
          - 8
          - 15
          - 16
          - 24
          - 32
          - 48
        screen_height:
          type: integer
          description: "Height of the customer's screen, in pixels. 1-6 digits."
        screen_width:
          type: integer
          description: "Width of the customer's screen, in pixels. 1-6 digits."
        time_zone_offset:
          type: integer
          description: Difference in minutes between UTC and the customer's time zone.
            Positive or negative integer.
      description: Describes the fields in the client_details object in REST messages
        for payments. The `client_details` object describes the browser that the customer
        is using. The client collects this information and sends it as part of the
        Create Payment request. This information is used for processing the 3DS2 (3D
        Secure 2.0) of the customer. Note that Client Details information is not returned
        in the API response and it does not appear in any webhooks.
    CheckoutPageResponse:
      type: object
      allOf:
      - $ref: "#/components/schemas/HostedPageStatusBaseResponse"
      - $ref: "#/components/schemas/HostedPageAdditionalResponse"
      - $ref: "#/components/schemas/CheckoutUrlResponse"
    CheckoutUrlResponse:
      type: object
      properties:
        complete_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Finish**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        cancel_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
    Condition:
      type: object
      properties:
        description:
          type: string
          description: Description of the condition
        element_name:
          type: string
          description: "The name of a field, including the path. The field is the\
            \ first operand of the condition. The path starts with one of the following\
            \ - * payment - The field is a Create Payment body parameter. Not relevant\
            \ to the payment_method and payment_method_options objects. * payment.payment_method_type\
            \ - The field appears in the current Get Payment Method Required Fields\
            \ response under fields or payment_method_options. * organization - The\
            \ field relates to your organization, such as your merchant type category.\
            \ Your organization specifies the field when activating your account.\
            \ See Activating Your Account (KYB)"
        operator:
          type: string
          description: A symbol representing the operator of the condition. String
            starting with $. The operator determines the relationship between the
            operands See documentation - "https://docs.rapyd.net/en/payment-method-type.html"
        threshold_value:
          description: One or more possible values of the element_name field. The
            second operand of the condition "https://docs.rapyd.net/en/payment-method-type.html"
          oneOf:
          - type: string
          - type: integer
    Coupon:
      type: object
      properties:
        amount_off:
          type: number
          description: "The amount of money to subtract from the payment. Decimal.\
            \ Range: Positive decimal number, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015."
          example: 0
        created:
          type: number
          description: "When the coupon was created, in Unix time. Response only."
          example: 1671697165
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
          description: Description of the coupon.
          example: Sample Coupon 1
        discount_duration_in_uses:
          type: number
          description: The number of times that the coupon can be redeemed by a specific
            customer or subscription. Relevant when duration is repeating and redeem_by
            is not set.
          example: 2
        discount_valid_until:
          type: number
          description: "The final date that a discount can be used, in Unix time.\
            \ Relevant when discount_validity_in_months is not set."
          example: 0
        discount_validity_in_months:
          type: number
          description: The number of months after the discount is created that it
            can be used. Relevant when discount_valid_until is not set.
          example: 2
        duration:
          type: string
          description: "Determines how long the discount remains in effect. One of\
            \ the following: \n* forever \n* repeating\n"
          example: forever
          enum:
          - forever
          - repeating
        duration_in_months:
          type: number
          description: Determines the number of months that the coupon remains in
            effect after its creation. Integer. Required when duration is repeating.
          example: 3
        id:
          type: string
          description: "Unique ID for this coupon. English alphanumeric characters\
            \ with no special characters except underscore. If the merchant does not\
            \ define an ID, Rapyd generates a string starting with **coupon_**."
          example: coupon_c1194a18a9972ca7f9804826f00c9eb8
        max_redemptions:
          type: number
          description: "Determines the number of times the coupon can be redeemed.\
            \ The number of customers, subscriptions or orders that the coupon is\
            \ applied to cannot exceed this number. Integer."
          example: 2
        metadata:
          type: object
          description: A JSON object defined by the client.
        percent_off:
          pattern: "([1-9]|[1-9]\\d|100)"
          type: number
          description: "Determines the size of the discount, measured in percent.\
            \ Integer. Range: 1-100."
          example: 10
        redeem_by:
          type: number
          description: "The last time at which the coupon can be redeemed, in Unix\
            \ time. After the redeem_by date, the coupon can no longer be applied\
            \ to new customers. 'redeem_by' takes precedence over the setting of **discount_duration_in_uses**\
            \ and **duration_in_months**."
          example: 0
        times_redeemed:
          type: number
          description: "Indicates the number of times the coupon has been applied\
            \ to a customer, subscription or invoice. If the discount has been used\
            \ more than one time by a customer, subscription or invoice, the number\
            \ of redemptions after the first is also added to this value. Integer.\
            \ When this value equals **max_redemptions**, the coupon becomes no longer\
            \ valid. Response only."
          example: 0
        valid:
          type: boolean
          description: Indicates whether the coupon can be redeemed.
          example: true
      description: "The coupon can be applied to the following objects - * Subscription\
        \ - All charges in the subscription are subject to the discount described\
        \ in the coupon. To add a coupon to a subscription, first use Create Coupon.\
        \ Then add the coupon ID to the coupon field of the subscription with Create\
        \ Subscription or Update Subscription. * Customer - The discount applies to\
        \ all charges to the customer. To add a coupon to a customer, first use Create\
        \ Coupon. Then add the coupon ID to the coupon field of the customer with\
        \ Create Customer or Update Customer. * Order - The discount applies to a\
        \ single order. To add a coupon to an order, first use Create Coupon. The\
        \ duration field of the coupon must be set to repeating, and the duration_in_months\
        \ and discount_duration_in_uses fields must be set to 1. Then add the coupon\
        \ ID to the coupon field of the order with Create an Order or Update Order.\
        \ A coupon can be applied to one or more customers or subscriptions. However,\
        \ a subscription can have only one coupon, and the only way to assign two\
        \ or more coupons to a customer is to assign them to separate subscriptions.\
        \ If there is a coupon for the customer and another coupon for the customer's\
        \ subscription, the subscription coupon takes precedence."
      oneOf:
      - required:
        - amount_off
        - currency
        - duration
      - required:
        - duration
        - percent_off
    Customer:
      required:
      - name
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address_1"
        business_vat_id:
          type: string
          description: The tax ID number of the customer. Relevant when the customer
            is a business
        created_at:
          type: integer
          description: "Time of creation of this customer, in Unix time. Response\
            \ only"
        default_payment_method:
          type: string
          description: The payment method that is used when the 'payment' object or
            subscription does not specify a payment method. The value must also appear
            in the payment_methods list. The payment method is referenced by its name
            field.
        delinquent:
          type: boolean
          description: "Indicates whether there is currently a failure of an automatic\
            \ payment that is part of a subscription, or an invoice that was not paid\
            \ when due. Response only. true - The account is delinquent. false - The\
            \ account is current"
        description:
          type: string
          description: A text description of the customer
        discount:
          $ref: "#/components/schemas/Discount"
        email:
          type: string
          description: Customer's email address. Maximum 512 characters
        ewallet:
          type: string
          description: ID of the wallet that is linked to the customer. String starting
            with **ewallet_**. Each wallet can be associated with only one customer
        id:
          type: string
          description: ID of the Customer object. String starting with **cus_**
        invoice_prefix:
          type: string
          description: A custom string that is prefixed to all invoices for this customer.
            For more information see Invoice Object at "https://docs.rapyd.net/en/invoice-364856.html"
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of the customer
        payment_methods:
          $ref: "#/components/schemas/Customer_payment_methods"
        phone_number:
          type: string
          description: "Customer's primary phone number in E.164 format. The merchant\
            \ is responsible for verifying that the number is correct. One method\
            \ of verifying could be to send an activation code to the phone by SMS,\
            \ with a limited time for response."
        subscriptions:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
      description: customer
    CustomerPaymentMethod:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/Category_1"
        fingerprint_token:
          type: string
          description: "Hash of the card number, expiration date and CVV. Read-only.\
            \ Relevant to cards."
        id:
          type: string
          description: ID of the Payment Method object. String starting with card_
            or other_
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        last4:
          $ref: "#/components/schemas/Last4"
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of the customer
        network_reference_id:
          type: string
          description: "Identifier for use in a recurring card payment. In recurring\
            \ payments, use the network reference ID you got from the response or\
            \ webhook when adding the payment method to the customer. In the payment_method.fields\
            \ object, use it in place of the cvv field, along with the other required\
            \ fields for the card payment method. This field cannot be used together\
            \ with a payment method ID or a customer ID. Note that for all payments,\
            \ you must use the network reference ID from adding the payment method\
            \ to the customer. The response in each subsequent payment contains a\
            \ different network reference ID, which is not for use in requests. Relevant\
            \ to clients with PCI certification who have been authorized to use this\
            \ feature"
        next_action:
          $ref: "#/components/schemas/NextAction"
        redirect_url:
          type: string
          description: "URL where the customer is redirected for additional steps\
            \ required for the payment. Response only. To simulate 3DS authentication\
            \ in the sandbox, see Simulating 3DS Authentication - \"https://docs.rapyd.net/en/simulating-3ds-authentication---api-method.html\""
        supporting_documentation:
          type: string
          description: Reserved. Response only.
        token:
          type: string
          description: ID of the token that represents the card. String starting with
            card_. Relevant to cards. Relevant if the value of is_tokenizable is true
            for the payment method in the response to List Payment Methods by Country.
            See Payment Method Type Object at "https://docs.rapyd.net/en/payment-method-type-364771.html"
        type:
          type: string
          description: "Name of the payment method type. For example, us_mastercard_card.\
            \ To get a list of payment methods for a country, use List Payment Methods\
            \ by Country."
        webhook_url:
          type: string
          description: Reserved. Response only
      description: Describes the fields contained in REST messages and webhooks for
        payment methods saved to a customer profile
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: ID of the Payment Method object. String starting with **card_**
              or **other_**.
          type:
            type: string
            description: "Name of the payment method type. For example, **it_visa_card**.\
              \ To get a list of payment methods for a country, use 'List Payment\
              \ Methods by Country'."
          category:
            $ref: "#/components/schemas/Category"
          metadata:
            type: object
            description: A JSON object defined by the client.
          image:
            type: string
            description: A URL to the image of the icon for the type of payment method.
              Response only
          webhook_url:
            type: string
            description: Reserved. Response only
          supporting_documentation:
            type: string
            description: Reserved. Response only.
          next_action:
            $ref: "#/components/schemas/NextAction"
        description: Fields relevant to all payment methods
      - oneOf:
        - type: object
          properties:
            bic_swift:
              type: string
              description: BIC (SWIFT) code for the bank account.
              example: 12345678XXX
            account_last4:
              type: string
              description: Last four digits of the bank account number or IBAN (International
                Bank Account Number).
          description: Fields relevant to ban and local ewallet payment methods.
        - type: object
          properties:
            last_name:
              type: string
              description: Customer's last name.
            first_name:
              type: string
              description: Customer's first name.
          description: Fields relevant to cash payment methods.
        - type: object
          properties:
            last4:
              type: string
              description: Last four digits of the card or IBAN (International Bank
                Account Number).
            acs_check:
              type: string
              description: "Results of the Access Control Server (ACS) check. Possible\
                \ values: * pass *fail * unavailable *unchecked * Relevant to cards."
            cvv_check:
              type: string
              description: "Verification of the cardâ€™s CVV. Valid values: * pass *\
                \ fail * unavailable *  unchecked"
            bin_details:
              $ref: "#/components/schemas/BinDetails"
            expiration_year:
              type: string
              description: Year of expiration.
            expiration_month:
              type: string
              description: Month of expiration.
            fingerprint_token:
              type: string
              description: "Hash of the card number, expiration date and CVV."
          description: Fields relevant to card payment methods
    CustomerRequest:
      properties:
        addresses:
          type: array
          description: Array of address objects associated with this customer. For
            more information
          items:
            $ref: "#/components/schemas/Address_1"
        business_vat_id:
          type: string
          description: The tax ID number of the customer
        coupon:
          type: string
          description: The ID of a coupon that is assigned to this customer
        payment_method:
          $ref: "#/components/schemas/CustomerRequest_payment_method"
        description:
          type: string
          description: A text description of the customer
        email:
          type: string
          description: Customer's email address
        ewallet:
          type: string
          description: ID of the wallet that is linked to the customer. String starting
            with **ewallet_**.
        invoice_prefix:
          type: string
          description: A custom string that is prefixed to all invoices for this customer.
        metadata:
          type: object
          description: A JSON object defined by the Rapyd partner
        name:
          type: string
          description: The name of the individual customer or the business name
        phone_number:
          type: string
          description: Customer's primary phone number in E.164 format
    Discount:
      type: object
      properties:
        coupon:
          $ref: "#/components/schemas/Coupon"
        customer:
          type: string
          description: ID of the Customer object that the discount applies to. String
            starting with **cus_**. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with **dis_**. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        subscription:
          type: string
          description: ID of the Subscription object that the discount applies to.
            String starting with **sub_**. Response only.
          example: sub_199e8c92ec0ec2bcbe56740042639d6e
        valid:
          type: boolean
          description: Indicates whether the discount can be used. Response only.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process: <BR> 1. Create Coupon, which returns a coupon ID. <BR>2.\
        \ Add the coupon ID to the coupon field of the customer with Create Customer\
        \ or Update Customer."
      nullable: true
    DiscountCustomerResponse:
      type: object
      properties:
        coupon:
          $ref: "#/components/schemas/Coupon"
        customer:
          type: string
          description: ID of the Customer object that the discount applies to. String
            starting with **cus_**. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        end:
          type: number
          description: "The final time that a discount can be used, in Unix time.\
            \ When the value is -1, the discount never expires. Response only."
          example: 1679473563
        id:
          type: string
          description: ID of the Discount object. String starting with **dis_**. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
        number_of_uses:
          type: number
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
        start:
          type: number
          description: "The time that a discount was created, in Unix time. Response\
            \ only."
          example: 1679473563
        valid:
          type: boolean
          description: Indicates whether the discount can be used.
          example: true
      description: "Describes the fields relating to discounts in REST messages and\
        \ webhooks for customer profiles and subscriptions Contains information about\
        \ the coupon that applies to the customer. Read-only field. Adding a discount\
        \ is a 2-step process: <BR> 1. Create Coupon, which returns a coupon ID. <BR>2.\
        \ Add the coupon ID to the coupon field of the customer with Create Customer\
        \ or Update Customer."
      nullable: true
    Dispute:
      type: object
      properties:
        id:
          type: string
          description: Reserved.
        token:
          type: string
          description: ID of the dispute. String starting with **dispute_**.
          example: dispute_6bd95ecec6bee6a505d39b56dbded2ec
        status:
          type: string
          description: Indicates the status of the dispute operation. One of the following
            values<BR>:* **ACT** (Active) - The dispute was initiated and is awaiting
            action by the merchant.<BR>* **RVW** (Review) - Rapyd is reviewing the
            merchant's evidence contesting the dispute.<BR>* **PRA** (Pre-Arbitration)
            - The card issuer challenged a previously contested dispute. The dispute
            is being reviewed.<BR>* **ARB** (Arbitration) - The merchant rejected
            a pre-arbitration outcome. Rapyd is awaiting a ruling by an arbitration
            committee of the card schemes.<BR>* **LOS** (Loss) - The merchant lost
            the dispute. Funds were deducted from the merchant wallet.<BR>* **WIN**
            (Win) - The merchant won the dispute. Funds were credited to the merchant
            wallet.<BR> * **REV** (Reverse) - The card issuer reversed the dispute.
            Funds were credited to the merchant wallet. Final status.
          example: ACT
          enum:
          - ACT
          - RVW
          - PRA
          - ARB
          - LOS
          - WIN
          - REV
        amount:
          type: number
          description: Amount that Rapyd deducted from the merchant due to the dispute.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
        dispute_category:
          type: string
          description: The category of dispute that was provided by the card network.
        dispute_reason_description:
          type: string
          description: A short description of the reason for the dispute.
        original_transaction_currency:
          $ref: "#/components/schemas/Currency_1"
        original_transaction_amount:
          type: number
          description: Amount of the original payment.
        original_dispute_amount:
          type: number
          description: "Amount of the dispute, as reported to Rapyd."
        original_dispute_currency:
          $ref: "#/components/schemas/Currency_1"
        original_transaction_id:
          type: string
          description: ID of the payment that the dispute is charged against. String
            starting with **payment_**.
          example: payment_ce936f36d93bc9307a3db9ebfd3deaaa
        ewallet_id:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
            Response only.
        central_processing_date:
          type: number
          description: The date the transaction was processed by the card network.
        created_at:
          type: number
          description: "Time of creation of the dispute, in Unix time."
        updated_at:
          type: number
          description: "Time that the dispute was last updated, in Unix time."
        due_date:
          type: number
          description: The latest date for the dispute to be contested in Unix time.
        payment_method:
          type: string
          description: ID of the payment method. String starting with **card_**.
          example: card_39d8aee398dfa5492fc2a0ea2822958f
        payment_method_data:
          type: object
          description: Details of the payment method that was used for the payment.
            See Payment Method Data Object.
        rate:
          type: number
          description: FX rate. Relevant to FX payments.
        evidence:
          type: string
          description: Reserved.
        evidence_reason_code:
          type: string
          description: Reserved.
        pre_dispute:
          type: boolean
          description: "When true, indicates that the disputed payment was automatically\
            \ refunded based on pre-determined criteria."
        arn:
          type: string
          description: |
            An Acquirer Reference Number (ARN) is a unique number assigned to a credit card transaction as it moves through the payment flow. Banks can use it to help trace the payment/ refund if it appears to be missing. An ARN will be available for Visa and Mastercard charges.
      description: Describes the fields contained in REST messages and webhooks for
        disputes of payments.
    Escrow:
      type: object
      properties:
        ewallets:
          $ref: "#/components/schemas/Escrow_ewallets"
    EscrowResponse:
      type: object
      properties:
        amount_on_hold:
          type: number
          description: "Total amount of funds that are currently held in the escrow,\
            \ in the currency defined in `currency_code` in the payment."
        created_at:
          type: number
          description: "Date and time the escrow was created, in Unix time."
        currency:
          type: number
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        escrow_releases:
          $ref: "#/components/schemas/EscrowResponse_escrow_releases"
        id:
          type: string
          description: Indicates that the number of escrow releases is greater than
            the number returned in the response.
        last_payment_completion:
          type: number
          description: "Date and time of the completion of the last payment or partial\
            \ payment, in Unix time."
        payment:
          type: number
          description: "ID of the payment, a string starting with **payment_**."
        status:
          type: string
          description: "Status of the escrow. One of the following:<BR> * **pending**\
            \ - The payment and escrow were created, but the payment is not completed\
            \ and the funds are not in the escrow.<BR> * **on_hold** - The payment\
            \ is completed and the funds are in escrow. canceled - The escrow is canceled.<BR>*\
            \ **released** - All or part of the funds have been released to the wallets."
        total_amount_released:
          type: string
          description: "Total amount of funds that were released to the wallets, in\
            \ the currency defined in currency_code in the payment response."
        updated_at:
          type: number
          description: "Date and time of the last update to the escrow, in Unix time."
    GroupPayment:
      properties:
        amount:
          type: number
          description: "Amount of the group payment, in units defined by `currency`."
        amount_to_replace:
          type: string
          description: Indicates the total amount of failed payments that have not
            been replaced.
        cancel_reason:
          type: string
          description: Reason for cancellation of the group payment.
        country:
          type: string
          description: Country where the payment methods are supported. Two-letter
            ISO 3166-1 ALPHA-2 code.
        currency:
          type: string
          description: Currency of the payments. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the group payment.
        expiration:
          type: number
          description: "End of the time allowed for customers to make this payment,\
            \ in Unix time."
        id:
          type: string
          description: ID of the 'group_payment' object. String starting with **gp_**.
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client
        payments:
          type: object
          description: Array of `payment` objects. All payments must have the same
            currency and must be supported in the same country. For details of the
            fields in the 'payment' object.
        reason:
          type: string
          description: Reason for cancellation of the group payment.
        status:
          type: string
          description: "Indicates the status of the group payment operation. One of\
            \ the following values: <BR>> * **active** - The group payment was created\
            \ and one or more payments are still open.<BR> * **canceled** - The group\
            \ payment was canceled. <BR>* **closed** - All payments in the group payment\
            \ are complete.Response only."
      description: Group Payment
    HostedPageStatus:
      type: string
      description: Status of the hosted page. One of the following:<BR> * **NEW**
        - The hosted page was created.<BR>* **DON** - Done. The card was added to
        the customer profile.<BR>* **EXP** - The hosted page expired.<BR>* **INP**
        - Creation of the payment is still in progress.<BR>* **DEC** - Rapyd Protect
        blocked the payment.
      enum:
      - NEW
      - DON
      - EXP
      - INP
      - DEC
    HostedPageActivateCardResponse:
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is assigned to. Must
            have a valid phone number. String starting with **cont_**.
        geo_country:
          type: string
          description: Reserved.
        id:
          type: string
          description: "ID of the hosted page for activating a card, a string starting\
            \ with **hp_issuing_act_**."
        language:
          type: string
          description: "Determines the default language of the hosted page.<BR>* When\
            \ this parameter is null, the language of the user's browser is used.<BR>*\
            \ If the language of the user's browser cannot be determined, the default\
            \ language is English."
        merchant_alias:
          type: string
          description: Client's name.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal."
        merchant_customer_support:
          $ref: "#/components/schemas/MerchantCustomerSupport"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers.<BR>To configure this field, use\
            \ the Client Portal."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Porta"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation.<BR>**Range**: 1 minute to 30 days."
        personalize:
          type: number
          description: "When **true**, connects an issued card to a wallet contact.\
            \ Relevant to a card that was issued in bulk and is not assigned to a\
            \ specific person. Transparent to the customer. See also 'Personalize\
            \ Bulk-Issued Card' in online documentation."
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        region:
          type: string
          description: Reserved.
        skip_pin:
          type: boolean
          description: "When **true**, the customer cannot reset the PIN via a hosted\
            \ page."
        status:
          $ref: "#/components/schemas/HostedPageStatus"
    HostedPageCardPINResponse:
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        card_issuing:
          type: string
          description: ID of the card. String starting with **card_**.
        card_token:
          type: string
          description: "ID of the Issued Card object, a string starting with **ci_**."
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is assigned to. Must
            have a valid phone number. String starting with **cont_**.
        geo_country:
          type: string
          description: Reserved.
        id:
          type: string
          description: "ID of the hosted page for activating a card, a string starting\
            \ with **hp_issuing_act_**."
        language:
          type: string
          description: "Determines the default language of the hosted page.<BR>* When\
            \ this parameter is null, the language of the user's browser is used.<BR>*\
            \ If the language of the user's browser cannot be determined, the default\
            \ language is English."
        merchant_alias:
          type: string
          description: Client's name.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal."
        merchant_customer_support:
          $ref: "#/components/schemas/MerchantCustomerSupport"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers.<BR>To configure this field, use\
            \ the Client Portal."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Porta"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation.<BR>**Range**: 1 minute to 30 days."
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        region:
          type: string
          description: Reserved.
        skip_view_pin:
          type: boolean
          description: "When **true**, the customer cannot reset the PIN via a hosted\
            \ page."
        status:
          $ref: "#/components/schemas/HostedPageStatus"
    HostedPageStatusBaseResponse:
      properties:
        language:
          type: string
          description: "Determines the default language of the hosted page. When this\
            \ parameter is null, the language of the user's browser is used. If the\
            \ language of the user's browser cannot be determined, the default language\
            \ is English"
        merchant_alias:
          type: string
          description: "Reserved, the default name is Rapyd"
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal"
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        merchant_customer_support:
          $ref: "#/components/schemas/MerchantCustomerSupport"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Portal"
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers. To configure this field, use\
            \ the Client Portal."
        page_expiration:
          type: number
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both expiration and payment_expiration\
            \ are set, the payment expires at the earlier time."
        payment:
          type: array
          description: "Describes the payment that will result from the hosted page.\
            \ The `id` and `status` values are null until the customer successfully\
            \ submits the information on the hosted page. For more information about\
            \ fields in the 'payment' object, see 'Create Payment'."
          items:
            $ref: "#/components/schemas/Payment"
        payment_expiration:
          type: string
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both `expiration` and `payment_expiration`\
            \ are set, the payment expires at the earlier time."
        payment_fees:
          $ref: "#/components/schemas/Fee"
        status:
          $ref: "#/components/schemas/HostedPageStatus"
        payment_method_type:
          type: string
          description: "Type of the payment method. For example, it_visa_card"
        payment_method_type_categories:
          type: object
          description: A list of the categories of payment method that are supported
            on the checkout page. The categories appear on the page in the order provided.
            One or more values may be included.
          enum:
          - bank_redirect
          - bank_transfer
          - card
          - cash
          - ewallet
        payment_method_types_exclude:
          type: array
          description: List of payment methods that are excluded from display on the
            checkout page.
          items:
            type: string
        payment_method_types_include:
          type: array
          description: List of payment methods that are displayed on the checkout
            page. The payment methods appear on the page in the order provided.
          items:
            type: string
        recurrence_type:
          type: string
          description: Specifies the primary intended purpose of the saved payment
            method. See Saving a European Card While Creating a Payment. One of the
            following values:<BR>* **installment** - Regular payments for a defined
            number of payment cycles.<BR>* **recurring** - Regular payments for an
            indefinite period.<BR>* **unscheduled** - Individual unrelated payment.
          enum:
          - installment
          - recurring
          - unscheduled
    HostedPageAdditionalResponse:
      properties:
        account_funding_transaction:
          $ref: "#/components/schemas/HostedPageAdditionalResponse_account_funding_transaction"
        amount:
          type: number
          description: "The amount of the payment, in units of the currency defined\
            \ in `currency`. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        capture:
          type: boolean
          description: "Determines when the payment is processed for capture. Relevant\
            \ to card payments.<BR>* **true** - Capture the payment immediately.<BR>*\
            \ **false** - Authorize the payment, then capture some or all of the payment\
            \ at a later time, when the merchant runs the Capture Payment method."
          enum:
          - true
          - false
        cart_items:
          $ref: "#/components/schemas/HostedPageAdditionalResponse_cart_items"
        country:
          $ref: "#/components/schemas/Country_1"
        currency:
          $ref: "#/components/schemas/Currency_1"
        customer:
          type: string
          description: ID of the customer. String starting with **cus_**.
        description:
          type: string
          description: "Description of the payment transaction. To display the description,\
            \ set `display_description` to **true** in `custom_elements`."
        escrow:
          type: boolean
          description: Determines whether the payment is held in escrow for later
            release.
        escrow_release_days:
          type: number
          description: "Determines the number of days after creation of the payment\
            \ that funds are released from escrow. Funds are released at 5:00 pm GMT\
            \ on the day indicated. Integer, range: 1-90."
        ewallet_id:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant for specifying a single wallet in the request.
        ewallets:
          description: "An array of one object, which contains the following fields:<BR>\
            \ * **ewallet_id** - The ID of the wallet that the money is transferred\
            \ from, a string starting with **ewallet_**.<BR> * **amount** - Amount\
            \ of the transaction in currency units defined in currency.<BR> * **percent**\
            \ - A decimal number representing a percentage of the total payout."
          example: []
        expiration:
          type: number
          description: "Time when the payment expires if it is not completed, in Unix\
            \ time. When both `expiration` and `payment_expiration` are set, the payment\
            \ expires at the earlier time.<BR>Default value us 14 days after creation\
            \ of the checkout page."
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer). One of the following values:<BR>* **buy**\
            \ - The checkout page shows the currency that the seller (merchant) receives\
            \ for goods or services. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD.<BR>* **sell** - The checkout page shows the currency that the\
            \ buyer is charged with to purchase goods or services from the seller.\
            \ For example, a US-based merchant wants to charge a buyer 2,000 MXN and\
            \ will accept whatever amount in USD that is converted from 2,000 MXN."
        id:
          type: string
          description: ID of the Rapyd checkout page. String starting with **checkout_**.
        merchant_fields:
          type: object
          description: "Object that contains payment method fields that the merchant\
            \ fills in. Can include one or both of the following:<BR>* `payment_method_options`\
            \ object.<BR> `payment_options` object.<BR>The fields of both objects\
            \ are not displayed to the customer on the hosted page. To retrieve the\
            \ fields of both objects for a payment method, use Get Payment Method\
            \ Required Fields."
        merchant_main_button:
          type: string
          description: "A string that represents the text on the main Call to Action\
            \ (CTA) button. One of the following:<BR>* place_your_order - Place Your\
            \ Order.<BR>* pay - Pay.<BR>* pay_now - Pay Now.<BR>* make_payment - Make\
            \ Payment.<BR>* purchase - Purchase.<BR>* buy - Buy.<BR>* donate - Donate.<BR>*\
            \ To configure this button, use the Client Portal."
          default: place_your_order
          enum:
          - place_your_order
          - pay
          - pay_now
          - make_payment
          - purchase
          - buy
          - donate
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers. To configure this field, use\
            \ the Client Portal."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Portal"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        metadata:
          type: string
          description: A JSON object defined by the client
        custom_elements:
          $ref: "#/components/schemas/HostedPageAdditionalResponse_custom_elements"
        page_expiration:
          type: number
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both expiration and payment_expiration\
            \ are set, the payment expires at the earlier time."
        require_card_cvv:
          type: boolean
          description: Require the customer to enter their Card Verification Value
            (CVV) for each subsequent payment made using a saved card. Relevant to
            card payments.<BR>* **true** - Customer must enter CVV.<BR>* **false**
            - Customer not required to enter CVV.
          enum:
          - true
          - false
        timestamp:
          type: number
          description: "Time of creation of the checkout page, in Unix time."
    InvoiceItemResponse:
      type: object
      properties:
        id:
          type: string
          description: ID of the invoice item. String starting with **ii_**.
        amount:
          type: number
          description: "The amount of the total charge or credit for this item. Decimal,\
            \ including the correct number of decimal places for the currency exponent,\
            \ as defined in ISO 2417:2015.<BR> This is `quantity` times `unit_amount`.\
            \ A credit is indicated by a negative number."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        customer:
          type: string
          description: ID of the customer. String starting with **cus_**.
        date:
          type: string
          description: "The time of the charge or credit, in Unix time."
        description:
          type: string
          description: item description
        discountable:
          type: boolean
          description: Determines whether this invoice item is subject to the discount
            defined in the coupon that is assigned to the customer or subscription.
        invoice_item:
          type: string
          description: ID of the invoice item. String starting with **ii_**.
        invoice:
          type: string
          description: ID of the invoice that this invoice item is assigned to. Relevant
            when `subscription` is not set.
        metadata:
          type: object
          description: A JSON object defined by the client.
        period:
          $ref: "#/components/schemas/InvoiceItemResponse_period"
        plan:
          $ref: "#/components/schemas/Plan"
        proration:
          type: boolean
          description: Indicates whether the invoice item is prorated.
        quantity:
          type: number
          description: Indicates the number of units charged as a single invoice item.
            Integer.
        subscription:
          type: string
          description: "ID of the subscription this invoice item is assigned to. By\
            \ default, the invoice item is assigned to the customer's subscription\
            \ whose current billing cycle ends first. Relevant when `invoice` is not\
            \ set."
        unit_amount:
          type: number
          description: "Per-unit price of the product or service, adjusted as defined\
            \ in the plan. Decimal."
      description: Invoice item
    InvoiceItem:
      type: object
      properties:
        id:
          type: string
          description: line item id
        amount:
          type: number
          description: amount
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
          description: item description
        discountable:
          type: boolean
        invoice_item:
          type: string
          description: invoice item id
        metadata:
          type: object
          description: A JSON object defined by the client.
        period:
          $ref: "#/components/schemas/InvoiceItem_period"
        proration:
          type: boolean
        quantity:
          type: number
        plan:
          $ref: "#/components/schemas/Plan"
        subscription:
          type: string
          description: ID of the subscription that generates charges to this customer.
            String starting with **sub_**.
        subscription_item:
          type: string
          description: ID of the subscription item that generates charges to this
            customer.
        type:
          type: string
      description: Invoice item
    InvoiceResponse:
      type: object
      properties:
        id:
          type: string
        attempt_count:
          type: number
        attempted:
          type: number
          description: Number of automatic attempts that Rapyd made to retry paying
            this invoice if it failed.
        automatic_attempt_count:
          type: number
          description: Number of automatic attempts that Rapyd made to retry paying
            this invoice if it failed.
        billing:
          type: string
          description: "Determines the method of collection, pay_automatically or\
            \ send_invoice. Default is pay_automatically"
        billing_reason:
          type: string
          description: The reason for billing
          enum:
          - subscription_cycle
          - subscription_create
          - manual
          - upcoming
        created_at:
          type: number
          description: "The time the invoice was created, in Unix time. Response only."
        discount:
          $ref: "#/components/schemas/Discount"
        currency:
          $ref: "#/components/schemas/Currency_1"
        customer:
          type: string
          description: ID of the customer. String starting with cus_.
        days_until_due:
          type: number
          description: The number of days until the due date.
        description:
          type: string
          description: Description of the invoice.
        discount_amount:
          type: number
          description: The amount of the discount that was applied to this invoice.
        due_date:
          type: string
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the `days_until_due` field. Format is in Unix time."
        lines:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItemResponse"
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Object containing additional payment_options fields.
        payment_method:
          type: string
          description: Payment method for the invoice.
          nullable: true
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        subscription:
          $ref: "#/components/schemas/Payment"
        tax_percent:
          type: number
          description: "The tax rate, defined as a percentage."
        payment:
          $ref: "#/components/schemas/Payment"
        payout:
          $ref: "#/components/schemas/Payout"
        payout_fields:
          type: object
          description: Reserved
        period_end:
          type: number
          description: "Last date in the period covered by the invoice, in Unix time.\
            \ Response only."
        period_start:
          type: number
          description: "First date in the period covered by the invoice, in Unix time.\
            \ Response only."
        next_payment_attempt:
          type: number
          description: "The time when the next payment attempt will be made, in Unix\
            \ time."
        number:
          type: string
        status:
          type: string
          description: An invoice moves through a series of statuses. See status table
            below.
          enum:
          - draft
          - deleted
          - open
          - paid
          - void
          - uncollectible
        subtotal:
          type: number
          description: Total of all line items before discount and before tax. Decimal.
            Response only.
        total:
          type: number
          description: Total after discount and tax. Decimal.
        type:
          type: string
          enum:
          - payment
          - payout
      description: Invoice
    InvoiceLineResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
        discountable:
          type: boolean
        invoice_item:
          type: string
        metadata:
          type: object
        period:
          $ref: "#/components/schemas/InvoiceLineResponse_period"
        proration:
          type: boolean
        quantity:
          type: integer
        subscription:
          type: string
        subscription_item:
          type: string
        type:
          type: string
        plan:
          oneOf:
          - $ref: "#/components/schemas/Plan"
          - type: string
    Last4:
      pattern: "^\\d{4}$"
      type: string
      description: last4 - Last four digits of the card number. Read-only. Relevant
        to cards
    MerchantCustomerSupport:
      type: object
      properties:
        email:
          type: string
          description: Email address.
        url:
          type: string
          description: URL for the client's customer support service.
        phone_number:
          type: string
          description: Phone number for contacting the client's customer support service.
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
      description: "Contains details of the clientâ€™s customer support. To configure\
        \ these fields, use the Client Portal."
    NextAction:
      type: string
      description: Indicates the next action for completing the payment. One of the
        following values<BR>* **3d_verification** - The next action is 3DS authentication.
        Relevant only to card payments.<BR>* **pending_capture** - The next action
        is pending the capture of the amount. Relevant only to card payments when
        the amount is not zero.<BR>* **pending_confirmation** - The next action is
        pending the confirmation for the payment. Relevant to all payment methods
        excluding card payment.<BR>* **not_applicable** - The payment has completed
        or the        next action is not relevant.
      enum:
      - 3d_verification
      - pending_capture
      - pending_confirmation
      - not_applicable
    OrderItemResponse:
      type: object
      properties:
        amount:
          type: number
          description: "Price of one SKU unit, in the currency defined in currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015."
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
          description: Description of the item.
        parent:
          type: string
          description: |
            ID of the SKU object that represents the product. One of the following: ID of the SKU object. String starting with sku_ ID of the coupon. If generated by Rapyd, a string starting with coupon_.
        quantity:
          type: number
          description: Quantity of the product in the line item. Integer. Required
            when type is sku.
        type:
          type: string
          description: Type of line item.
    OrderResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        amount_returned:
          type: number
        payment:
          $ref: "#/components/schemas/Payment"
        created:
          type: integer
        customer:
          type: string
        currency:
          type: string
        email:
          type: string
        external_coupon_code:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemResponse"
        metadata:
          type: object
        returns:
          type: array
          description: A list of the returns charged against this order.
          items:
            $ref: "#/components/schemas/OrderReturnedItemResponse"
        shipping_address:
          type: object
        status:
          type: string
        status_transitions:
          $ref: "#/components/schemas/OrderResponse_status_transitions"
        updated:
          type: integer
        upstream_id:
          type: string
        tax_percent:
          type: number
    OrderReturnedResponse:
      properties:
        id:
          type: string
        amount:
          type: number
        created:
          type: integer
        currency:
          $ref: "#/components/schemas/Currency_1"
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderReturnedItemResponse"
        order:
          type: string
        refund:
          type: string
    OrderReturnedItemResponse:
      properties:
        amount:
          type: number
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
        parent:
          type: string
        quantity:
          type: number
        type:
          type: string
    Outcome:
      type: object
      properties:
        network_status:
          type: string
          description: Network status of the payment.
          enum:
          - approved_by_network
          - declined_by_network
          - not_sent_to_network
          - reversed_after_approval
        payment_flow_type:
          type: string
          description: Indicates how the customer completes the payment transaction.
            Possible values:<BR>* **bank_transfer** - Customer makes a transfer directly
            from the customer's bank to a bank account.<BR>* **card** - Rapyd charges
            the customer's card.<BR>* **cash** - The customer pays in cash at a Rapyd
            point-of-sale location.<BR>* **ewallet** - The customer pays with a local
            ewallet.<BR>* **redirect_url** - The customer is directed to another URL
            to complete the bank payment.
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
        reason:
          type: string
          description: More detailed indication of the reason indicated by type. One
            of the following:<BR>* **highest_risk_level** - Blocked by default rules.<BR>*
            **elevated_risk_level** - Placed in review by default rules.<BR>* **rule**
            - Placed in review by customer-designed rules.
          enum:
          - highest_risk_level
          - elevated_risk_level
          - rule
        risk_level:
          type: string
          description: Assessment of the risk level of the payment.
          enum:
          - normal
          - elevated
          - highest
          - not_assessed
        seller_message:
          type: string
          description: Message to the merchant
        type:
          type: string
          description: Indicates the outcome of the risk assessment.
          enum:
          - authorized
          - manual_review
          - issuer_declined
          - blocked
          - invalid
      description: The outcome object describes the outcome of the Rapyd Protect risk
        assessment.
    Payment:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address_1"
        amount:
          type: number
          description: "The amount received by the recipient, in units of the currency\
            \ defined in currency. Decimal, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015. To verify\
            \ a card, set to 0."
          default: 0.0
        auth_code:
          type: string
          description: Indicates that the card payment was authorized by the card
            network.
        cancel_reason:
          type: string
          description: Reason for cancellation or reversal of a payment.
        captured:
          type: boolean
          description: Indicates whether the payment has been successfully captured.
        complete_payment_url:
          type: string
          description: URL where the customer is redirected for final steps in completing
            the operation. Provided by the clientRelevant to bank redirect payment
            methods
        country_code:
          type: string
          description: The country code of the payment method.
        created_at:
          type: integer
          description: "Time of creation of the payment, in Unix time."
        currency_code:
          type: string
          description: One of the following:<BR>* **Transactions without FX** - Indicates
            the currency of the amount received by the recipient.<BR>* **FX transactions**
            - Indicates the currency of the amount paid by the buyer.
        customer_token:
          type: string
          description: "ID of the customer who is making the payment. String starting\
            \ with **cus_**. When a payment is created without an existing customer,\
            \ the platform creates an anonymous customer with no payment methods."
        description:
          type: string
          description: Description of the payment
        dispute:
          $ref: "#/components/schemas/Dispute"
        error_code:
          type: string
          description: Relevant error message (with an underscore between words) and
            ID number of the error.
        error_message:
          type: string
          description: Reserved.
        error_payment_url:
          type: string
          description: URL where the customer is redirected in case of an error in
            the operation. Provided by the client.Relevant to bank redirect payment
            methods
        escrow:
          $ref: "#/components/schemas/Payment_escrow"
        escrow_release_days:
          type: number
          description: The number of days after creation of the payment that funds
            are released from escrow. Funds are released at 5:00 pm GMT on the day
            indicated.
        ewallet_id:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
        ewallets:
          type: array
          description: "Specifies the wallets that the money is collected into. If\
            \ this is left blank, the money goes into the oldest **collection**-type\
            \ client wallet. If there is no **collection** client wallet, the money\
            \ goes into the oldest **general**-type client wallet."
          items:
            $ref: "#/components/schemas/Payment_ewallets"
        expiration:
          type: number
          description: "End of the time allowed for customer to make this payment,in\
            \ Unix time.<BR>Note:<BR> Relevant to card payments: In some cases, the\
            \ card networks require a shorter expiration date of the payment. In these\
            \ cases, the expiration will be updated. Refer to the 'PAYMENT_COMPLETED'\
            \ webhook to view the updated expiration value."
        failure_code:
          type: string
          description: Error code explaining the reason for failure of the payment.
        failure_message:
          type: string
          description: "Message to the merchant, explaining the reason for failure\
            \ of the payment."
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer).<BR>* **buy** - The currency that the Rapyd\
            \ Wallet receives for goods or services. Fixed side buy relates to the\
            \ seller (merchant) funds. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD. This is the default.<BR>* **sell** - The currency that the\
            \ buyer is charged for purchasing goods or services. Fixed side sell relates\
            \ to the buyer (customer) funds. For example, a US-based merchant wants\
            \ to charge a buyer 2,000 MXN and will accept whatever amount in USD that\
            \ is converted from 2,000 MXN."
        flow_type:
          type: string
          description: Reserved.
        fx_rate:
          type: number
          description: "Exchange rate for the transaction.<BR>* When `fixed_side`\
            \ is **buy**, `fx_rate` is the buy rate. When `fixed_side` is **sell**,\
            \ `fx_rate` is the sell rate."
          default: 1
        group_payment:
          type: string
          description: ID of the group payment. String starting with **gp_**.<BR>Relevant
            when the payment is part of a group payment.
        id:
          description: ID of the payment. String starting with **payment_**.
        initiation_type:
          type: string
          description: Indicates how the transaction was initiated. One of the following:<BR>*
            **customer_present** - The transaction was initiated by the customer.<BR>*
            **installment** - The transaction was initiated by a subscription where
            there is a fixed number of installments.<BR>* **moto** - The transaction
            was initiated by the merchant or Rapyd client for a mail order or telephone
            order.<BR>* **recurring** - The transaction was initiated by a subscription
            where charges are made at regular intervals and there is no end date.<BR>*
            **unscheduled** - The transaction is a top-up transaction that was previously
            authorized by the cardholder and was initiated by the merchant or Rapyd
            client.
          enum:
          - customer_present
          - installment
          - moto
          - recurring
          - unscheduled
        instructions:
          type: array
          description: "Describes how the customer makes the payment. Contains the\
            \ following fields - * name - . * steps - A steps object containing a\
            \ list of steps for the customer to take. Each step is named **stepN**,\
            \ where **N** is an integer."
          items:
            $ref: "#/components/schemas/Payment_instructions"
        invoice:
          type: string
          description: ID of the invoice that this payment is for.
        is_partial:
          type: boolean
          description: "Indicates whether the payment has been partially paid. When\
            \ **false**, indicates that the payment is unpaid or fully paid."
          default: false
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 45 characters.
        merchant_requested_amount:
          type: string
          description: "Indicates the amount paid by the payer, in units of the currency\
            \ defined in `merchant_requested_currency`.<BR>Relevant to payments with\
            \ FX."
        merchant_requested_currency:
          type: string
          description: Indicates the currency that merchant receives. Three-letter
            ISO 4217 code. Uppercase.<BR>Relevant to payments with FX.
        metadata:
          type: object
          description: A JSON object defined by the client in the Customer Payment
            Method object.
        mid:
          type: string
          description: Reserved
        next_action:
          $ref: "#/components/schemas/NextAction"
        order:
          type: string
          description: ID of the order that this payment is for.
        original_amount:
          type: number
          description: "One of the following:<BR> * **Payments not involving foreign\
            \ exchange** - The amount of the payment, in units of the currency defined\
            \ in `currency`, including gross transaction fees.<BR>* **Foreign exchange\
            \ payments** - The amount paid by the buyer, in units of the currency\
            \ defined in `currency_code`, including gross transaction fees and gross\
            \ FX fees."
          example: 100.0
        outcome:
          $ref: "#/components/schemas/Outcome"
        paid:
          type: boolean
          description: Indicates whether the payment has been fully captured.
        paid_at:
          type: number
          description: "Time of the last capture, in Unix time."
        payment_account_reference:
          type: string
          description: An alphanumeric code that identifies the payment account linked
            to the card. Appears only in card related responses that use this EMVCo
            standard value.
        payment_fees:
          $ref: "#/components/schemas/Fee"
        payment_method:
          type: string
          description: Payment method ID.<BR>**Note**<BR>Card payment method ID is
            not returned when the `next_action` is **3d_verification** or when `save_payment_method`
            was set to **false**.
        payment_method_data:
          $ref: "#/components/schemas/Payment_payment_method_data"
        payment_method_options:
          type: object
          description: "Object describing additional payment method fields required\
            \ for the payment. These values are not saved as part of the payment method\
            \ object. To determine the fields required, run Get Payment Method Required\
            \ Fields."
        payment_method_type:
          type: string
          description: The type of payment method.
        payment_method_type_category:
          type: string
          description: Category of payment method type.
          enum:
          - bank_transfer
          - bank_redirect
          - card
          - cash
          - ewallet
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
        receipt_number:
          type: string
          description: Reserved.
        redirect_url:
          type: string
          description: URL where the customer is redirected for additional steps for
            the payment.
        refunded:
          type: boolean
          description: Indicates whether there was a refund against this payment.
          default: false
        refunded_amount:
          type: number
          description: "The total amount refunded against this payment, in units of\
            \ the currency defined in `currency`."
          default: 0.0
        refunds:
          $ref: "#/components/schemas/Payment_refunds"
        remitter_information:
          $ref: "#/components/schemas/Payment_remitter_information"
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code.<BR>* When `fixed_side` is **sell**, it is the currency received\
            \ in the Rapyd Wallet.<BR>* When `fixed_side` is **buy**, it is the currency\
            \ charged to the buyer (customer)."
        save_payment_method:
          type: boolean
          description: Relevant to card payment methods when the request included
            full card details. Indicates whether Rapyd saved the payment method for
            future use.
        statement_descriptor:
          type: string
          description: A text description suitable for a customer's payment statement.
            5-22 characters.
        status:
          $ref: "#/components/schemas/PaymentStatus"
        textual_codes:
          type: object
          description: "A set of text codes for the customer to use to complete the\
            \ steps described in the `instructions` field. The name of the field is\
            \ the local name of the code, or some other label. For example<BR>* `code`<BR>*\
            \ `paycode`<BR> * `pay_code`<BR> * `payid`<BR> * `pairing_code`<BR> *\
            \ `payment_code`<BR> * `response_code`"
        transaction_id:
          type: string
          description: ID of the associated transaction.
        visual_codes:
          type: object
          description: "A set of images for the customer to use to complete the steps\
            \ described in the `instructions` field. For example, a QR code or barcode."
      description: Collects money from a payment method and deposits it into one or
        more Rapyd Wallets
    PaymentLink:
      properties:
        amount:
          type: number
          description: "The amount of the payment, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. On the hosted\
            \ payment page, the customer: <BR><BR> Cannot modify the amount when amount_is_editable\
            \ is false or not used. <BR><BR> Can modify the amount when amount_is_editable\
            \ is true and amount has a positive value. <BR><BR> Must enter an amount\
            \ when amount_is_editable is true and amount is 0, null, or not used."
          example: 100.00
        amount_is_editable:
          type: boolean
          description: Determines whether the customer can edit the amount.<br><br>
            **true** - The customer can edit the amount. <br><br> **false** - The
            customer cannot edit the amount.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
          example: FR
        currency:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country. <BR><BR>
            **Transactions without FX** - Indicates the currency of the amount received
            by the recipient. BR><BR> **FX transactions** - Indicates the currency
            of the amount paid by the buyer.
          example: EUR
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
          example: cus_34534dsfgdg3453
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer). <BR><BR> * buy - The currency that the\
            \ Rapyd Wallet receives for goods or services. Fixed side buy relates\
            \ to the seller (merchant) funds. For example, a US-based merchant wants\
            \ to charge 100 USD. The buyer (customer) pays the amount in MXN that\
            \ converts to 100 USD. This is the default. <BR><BR> * sell - The currency\
            \ that the buyer is charged for purchasing goods or services. Fixed side\
            \ sell relates to the buyer (customer) funds. For example, a US-based\
            \ merchant wants to charge a buyer 2,000 MXN and will accept whatever\
            \ amount in USD that is converted from 2,000 MXN."
          example: sell
        id:
          type: string
          description: ID of the payment link. String starting with **hp_reuse_**.
          example: hp_reuse_bd5cbfc99af8fffc834c444e746246c3
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see https://docs.rapyd.net/en/list-supported-languages.html.\
            \ <BR><BR> When this parameter is null, the language of the user's browser\
            \ is used. BR><BR> If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        max_payments:
          type: number
          description: "Indicates the maximum number of times that the payment link\
            \ can be used for payments. When not defined, there is no limit."
          example: 7
        merchant_alias:
          type: string
          description: Client's name.
          default: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.\
            \ To configure this field, use the Client Portal. See https://docs.rapyd.net/en/customizing-your-hosted-page.html."
          example: 323fff
        merchant_customer_support:
          $ref: "#/components/schemas/MerchantCustomerSupport"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. To configure this\
            \ field, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers. To configure this field, use\
            \ the Client Portal."
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the payment link,\
            \ in Unix time. One year after creation. <BR> <BR> **Note:** Each hosted\
            \ page that the payment link generates expires 14 days after creation."
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code. <BR>* When `fixed_side` is **sell**, it is the currency received\
            \ in the Rapyd Wallet. <BR>* When `fixed_side` is **buy**, it is the currency\
            \ charged to the buyer (customer)."
        redirect_url:
          type: string
          description: The payment link URL.
        status:
          type: string
          description: "Status of the hosted payment page. One of the following: <BR><BR>*\
            \ **NEW** - The hosted page was created. <BR><BR>* **EXP** - The hosted\
            \ page expired."
        template:
          type: object
          description: Optional parameters for the checkout page.
      description: Retrieves details of a payment link.
    PaymentMethodType:
      type: object
      properties:
        amount_range_per_currency:
          $ref: "#/components/schemas/PaymentMethodType_amount_range_per_currency"
        category:
          $ref: "#/components/schemas/Category_1"
        country:
          $ref: "#/components/schemas/Country_1"
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/Currency_1"
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: "#/components/schemas/Field_1"
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        is_cancelable:
          type: boolean
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
        is_expirable:
          type: boolean
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
        is_online:
          type: boolean
          description: Indicates whether the payment is completed immediately online.
            Response only
        is_refundable:
          type: boolean
          description: Indicates whether the payment method type supports refunds
        is_restricted:
          type: boolean
          description: Reserved.
        is_tokenizable:
          type: boolean
          description: Indicates whether the token of the payment method can be used
            in a collect operation
        is_virtual:
          type: boolean
          description: Indicates whether a Web-based version of the payment method
            type exists
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when `is_expirable` is **true**.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when `is_expirable` is **true**.
        multiple_overage_allowed:
          type: boolean
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
        name:
          type: string
          description: "The name of the payment method, in user-friendly terms. For\
            \ example, Ireland Visa card. Response only"
        payment_flow_type:
          type: string
          description: Indicates how the customer completes the payment transaction.
            Possible values:<BR>* **bank_transfer** - Customer makes a transfer directly
            from the customer's bank to a bank account.<BR>* **card** - Rapyd charges
            the customer's card.<BR>* **cash** - The customer pays in cash at a Rapyd
            point-of-sale location.<BR>* **ewallet** - The customer pays with a local
            ewallet.<BR>* **redirect_url** - The customer is directed to another URL
            to complete the bank payment.
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
          - cash
          - bank transfer
        payment_options:
          type: object
          description: "Additional fields of the payment object which are required\
            \ for the payment.<BR>In the request to create payment, these fields appear\
            \ in the root of the body of the request.<BR>To determine the fields,\
            \ run 'Get Payment Method Required Fields'."
        supported_digital_wallet_providers:
          type: array
          description: Describes the digital wallet providers that support the payment
            method. These providers may include **apple_pay** and **google_pay**.
          items:
            type: string
        supports_subscription:
          type: boolean
          description: Indicates if the payment method type supports subscription.
        type:
          type: string
          description: "Type of the payment method. For example, it_visa_card"
        virtual_payment_method_type:
          type: string
          description: Indicates the name of the Web-based version of this payment
            method type
      description: A type of payment method that a customer can use for making payments.
    PaymentMethodTypeRequiredFields:
      properties:
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: "#/components/schemas/Field_1"
        maximum_expiration_seconds:
          type: number
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when `is_expirable` is **true**.
        minimum_expiration_seconds:
          type: number
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when `is_expirable` is **true**
        payment_method_options:
          type: object
          description: "Additional fields required for the payment method. These values\
            \ might vary from one use to the next, so they are not saved as part of\
            \ the payment method object. <BR>In the request to create payment, these\
            \ fields appear in the `payment_method_options` object."
        payment_options:
          type: object
          description: "Additional fields of the payment object which are required\
            \ for the payment.<BR>In the request to create payment, these fields appear\
            \ in the root of the body of the request.<BR>To determine the fields,\
            \ run 'Get Payment Method Required Fields'."
        type:
          type: string
          description: "Type of the payment method. For example, **it_visa_card**.<BR>\
            \ To get a list of payment methods for a country, use 'List Payment Methods\
            \ by Country'."
    PaymentOptions:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address_1"
        amount_range_per_currency:
          $ref: "#/components/schemas/PaymentAmountRangePerCurrency"
        bin_details:
          $ref: "#/components/schemas/BinDetails"
        category:
          $ref: "#/components/schemas/Category_1"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Condition"
        country:
          $ref: "#/components/schemas/Country_1"
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/Currency_1"
        customer:
          $ref: "#/components/schemas/Customer"
        fingerprint:
          type: string
          description: "Hash of the card number, expiration date and CVV. Read-only.\
            \ Relevant to cards"
        image:
          type: string
          description: A URL to the image of the icon for the type of payment method.
            Response only
        instructions:
          type: string
          description: Instructions for the field. Response only
        is_cancelable:
          type: boolean
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
        is_expirable:
          type: boolean
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
        is_online:
          type: boolean
          description: Indicates whether the payment is completed immediately online.
            Response only
        is_refundable:
          type: boolean
          description: Indicates whether the payment method type supports refunds
        is_restricted:
          type: boolean
          description: Reserved
        is_required:
          type: boolean
          description: "Whether the field is required for using the payment method.\
            \ When the conditions defined by conditions are met, the field is required\
            \ even though the value of is_required is false. Response only"
        is_tokenizable:
          type: boolean
          description: Indicates whether the token of the payment method can be used
            in a collect operation
        is_updatable:
          type: boolean
          description: ndicates whether the payment that uses the payment method can
            be updated.
        is_virtual:
          type: boolean
          description: Indicates whether a Web-based version of the payment method
            type exists
        last4:
          $ref: "#/components/schemas/Last4"
        maximum_expiration_seconds:
          type: integer
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
        minimum_expiration_seconds:
          type: integer
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
        multiple_overage_allowed:
          type: boolean
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
        name:
          type: string
          description: "The name of the payment method, in user-friendly terms. For\
            \ example, 'Ireland Visa card'. Response only"
        payment_flow_type:
          type: string
          description: Indicates how the customer completes the payment transaction.
            Possible values:<BR>* **bank_transfer** - Customer makes a transfer directly
            from the customer's bank to a bank account.<BR>* **card** - Rapyd charges
            the customer's card.<BR>* **cash** - The customer pays in cash at a Rapyd
            point-of-sale location.<BR>* **ewallet** - The customer pays with a local
            ewallet.<BR>* **redirect_url** - The customer is directed to another URL
            to complete the bank payment.
          enum:
          - direct
          - eWallet
          - ewallet_payout
          - card
          - redirect_url
      description: "A payment method type is a type of payment method that any customer\
        \ can use, for example, ee_mastercard_card, Mastercard for Estonia. When it\
        \ is added to a customer profile, it becomes a payment method that is specific\
        \ to that one customer. The name of the payment method type starts with a\
        \ prefix for the country, the 2-letter ISO 3166-1 alpha-2 code. If the payment\
        \ method is valid in multiple countries, the prefix is xx_. The payment method\
        \ type has a suffix with one of the following values - _bank - Bank transfer\
        \ or bank redirect _card - Credit card, debit card or other card _cash - Cash\
        \ _ewallet - Local eWallet"
    PaymentStatus:
      type: string
      description: "Indicates the status of the payment. One of the following:<BR>*\
        \ **ACT** - Active and awaiting completion of 3DS or capture. Can be updated.<BR>*\
        \ **CAN** - Canceled by the client or the customer's bank.<BR>* **CLO** -\
        \ Closed.<BR>* **ERR** - Error. An attempt was made to create or complete\
        \ a payment, but it failed.<BR>* **EXP** - The payment has expired.<BR>* **REV**\
        \ - Reversed by Rapyd. See `cancel_reason`."
      default: ACT
      enum:
      - ACT
      - CLO
      - ERR
      - CAN
      - EXP
      - DLD
      - REV
      - UND
      - CRE
    PaymentParams:
      type: object
      properties:
        complete_payment_url:
          type: string
          description: URL where the customer is redirected after successfully completing
            an operation on a hosted page. Does not support localhost URLs.
        error_payment_url:
          type: string
          description: URL where the customer is redirected if an error occurs during
            or after an operation on a hosted page. Does not support localhost URLs.
    Plan:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the plan is available to be added to a subscription.
        aggregate_usage:
          type: string
          description: Determines which quantity is used to calculate the pricing.
            One of the following:<BR>* **max** - The maximum reported usage within
            the billing cycle.<BR>* **sum** - The sum of all usage during a billing
            cycle.<BR>*  **last_during_period**- The last usage reported within the
            billing cycle.<BR>* **last_ever** - The last usage ever reported when
            the latest billing cycles contain no usage at all. Relevant when `billing_scheme`
            is set to **per_unit**.
          example: sum
          enum:
          - max
          - sum
          - last_during_period
          - last_ever
        amount:
          type: number
          description: "The amount to charge, in units of the currency defined in\
            \ `currency`."
          example: 10.0
        billing_scheme:
          type: string
          description: "Describes how to compute the price. One of the following:\
            \ \n* per_unit - The amount specified in amount is charged for each unit.\
            \ Also set these related fields: amount, transform_usage, usage_type,\
            \ aggregate_usage. This is the default. \n* tiered - The unit pricing\
            \ is computed using a tiering strategy as defined with the tiers and tiers_mode\
            \ fields.\n"
          example: tiered
          enum:
          - per_unit
          - tiered
        created_at:
          type: number
          description: "Time the 'plan' object was created, in Unix time. Response\
            \ only."
          example: 1592311574
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in fields
            that represent monetary amounts.
        id:
          type: string
          description: "Unique ID for this plan. English alphanumeric characters with\
            \ no special characters except underscore. If the client does not define\
            \ an ID, Rapyd generates a string starting with **plan_**."
          example: plan_51788cf4ed1b672cb0a2a97773887f5b
        interval:
          type: string
          description: "Specifies the units used in defining the billing cycle. One\
            \ of the following: \n* day \n* week \n* month \n* year Maximum interval\
            \ is 1 year. \n"
          example: month
          enum:
          - month
          - day
          - week
          - year
        interval_count:
          type: number
          description: Number of time intervals in the billing cycle. Integer
          example: 2
        metadata:
          type: object
          description: A JSON object defined by the client.
          example: {}
        nickname:
          type: string
          description: Brief description of the plan.
          example: Basic Parking
        product:
          description: "The ID of the product that this plan is for, and fields describing\
            \ this product in the plan."
          nullable: true
          oneOf:
          - $ref: "#/components/schemas/Product"
          - type: string
            example: product_ab9599d248f6d4d4311148aea68e20d0
        tiers:
          type: array
          description: Defines a tiered pricing structure. Each tier object represents
            a pricing tier.
          items:
            $ref: "#/components/schemas/Plan_tiers"
        tiers_mode:
          type: string
          description: "Determines the mode for calculating the total tiered charge.\
            \ One of the following values: \n* graduated - The total cost at each\
            \ price tier is calculated separately, then all tier charges are added\
            \ together. \n* volume - The total cost is calculated as the number of\
            \ items times the applicable tier price. Relevant when billing_scheme\
            \ is set to tiered\n"
          example: volume
          enum:
          - graduated
          - volume
        transform_usage:
          $ref: "#/components/schemas/Plan_transform_usage"
        trial_period_days:
          type: number
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
          example: 0
        usage_type:
          type: string
          description: "Determines whether the customer is billed when the service\
            \ is not actually used. Relevant when billing_scheme is set to per_unit.\
            \ One of the following: \n* metered - The customer is billed only for\
            \ actual usage. You must also set aggregate_usage. \n* licensed - The\
            \ customer is billed even if the service is not used. This is the default.\n"
          example: licensed
          enum:
          - metered
          - licensed
      description: Describes the create plan.
    Product:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
          example: true
        attributes:
          type: array
          description: "Up to 5 unique alphanumeric strings defined by the merchant.\
            \ Cannot contain spaces. For example: [ > \"size\", > \"color\"] Each\
            \ string defines the key in a key-value pair in the 'attributes' object\
            \ in the corresponding 'sku' objects."
          example:
          - armrest
          - color
          - cover
          items:
            type: string
        created_at:
          type: number
          description: "Time of creation of this product, in Unix time. Response only."
          example: 1592299157
        description:
          type: string
          description: Full text description of the product.
          example: The ultimate in comfort for the dedicated gamer
        id:
          type: string
          description: "Unique string for identification of the product. Legal input\
            \ includes alphanumeric characters and the underscore () character. If\
            \ the merchant does not define an ID, Rapyd generates it with a string\
            \ that starts with **product**."
          example: product_0d9dc6be69c769560fe913f3b086d8ca
        images:
          type: array
          description: Images associated with the product.
          example:
          - 64bit-encoded-image-1
          - 64bit-encoded-image-2
          items:
            type: string
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that appears in the line
            items in invoices.
          example: Gamer's Red Chair
        package_dimensions:
          $ref: "#/components/schemas/Product_package_dimensions"
        shippable:
          type: boolean
          description: Indicates whether the product can be shipped.
          example: true
        skus:
          type: array
          items:
            $ref: "#/components/schemas/Sku"
        statement_descriptor:
          type: string
          description: Description that is suitable for a customer's statement. Limited
            to 22 characters. Relevant when type is service. Must be null when type
            is goods.
        type:
          type: string
          description: "One of the following: \n* services - Relevant to subscriptions\
            \ and plans. \n* goods - Relevant to orders and SKUs.\n"
          example: goods
          enum:
          - goods
          - services
        unit_label:
          type: string
          description: "Determines what one unit of this product is called on customersÃ¢\
            â‚¬â„¢ receipts and invoices, such as minutes, viewings, kilometers or packages.\
            \ Relevant when type is service. Must be null when type is goods."
        updated_at:
          type: number
          description: "Time that this product was last updated, in Unix time. Response\
            \ only."
          example: 1592300812
    Refund:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the refund, in units defined by currency in the\
            \ original payment. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015."
        created_at:
          type: number
          description: "Time of creation of this refund, in Unix time. Response only."
        currency:
          $ref: "#/components/schemas/Currency_1"
        ewallets:
          type: array
          description: "An array of one object, which contains the following fields:\
            \ * ewallet_id - The ID of the wallet that the money is transferred from,\
            \ a string starting with ewallet_. * amount - Amount of the transaction\
            \ in currency units defined in currency. * percent - A decimal number\
            \ representing a percentage of the total payout. Response only."
          items:
            $ref: "#/components/schemas/Refund_ewallets"
        failure_reason:
          type: string
          description: Indicates the reason that the refund failed.
        fixed_side:
          type: string
          description: Indicates whether the FX rate is fixed for the buy side or
            for the sell side. Relevant for refunds with foreign exchange. Response
            only.
        fx_rate:
          type: string
          description: "Exchange rate for the transaction. When fixed_side is buy,\
            \ fx_rate is the buy rate. When fixed_side is sell, fx_rate is the sell\
            \ rate. Decimal number as string. Relevant to refunds with foreign exchange.\
            \ Response only."
        id:
          type: string
          description: ID of the Refund object. String starting with **refund_**.
        merchant_debited_amount:
          type: string
          description: Amount debited from the merchant. Relevant to refunds with
            foreign exchange. Response only.
        merchant_debited_currency:
          type: string
          description: Indicates the currency that is debited from the merchant. Three-letter
            ISO 4217 code. Relevant to refunds with foreign exchange. Response only.
        merchant_reference_id:
          type: string
          description: Merchant-defined ID. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment:
          type: string
          description: D of the Payment object that the refund is credited against.
            String starting with payment_.
        payment_created_at:
          type: number
          description: "Time that the original payment was created, in Unix time.\
            \ Response only."
        payment_method_type:
          type: string
          description: The original payment payment method type. Use List Payment
            Methods by Country for a list of supported types for a country
        proportional_refund:
          type: boolean
          description: Indicates whether the refund was returned in proportion to
            the amounts received by the wallets in the payment. Relevant to a refund
            for a payment split among multiple wallets.
        reason:
          type: string
          description: "Description of the reason for the refund, provided by the\
            \ merchant."
        receipt_number:
          type: number
          description: "Number of the receipt for the refund, provided by the merchant.\
            \ Response only."
        status:
          type: string
          description: Indicates the status of the refund operation
        updated_at:
          type: number
          description: "Time that this refund was last updated, in Unix time. Response\
            \ only."
    Sku:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently being sold. Default
            is false.
          example: true
        attributes:
          type: object
          description: Up to 5 alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the attributes list of the corresponding
            product object.
          example:
            color: green
        created_at:
          type: number
          description: "Time of creation of this SKU, in Unix time. Response  only."
          example: 1546353713
        currency:
          $ref: "#/components/schemas/Currency_1"
        id:
          type: string
          description: "ID of the SKU object. Alphanumeric characters and underscores.\
            \ Defined by the merchant, or a string starting with **sku**."
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
        image:
          type: string
          description: URL of image associated with the product.
        inventory:
          type: object
          description: "Contains the following fields: type - One of the following\
            \ values: finite - Physical objects that can be counted. infinite - Products\
            \ such as downloadable software. bucket - Products that are sold by measurable\
            \ quantity. quantity - The number of units available in inventory. Integer.\
            \ Relevant when type is finite. value - The status of the product on hand\
            \ in inventory. Relevant when type is bucket. One of the following: in_stock\
            \ - A normal amount of product is available in inventory. limited - There\
            \ is enough product in inventory for small orders only. * out_of_stock\
            \ - No product remains in inventory."
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: "#/components/schemas/Sku_package_dimensions"
        price:
          type: number
          description: Price of one unit. Decimal.
          example: 10.99
        product:
          type: string
          description: ID of the product that this SKU relates to.
          example: product_f383d03c34fb499eb3ada4e3c574002a
        updated_at:
          type: number
          description: "Time that this product was last updated, in Unix time. Response\
            \ only."
          example: 1546354288
    Subscription:
      type: object
      properties:
        billing:
          type: string
          description: "Determines the method of billing at the end of the billing\
            \ cycle. Set to pay_automatically - Rapyd generates a 'payment' object,\
            \ then attempts to pay it using the designated payment method."
          example: pay_automatically
        billing_cycle_anchor:
          description: "Determines the start of the next full billing cycle, as defined\
            \ in the plan described in the 'items'. One of the following values: \n\
            * now - The present day. The next billing cycle starts right now. \n*\
            \ Timestamp in Unix time - A time in the future, at or after the end of\
            \ the free trial period, not more than the length of the billing cycle.\
            \ The current billing cycle will be shorter than all other billing cycles.\
            \ Relevant to creation of the subscription. \n* unchanged - The original\
            \ billing cycle anchor is unchanged. Relevant to updating a subscription.\n"
          example: 1592379647
          oneOf:
          - type: string
            example: now
          - type: number
            example: 1703225137
        cancel_at_period_end:
          type: boolean
          description: "Determines the last date that charges accrue. true - Charges\
            \ accrue until the end of the current billing period, then the subscription\
            \ is canceled. \n* When no trial period is set, after cancel_at_period_end\
            \ is set to true the subscription will not be renewed at the next interval.\
            \ \n* When a trial period is set after cancel_at_period_end is set to\
            \ true, the subscription will not begin. false - This is the default.\
            \ \n* When the subscription is created, no end is defined. * When Cancel\
            \ Subscription is run, charges stop immediately and the subscription is\
            \ canceled.\n"
          example: true
        canceled_at:
          type: number
          description: Date and time that the subscription is canceled by the customer
            or by the client. Unix time. Response only.
          nullable: true
        created_at:
          type: number
          description: "Time of creation of this subscription, in Unix time. Response\
            \ only."
          nullable: true
          example: 1592379647
        current_period_end:
          type: number
          description: "End of the current billing cycle, in Unix time. Response only."
          example: 1594971647
        current_period_start:
          type: number
          description: "Start of the current billing cycle, in Unix time. Response\
            \ only."
          example: 1592379647
        customer_token:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
          nullable: true
          example: 30
        discount:
          type: object
          description: Contains information about the coupon that applies to the subscription.
        ended_at:
          type: number
          description: Date that the subscription was canceled or otherwise terminated.
            Unix time. Response only.
          nullable: true
        id:
          type: string
          description: ID of the Subscription object. String starting with sub_.
          example: sub_04fd8fbd78d7dd7e0e6323810a69275c
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Additional payment_options fields.
          nullable: true
        payment_method:
          type: string
          description: "Payment method ID or Payment Method object. if not specified\
            \ in this field, the payment method is the default payment method specified\
            \ for the customer."
          example: card_320dcb1879fbc41f13a81e690636f3c2
        payout_fields:
          type: object
          description: Reserved.
          nullable: true
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. \n* true - The invoice is issued when the subscription\
            \ is created. \n* false - The invoice is issued an hour after the subscription\
            \ is created. This is the default.\n"
          example: true
        status:
          type: string
          description: "Status of the subscription. One of the following: \n* active\
            \ - The customer is currently paying for this subscription. \n* canceled\
            \ - The customer has canceled this subscription, but it remains in the\
            \ Rapyd database. \n* past_due - Payment for this subscription was not\
            \ received by the end of the billing period. \n* trialing - The subscription\
            \ is in its free trial period. * unpaid - An error occurred in the payment\
            \ for this subscription. Response only.\n"
          example: active
          enum:
          - active
          - canceled
          - past_due
          - trialing
          - unpaid
        subscription_items:
          $ref: "#/components/schemas/SubscriptionItems"
        tax_percent:
          type: number
          description: "The percentage tax rate that is applied to the subtotal of\
            \ the invoice, after subtracting all discounts. Decimal. Range: 0-100,\
            \ with up to four decimal places."
          example: 10.5
        trial_end:
          type: number
          description: "The date and time of the end of the customer's free trial\
            \ period, in Unix time, or the string now. Takes precedence over trial_period_days.\
            \ If trial_end is not set by the client, Rapyd calculates this date by\
            \ adding trial_period_days to the date in created_at. Relevant when trial_period_days\
            \ is not defined."
          nullable: true
        trial_start:
          type: number
          description: "Date and time of the start of the customer's free trial period,\
            \ in Unix time. Response only."
          nullable: true
        type:
          type: string
          description: "The type of the subscription. One of the following values:\n\
            * payment \n* payout \nResponse only.\n"
          nullable: true
          example: payment
          enum:
          - payout
          - payment
    SubscriptionHostedPageReponse:
      type: object
      properties:
        billing:
          type: string
          description: "Determines the method of billing at the end of the billing\
            \ cycle. Set to pay_automatically - Rapyd generates a 'payment' object,\
            \ then attempts to pay it using the designated payment method."
          example: pay_automatically
        billing_cycle_anchor:
          description: "Determines the start of the next full billing cycle, as defined\
            \ in the plan described in the 'items'. One of the following values: \n\
            * **now** - The present day. The next billing cycle starts right now.\
            \ \n* <em>Timestamp</em> in Unix time - A time in the future, at or after\
            \ the end of the free trial period, not more than the length of the billing\
            \ cycle. The current billing cycle will be shorter than all other billing\
            \ cycles. Relevant to creation of the subscription. \n* **unchanged**\
            \ - The original billing cycle anchor is unchanged. Relevant to updating\
            \ a subscription.\n"
          example: 1592379647
          oneOf:
          - type: string
            example: now
          - type: number
            example: 1703225137
        cancel_at_period_end:
          type: boolean
          description: "Determines the last date that charges accrue. **true** - Charges\
            \ accrue until the end of the current billing period, then the subscription\
            \ is canceled. \n* When no trial period is set, after `cancel_at_period_end`\
            \ is set to **true** the subscription will not be renewed at the next\
            \ interval. \n* When a trial period is set after `cancel_at_period_end`\
            \ is set to **true**, the subscription will not begin. <BR> * **false**\
            \ - This is the default. \n* When the subscription is created, no end\
            \ is defined. * When 'Cancel Subscription' is run, charges stop immediately\
            \ and the subscription is canceled.\n"
          example: true
        cancel_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs. or by the client. Unix time. Response
            only.
        canceled_at:
          type: number
          description: Date and time that the subscription is canceled by the customer
            or by the client. Unix time. Response only.
          nullable: true
        complete_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Finish**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        coupon:
          type: string
          description: ID of a coupon to apply a discount to the subscription. String
            starting with **coupon_**.
        created_at:
          type: number
          description: "Time of creation of this subscription, in Unix time. Response\
            \ only."
          nullable: true
          example: 1592379647
        current_period_end:
          type: number
          description: "End of the current billing cycle, in Unix time. Response only."
          example: 1594971647
        current_period_start:
          type: number
          description: "Start of the current billing cycle, in Unix time. Response\
            \ only."
          example: 1592379647
        custom_elements:
          $ref: "#/components/schemas/SubscriptionHostedPageReponse_custom_elements"
        customer:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
          nullable: true
          example: 30
        discount:
          $ref: "#/components/schemas/Discount"
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        id:
          type: string
          description: ID of the subscription. String starting with **hp_sub_**.
          example: hp_sub_04fd8fbd78d7dd7e0e6323810a69275c
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see List Supported Languages.<BR> * When this parameter\
            \ is null, the language of the user's browser is used.<BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        merchant_alias:
          type: string
          description: Client's name.
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.<BR>\
            \ To configure this field, use the Client Portal."
        merchant_customer_support:
          $ref: "#/components/schemas/SubscriptionHostedPageReponse_merchant_customer_support"
        merchant_main_button:
          type: object
          description: Indicates the text for the call-to-action button on the subscription
            checkout page.
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers.<BR> To configure this field,\
            \ use the Client Portal. See Customizing Your Hosted Page."
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Portal."
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        metadata:
          type: object
          description: A JSON object defined by the client.
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If page_expiration is not set, the hosted page expires\
            \ 14 days after creation.<BR> * **Range**: 1 minute to 30 days."
        payment:
          type: object
          description: "Describes the payment that will result from the hosted page.\
            \ The id and status values are **null** until the customer successfully\
            \ submits the information on the hosted page. For more information about\
            \ the fields in the 'payment' object, see Create Payment."
        payment_fields:
          type: object
          description: Additional `payment_options` fields.
          nullable: true
        payment_method:
          type: string
          description: Payment method used for paying invoices generated by this subscription.
            The ID is a string starting with **card_** or **other_**.
          example: card_320dcb1879fbc41f13a81e690636f3c2
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        status:
          type: string
          description: "Status of the subscription. One of the following: \n* active\
            \ - The customer is currently paying for this subscription. \n* canceled\
            \ - The customer has canceled this subscription, but it remains in the\
            \ Rapyd database. \n* past_due - Payment for this subscription was not\
            \ received by the end of the billing period. \n* trialing - The subscription\
            \ is in its free trial period. * unpaid - An error occurred in the payment\
            \ for this subscription. Response only.\n"
          example: active
          enum:
          - active
          - canceled
          - past_due
          - trialing
          - unpaid
        subscription_items:
          $ref: "#/components/schemas/SubscriptionItems"
        tax_percent:
          type: number
          description: "The percentage tax rate that is applied to the subtotal of\
            \ the invoice, after subtracting all discounts. Decimal. Range: 0-100,\
            \ with up to four decimal places."
          example: 10.5
        total_count:
          type: number
          description: Total number of subscription items.
        trial_end:
          type: number
          description: "The date and time of the end of the customer's free trial\
            \ period, in Unix time, or the string **now**. Takes precedence over `trial_period_days`.\
            \ If `trial_end` is not set by the client, Rapyd calculates this date\
            \ by adding `trial_period_days` to the date in `created_at`. Relevant\
            \ when `trial_period_days` is not defined."
          nullable: true
        trial_from_plan:
          type: boolean
          description: Determines whether a free trial period can be defined in a
            plan attached to the subscription.
        trial_period_days:
          type: number
          description: "The number of days in the customer's free trial period. Integer.\
            \ Range: 0-730. This value takes precedence over trial periods that are\
            \ defined in a plan. Relevant when `trial_end` is not defined."
        trial_start:
          type: number
          description: "Date and time of the start of the customer's free trial period,\
            \ in Unix time."
          nullable: true
    SubscriptionItems:
      type: object
      properties:
        data:
          type: array
          description: A list of up to three subscription items.
          items:
            $ref: "#/components/schemas/SubscriptionItem"
        has_more:
          type: boolean
          description: Indicates whether there are more than three items in this subscription.
          example: false
        total_count:
          type: number
          description: Total number of items in this subscription.
          example: 1
        url:
          type: string
          description: URL for requesting all of the items in this subscription.
          example: /v1/subscription_items?subscription=sub_324ee75f8c26f1df94bc8cc693f3c729
    SubscriptionItem:
      type: object
      properties:
        created:
          type: number
          description: "The time the subscription item was created, in Unix time.\
            \ Response only."
        id:
          type: string
          description: ID of the Subscription Item object. String starting with subi_.
          example: subi_e5dbbf84c68e5bb7db761625158d4262
        metadata:
          type: object
          description: A JSON object defined by the client.
          example: "{\"merchant_defined\": true }"
        plan:
          $ref: "#/components/schemas/Plan"
        quantity:
          type: number
          description: The number of units of the service defined in the plan. Integer.
            This number can be updated during the billing cycle using Update Subscription
            or Update Subscription Item.
        subscription_id:
          type: string
          description: ID of the subscription that this item belongs to. String starting
            with sub_.
          nullable: true
          example: sub_0de9c79c1e2beee09499dc8220493d5
    Country_1:
      type: string
      description: Name of the country. Two-letter ISO 3166-1 alpha-2 code.
      example: GB
    Status:
      type: object
      properties:
        error_code:
          type: string
          description: Error code of the API request. Empty when the response is successful.
          example: ""
        message:
          type: string
          description: Description about the API error. Empty when the response is
            successful.
          example: ""
        operation_id:
          type: string
          description: Unique identifier (UUID) of the response.
          example: 0fd8809c-ed02-4862-9a79-507b9528ac23
        response_code:
          type: string
          description: Response code of the API error. Empty when the response is
            successful.
          example: ""
        status:
          type: string
          description: Status of the API response.
          example: SUCCESS
          enum:
          - SUCCESS
          - ERROR
    Address_1:
      type: object
      properties:
        canton:
          type: string
          description: "Name of the canton administrative subdivision, as used in\
            \ banking"
        city:
          type: string
          description: City name portion of the address. Required for issuance of
            a card to an eWallet contact
        country:
          $ref: "#/components/schemas/Country_1"
        created_at:
          type: number
          description: "Time of creation of the payment, in Unix time. Response only."
        district:
          type: string
          description: "Name of the district administrative subdivision, as used in\
            \ banking"
        id:
          type: string
          description: ID of the Address object. String starting with address_
        line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name"
        line_2:
          type: string
          description: "Line 2 of the address, such as a suite or apartment number,\
            \ or the name of a named building"
        line_3:
          type: string
          description: Line 3 of the address
        metadata:
          type: object
          description: A JSON object defined by the client
        name:
          type: string
          description: The name of a contact person or an `in care of` person at this
            address
        phone_number:
          type: string
          description: Phone number associated with this specific address in E.164
            format. Must be unique
        state:
          type: string
        zip:
          type: string
          description: Postal code portion of the address
      description: address associated with this specific Rapyd entity Payment/Customer
        etc.
    Currency_1:
      type: string
      description: "In transactions without FX, defines the currency of the transaction.\
        \ Three-letter ISO 4217 code.<BR> In FX transactions:<BR> * When `fixed_side`\
        \ is **buy**, it is the currency received in the Rapyd wallet.<BR> * When\
        \ `fixed_side` is **sell**, it is the currency charged to the buyer."
      example: GBP
    Fee:
      type: object
      properties:
        fx_fee:
          $ref: "#/components/schemas/FxFee_1"
        gross_fees:
          type: number
          description: "The total gross fees for the transaction, in units defined\
            \ by currency_code."
          example: 4.23
        net_fees:
          type: number
          description: "The total net fees for the transaction, in units defined by\
            \ `merchant_requested_currency`."
          example: 0
        transaction_fee:
          $ref: "#/components/schemas/TransactionFee_1"
        total_merchant_fees:
          type: number
          description: The amount of the fee.
      nullable: true
    FxFee_1:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* **net** - The fee is deducted from the amount paid. \nFor example,\
            \ in a payout of $100 with a fee of 5%, the recipient receives $95.00\
            \ and the $5.00 fee goes to the client wallet. \n* **gross** - The fee\
            \ is charged on top of the amount paid. \nFor example, for a transaction\
            \ of $100 with a fee of 5%, the sender pays $105.00. The recipient receives\
            \ $100.00 and the $5.00 fee goes to the client wallet.\n"
          example: gross
        value:
          type: number
          description: The amount of the fee. Percentage.
          example: 2.5
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
    TransactionFee_1:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* **net** - The fee is deducted from the amount paid. \nFor example,\
            \ in a payout of $100 with a fee of 5%, the recipient receives $95.00\
            \ and the $5.00 fee goes to the client wallet. \n* **gross** - The fee\
            \ is charged on top of the amount paid. \nFor example, for a transaction\
            \ of $100 with a fee of 5%, the sender pays $105.00. The recipient receives\
            \ $100.00 and the $5.00 fee goes to the client wallet.\n"
          example: gross
          enum:
          - net
          - gross
        fee_type:
          type: string
          description: "One of the following:<BR>* **percentage** - A percentage of\
            \ the transaction amount. For example, 5 percent is represented by **value=5**.<BR>*\
            \ **absolute**- A fixed amount"
          example: absolute
          enum:
          - percentage
          - absolute
        value:
          type: number
          description: "The amount of the fee. Decimal, including the correct number\
            \ of decimal places for the currency exponent, as defined in ISO 2417:2015.\
            \ If the amount is a whole number, use an integer and not a decimal."
          example: 2
      description: Describes the fee for processing the transaction.
    Category_1:
      type: string
      enum:
      - bank
      - card
      - cash
      - ewallet
      - rapyd_ewallet
      - bank_redirect
      - bank_transfer
    Field_1:
      type: object
      properties:
        conditions:
          type: array
          description: "Defines specific conditions when a field is required for a\
            \ payment method. When the conditions defined by conditions are met, the\
            \ field is required even though the value of is_required is false."
          items:
            $ref: "#/components/schemas/Field_1_conditions"
        description:
          type: string
          description: Description of the field.
        instructions:
          type: string
          description: Instructions for the field.
        is_required:
          type: boolean
          description: Indicates whether the field is always required for using the
            payment. method. **False** indicates an optional field.
          enum:
          - true
          - false
        is_updatable:
          type: boolean
          description: Indicates whether the field can be updated with Update Payment
            Method
        name:
          type: string
          description: Name of field.
        numeric_code:
          type: string
          description: Three-letter ISO numeric 4217 code for the currency.
        regex:
          type: string
          description: A regular expression that defines the format when type is string.
        type:
          type: string
          description: Type of the field.
          enum:
          - boolean
          - number
          - string
      description: Field Object
    inline_response_200:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PaymentMethodType"
    inline_response_400:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: MISSING_INVALID_PARAMETERS
          message: "A parameter is missing or contains an invalid value. The request\
            \ was rejected. Corrective action: Check all input parameters."
          operation_id: 9b4f03cc-8a95-4d7f-b0c6-b725d7d7ae91
          response_code: MISSING_INVALID_PARAMETERS
          status: ERROR
    inline_response_401:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: UNAUTHENTICATED_API_CALL
          message: "The request was rejected due to an authentication issue. Corrective\
            \ action: Check the status of your account in the 'Account Details' page\
            \ of the Client Portal."
          operation_id: 3f595230-0258-473c-94e5-075741ab84e2
          response_code: UNAUTHENTICATED_API_CALL
          status: ERROR
    inline_response_200_1:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/PaymentMethodTypeRequiredFields"
    inline_response_400_1:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_PAYMENT_METHOD_TYPE
          message: "The request attempted an operation that requires a payment method,\
            \ but the payment method type was not recognized or is not available for\
            \ this merchant. Corrective action: For the 'type' field in the 'payment_method'\
            \ object or in the 'data' object, use a payment method type that this\
            \ merchant is authorized to use."
          operation_id: 9b4f03cc-8a95-4d7f-b0c6-b725d7d7ae91
          response_code: ERROR_GET_PAYMENT_METHOD_TYPE
          status: ERROR
    inline_response_200_2:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
    inline_response_400_2:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_LIMIT
          message: "The request tried to retrieve a list of objects, but the 'limit'\
            \ query parameter was not set to a valid value. The request was rejected.\
            \ Corrective action: Set 'limit' to an integer between 1 and 100."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: INVALID_LIMIT
          status: ERROR
    v1payments_ewallets:
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in `currency`. Decimal.<BR>If the total amount of the payment\
            \ is not fully accounted for, the balance appears in the client wallet.<BR>Relevant\
            \ when `percentage` is not set."
        ewallet:
          type: string
          description: ID of the wallet. String starting with **ewallet_**.
        percentage:
          type: number
          description: "The percentage that is paid to the wallet out of the total\
            \ payment. Positive decimal between 0 and 100. More than 2 decimal places\
            \ are rounded up to the next 0.01%. For example, 10 percent is represented\
            \ by **percentage=\"10\"**.<BR>If the total amount of the payment is not\
            \ fully accounted for, the balance appears in the client wallet.<BR>Relevant\
            \ when amount is not set."
      description: "Specifies the wallets that the money is collected into. If this\
        \ is left blank, the money goes into the oldest **collection**-type client\
        \ wallet. If there is no **collection** client wallet, the money goes into\
        \ the oldest **general**-type client wallet."
    v1_payments_body:
      required:
      - amount
      - complete_payment_url
      - currency
      - error_payment_url
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address_1"
        amount:
          type: number
          description: "The amount received by the recipient, in units of the currency\
            \ defined in `currency`. Decimal, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015. To verify\
            \ a card, set to **0**."
          example: 100.0
        capture:
          type: boolean
          description: Determines when the payment is processed for capture. Relevant
            to card payments.<BR> * **true** - The payment is captured immediately.<BR>*
            **false** - The payment is captured at a later time.
          default: true
        client_details:
          $ref: "#/components/schemas/ClientDetailsObject"
        complete_payment_url:
          type: string
          description: URL where the customer is redirected after successfully completing
            an operation on an external page.
        currency:
          $ref: "#/components/schemas/Currency_1"
        customer:
          type: string
          description: String or object describing the customer. Required if `payment_method`
            is blank.<BR> * **string** - ID of the customer who is making the payment.
            String starting with **cus_**.<BR> * **object** - Contains all fields
            required for the customer. See 'Create Customer'.
        description:
          type: string
          description: Description of the payment transaction.
        error_payment_url:
          type: string
          description: URL where the customer is redirected if an error occurs during
            or after an operation on a hosted page. Does not support localhost URLs.
        escrow:
          type: boolean
          description: Determines whether the payment is held in escrow for later
            release.
          default: false
        escrow_release_days:
          pattern: "/[1-90]/"
          type: integer
          description: "Determines the number of days after creation of the payment\
            \ that funds are released from escrow. Funds are released at 5:00 pm GMT\
            \ on the day indicated. Integer, range between 1-90. Default is 90."
        ewallet:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
        ewallets:
          $ref: "#/components/schemas/v1payments_ewallets"
        expiration:
          type: number
          description: "End of the time allowed for customer to make this payment,\
            \ in Unix time. Must be after the current time. Default is:<BR>* For card\
            \ payment methods: 7 days<BR>* For other payment methods: 2 weeks<BR>Relevant\
            \ to all payment methods where the `is_expirable` field is **true** in\
            \ the response to 'List Payment Methods by Country'.<BR>**Note:** Relevant\
            \ to card payments: In some cases, the card networks require a shorter\
            \ expiration date of the payment. In these cases, the expiration will\
            \ be updated. Refer to the `PAYMENT_COMPLETED` webhook to view the updated\
            \ expiration value."
          example: 1754845278
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer).<BR>* **buy** - The currency that the Rapyd\
            \ Wallet receives for goods or services. Fixed side buy relates to the\
            \ seller (merchant) funds. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD.<BR>* **sell** - The currency that the buyer is charged for\
            \ purchasing goods or services. Fixed side sell relates to the buyer (customer)\
            \ funds. For example, a US-based merchant wants to charge a buyer 2,000\
            \ MXN and will accept whatever amount in USD that is converted from 2,000\
            \ MXN."
          default: buy
          enum:
          - buy
          - sell
        group_payment:
          type: string
          description: "ID of the group payment, a string starting with **gp_**.<BR>\
            \ Relevant to replacing a payment that failed."
        initiation_type:
          type: string
          description: "Indicates how the transaction was initiated. One of the following:<BR>*\
            \ **customer_present** - The transaction was initiated by the customer.<BR>*\
            \ **installment** - The transaction was initiated by a subscription where\
            \ there is a fixed number of installments.<BR>* **moto** - The transaction\
            \ was initiated by the merchant or Rapyd client for a mail order or telephone\
            \ order.<BR>Note:   To enable moto in the production environment, contact\
            \ Rapyd Client Support.<BR>* **recurring** - The transaction was initiated\
            \ by a subscription where charges are made at regular intervals and there\
            \ is no end date.<BR>* **unscheduled** - The transaction is a top-up transaction\
            \ that was previously authorized by the cardholder and was initiated by\
            \ the merchant or Rapyd client."
          enum:
          - customer_present
          - installment
          - moto
          - recurring
          - unscheduled
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fees:
          $ref: "#/components/schemas/Fee"
        payment_method:
          description: "String (`payment_method` ID) or object. If not specified in\
            \ this field, the payment method is the default payment method specified\
            \ for the customer. Required when there is no default payment method."
          oneOf:
          - type: string
          - $ref: "#/components/schemas/PaymentMethodType"
        payment_method_options:
          type: object
          description: "Object describing additional payment method fields required\
            \ for the payment. These values are not saved as part of the payment method\
            \ object. <BR>To determine the fields required, run 'Get Payment Method\
            \ Required Fields'."
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code.<BR>* When `fixed_side` is **sell**, it is the currency received\
            \ in the Rapyd Wallet.<BR>When `fixed_side` is **buy**, it is the currency\
            \ charged to the buyer (customer).<BR>Relevant to payments with FX.<BR>See\
            \ also `currency` and **fixed_side** fields."
        save_payment_method:
          type: boolean
          description: Relevant to card payment methods when the request includes
            full card details. Determines whether Rapyd saves the payment method for
            future use.<BR>* **true** - Save the payment method for future use.<BR>*
            **false** - Do not save the payment method.
          default: false
          enum:
          - true
          - false
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's bank statement.
    inline_response_200_3:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Payment"
    inline_response_400_3:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_PAYMENT
          message: "The request tried to create a payment, but the payment method\
            \ was not found. The request was rejected. Corrective action: Use the\
            \ ID of the payment method in the 'payment_method' field. Alternatively,\
            \ if the customer has a default payment method, you can use the ID of\
            \ the customer in the 'customer' field."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_CREATE_PAYMENT
          status: ERROR
    inline_response_400_4:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_PAYMENT
          message: "The request tried to retrieve a payment, but the payment was not\
            \ found. The request was rejected. Corrective action: Use a valid payment\
            \ ID."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_PAYMENT
          status: ERROR
    payments_paymentId_body:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address_1"
        description:
          type: string
          description: Description of the payment.
        escrow:
          type: boolean
          description: "To release escrow funds immediately, set to false. If there\
            \ are multiple sellers, the funds are released to all of them. Relevant\
            \ to payments with escrow."
        escrow_release_days:
          pattern: "/[1-90]/"
          type: integer
          description: Defines the number of days after the creation of the payment
            that the funds are automatically released. Relevant when escrow is true.
          default: 90
        initiation_type:
          type: string
          description: "Indicates how the transaction was initiated. One of the following:<BR>*\
            \ **customer_present** - The transaction was initiated by the customer.<BR>*\
            \ **installment** - The transaction was initiated by a subscription where\
            \ there is a fixed number of installments.<BR>* **moto** - The transaction\
            \ was initiated by the merchant or Rapyd client for a mail order or telephone\
            \ order.<BR>Note:   To enable moto in the production environment, contact\
            \ Rapyd Client Support.<BR>* **recurring** - The transaction was initiated\
            \ by a subscription where charges are made at regular intervals and there\
            \ is no end date.<BR>* **unscheduled** - The transaction is a top-up transaction\
            \ that was previously authorized by the cardholder and was initiated by\
            \ the merchant or Rapyd client."
          enum:
          - customer_present
          - installment
          - moto
          - recurring
          - unscheduled
        metadata:
          type: object
          description: A JSON object defined by the client.
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
    inline_response_400_5:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CANCEL_PAYMENT
          message: "The request tried to cancel a payment, but the operation failed.\
            \ Corrective action: Check all input fields, and verify that the payment\
            \ exists and was not already closed."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_CANCEL_PAYMENT
          status: ERROR
    paymentId_capture_body:
      type: object
      properties:
        amount:
          type: number
          description: "The amount to capture, in units of the currency defined in\
            \ currency. Decimal, including the correct number of decimal places for\
            \ the currency exponent, as defined in ISO 2417:2015."
          default: 0.0
        receipt_email:
          type: string
          description: Email address that the receipt for this transaction is sent
            to.
        statement_descriptor:
          type: string
          description: A text description suitable for a customer's payment statement.
            Some payment methods truncate this string to a limited number of characters.
    payments_completePayment_body:
      type: object
      properties:
        token:
          type: string
          description: ID of the payment to complete. String starting with **payment_**.
        param1:
          type: string
          description: "Depends on the type of payment method. <BR>* bank_redirect\
            \ - **rapyd** <BR>* bank_transfer - The value returned in the code field\
            \ of the `textual_codes` object. You can find this field in the response\
            \ to the 'Create Payment' request. If the `code` field is empty, `param1`\
            \ is not required.<BR>* cash - Not required.<BR>* ewallet - Not required."
        param2:
          type: string
          description: "Depends on the type of payment method.<BR>* bank_redirect\
            \ - **success** <BR>* bank_transfer -  Original payment amount. Decimal,\
            \ including the correct number of decimal places for the currency exponent,\
            \ as defined in ISO 2417:2015.<BR>* cash - Not required.<BR>* ewallet\
            \ - Not required."
    inline_response_200_4:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/CheckoutPageResponse"
    inline_response_400_6:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_HOSTED_PAGE_PAYMENT
          message: "The request tried to retrieve a hosted page, but the page was\
            \ not found. The request was rejected. Corrective action: Use the ID of\
            \ a valid hosted page."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_HOSTED_PAGE_PAYMENT
          status: ERROR
    v1checkout_account_funding_transaction:
      type: object
      properties:
        ewallet:
          type: string
          description: "ID of a Rapyd wallet. String starting with **ewallet_**. The\
            \ wallet contact must include first name, last name, country, and the\
            \ `address` object, which must contain `line_1` (street and number), `city`,\
            \ and `zip` (postal code). The cardholder's first name, last name, and\
            \ country must match the values of the wallet contact.ID of a Rapyd wallet."
          example: ewallet_d2ab10025f4da04a5442ea264fd98f53
        payment_method_types:
          description: Array of strings. One or more card payment method types that
            support AFT.
          example:
          - at_mastercard_card
      description: "Details of an account funding transaction (AFT), which transfers\
        \ funds from a card to a cardholder's wallet. You can transfer funds from\
        \ a card directly to the cardholder's own wallet. You can also transfer the\
        \ funds indirectly through the **company** wallet of a licensed business entity\
        \ that manages the customer's wallet. The business forwards the funds to the\
        \ customer's wallet. When a business transfers the funds, `customer` is required\
        \ in the root of the request. The customer address must include `phone_number`,\
        \ `line_1` (street and number), city, country, and zip (postal code). This\
        \ feature is in beta testing. Relevant to payment method types that support\
        \ AFT. To enable this feature, contact Rapyd Client Support. Contains the\
        \ following required fields:"
    v1checkout_cart_items:
      properties:
        amount:
          type: number
          description: The price of the item in the currency defined in `currency`.
        amount_off:
          type: number
          description: "The size of a discount, measured in the amount of money. Decimal.\
            \ Range: Positive decimal number, including the correct number of decimal\
            \ places for the currency exponent, as defined in ISO 2417:2015.<BR> Relevant\
            \ when percent_off is not set."
        image:
          type: string
          description: The image that appears in the checkout page for this item.
        name:
          type: string
          description: The name of the item.
        percent_off:
          type: number
          description: "The size of a discount, measured in percent. Integer. Range:\
            \ 1-100.<BR> Relevant when `amount_off` is not set."
        quantity:
          type: number
          description: The quantity of the item.
      description: Describes the cart items that the customer is purchasing. These
        items are displayed at the checkout page.
    v1checkout_custom_elements:
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Determines whether the customer is asked to fill in the billing\
            \ address. Relevant when a card payment method is selected. <BR> * **true**\
            \ - The address fields appear on the checkout page.<BR> * **false** -\
            \ The address fields appear only if the country is **US, **GB** or **CA**."
        cardholder_name:
          type: string
          description: "The name of the card owner, printed on the front of the card."
        display_description:
          type: boolean
          description: Determines whether the checkout page displays the payment description.<BR>*
            **true** - The payment description appears.<BR> * **false** - The payment
            description does not appear.<BR> Relevant when description is passed in
            the Create Checkout Page request.
        dynamic_currency_conversion:
          type: boolean
          description: "Determines whether the checkout page displays multiple currency\
            \ options for a payment.<BR> * **true** - Multiple currency options appear.<BR>\
            \ * **false** - Currency options do not appear.<BR>When the customer selects\
            \ the requested currency, the checkout page displays the following information:<BR>*\
            \ The original amount and currency.<BR> * The converted amount in the\
            \ requested currency.<BR> * The exchange rate.<BR> Relevant when: <BR>\
            \ * The Create Checkout Page request passes requested_currency.<BR> *\
            \ `fixed_side` is **buy**. <BR> * One or more payment methods support\
            \ the values for `currency` and `requested_currency`."
        merchant_color:
          type: string
          description: reserved
        merchant_currency_only:
          type: boolean
          description: "In a payment with FX where fixed_side=**buy**, determines\
            \ whether the buyer's currency and the exchange rate appear. One of the\
            \ following:<BR> * **true** - The currency and the exchange rate are hidden.<BR>\
            \ * **false** - The currency and the exchange rate appear."
        payment_fees_display:
          type: boolean
          description: Determines whether payment fees appear on the checkout page.<BR>
            * **true** - Payment fees appear when the `payment_fees` object is set
            in the 'Create Checkout Page' request.<BR> * **false** - Payment fees
            do not appear.
        required_customer_fields:
          description: Indicates the list of fields that the customer has to fill
            in on the payment page before completing the payment via hosted checkout.
            Valid values include:<BR>* **name** â€“ The customer's full name (default).<BR>
            * **email** â€“ The customer's email address.<BR> * **phone_number** â€“ The
            customer's phone number.<BR> * **address** â€“ The address of the customer.
        save_card_default:
          type: boolean
          description: Determines whether the save card checkbox is checked by default.<BR>
            * **true** - The **save card** checkbox is checked.<BR> * **false** -
            The **save card** checkbox is cleared.<BR> Relevant when `customer_id`
            is passed in the 'Create Checkout Page' request.
      description: Describes customizations of the page as it appears to the customer.
    v1_checkout_body:
      required:
      - amount
      - country
      - currency
      type: object
      properties:
        account_funding_transaction:
          $ref: "#/components/schemas/v1checkout_account_funding_transaction"
        amount:
          type: number
          description: "The amount of the payment, in units of the currency defined\
            \ in `currency`. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        cancel_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        capture:
          type: boolean
          description: "Determines when the payment is processed for capture. Relevant\
            \ to card payments.<BR>* **true** - Capture the payment immediately.<BR>*\
            \ **false** - Authorize the payment, then capture some or all of the payment\
            \ at a later time, when the merchant runs the Capture Payment method.<BR>Note:\
            \ Some card payment methods do not support delayed capture."
          default: true
          enum:
          - true
          - false
        cart_items:
          $ref: "#/components/schemas/v1checkout_cart_items"
        complete_checkout_url:
          type: string
          description: URL where the customer is redirected after pressing **Finish**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
          example: FR
        currency:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country. <BR><BR>
            **Transactions without FX** - Indicates the currency of the amount received
            by the recipient. BR><BR> **FX transactions** - Indicates the currency
            of the amount paid by the buyer.
          example: EUR
        custom_elements:
          $ref: "#/components/schemas/v1checkout_custom_elements"
        customer:
          type: string
          description: "ID of the customer. String starting with **cus_**. When used,\
            \ the customer has the option to save card details for future purchases.\
            \ This field is for some payment methods and for all **company**-type\
            \ wallets."
        description:
          type: string
          description: "Description of the payment transaction. To display the description,\
            \ set `display_description` to **true** in `custom_elements`."
        error_payment_url:
          type: string
          description: URL where the customer is redirected if an error occurs during
            or after an operation on a hosted page. Does not support localhost URLs.
        escrow:
          type: boolean
          description: Determines whether the payment is held in escrow for later
            release.
          default: false
        escrow_release_days:
          pattern: "/[1-90]/"
          type: integer
          description: "Determines the number of days after creation of the payment\
            \ that funds are released from escrow. Funds are released at 5:00 pm GMT\
            \ on the day indicated. Integer, range between 1-90. Default is 90."
        ewallet:
          type: string
          description: ID of the wallet that the money is paid into. String starting
            with **ewallet_**. Relevant when the request includes a single wallet.
        ewallets:
          $ref: "#/components/schemas/v1payments_ewallets"
        expiration:
          type: number
          description: "End of the time allowed for customer to make this payment,\
            \ in Unix time. Must be after the current time. Default is:<BR>* For card\
            \ payment methods: 7 days<BR>* For other payment methods: 2 weeks<BR>Relevant\
            \ to all payment methods where the `is_expirable` field is **true** in\
            \ the response to 'List Payment Methods by Country'.<BR>**Note:** Relevant\
            \ to card payments: In some cases, the card networks require a shorter\
            \ expiration date of the payment. In these cases, the expiration will\
            \ be updated. Refer to the `PAYMENT_COMPLETED` webhook to view the updated\
            \ expiration value."
          example: 1754845278
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer).<BR>* **buy** - The currency that the Rapyd\
            \ Wallet receives for goods or services. Fixed side buy relates to the\
            \ seller (merchant) funds. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD.<BR>* **sell** - The currency that the buyer is charged for\
            \ purchasing goods or services. Fixed side sell relates to the buyer (customer)\
            \ funds. For example, a US-based merchant wants to charge a buyer 2,000\
            \ MXN and will accept whatever amount in USD that is converted from 2,000\
            \ MXN."
          default: buy
          enum:
          - buy
          - sell
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'. <BR> * When this parameter\
            \ is null, the language of the user's browser is used. <BR>* If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
          default: en
        merchant_fields:
          type: object
          description: "Object that contains payment method fields that the merchant\
            \ fills in. Can include one or both of the following:<BR>* `payment_method_options`\
            \ object.<BR>* `payment_options` object.<BR>The fields of both objects\
            \ are not displayed to the customer on the hosted page. To retrieve the\
            \ fields of both objects for a payment method, use 'Get Payment Method\
            \ Required Fields'."
        merchant_reference_id:
          type: string
          description: Identifier defined by the client for reference purposes. Limited
            to 45 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        page_expiration:
          type: string
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. Range: 1 minute to 30 days."
        payment_expiration:
          type: string
          description: "Length of time for the payment to be completed after it is\
            \ created, measured in seconds. When both `expiration` and `payment_expiration`\
            \ are set, the payment expires at the earlier time."
        payment_fees:
          $ref: "#/components/schemas/Fee"
        payment_method_required_fields:
          description: "Relevant only to subsequent card payments on the hosted checkout\
            \ page. The object contains the hosted checkout pageâ€™s displayed payment\
            \ method fields that for increased security, the customer is always required\
            \ to fill in. Must include the following object:<BR>The `payment_method_options`\
            \ object which includes one or more of its required fields. To retrieve\
            \ the fields of a payment method, use 'Get Payment Method Required Fields'."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, **dk_visa_card**. For a list of payment methods, use [List\
            \ Payment Methods by Country](https://docs.rapyd.net/en/list-payment-methods-by-country.html)."
        payment_method_type_categories:
          type: array
          description: A list of the categories of payment method that are supported
            on the checkout page. The categories appear on the page in the order provided.<BR>*
            **bank_transfer**<BR>* **bank_redirect**<BR>* **card**<BR>* **cash**<BR>*
            **ewallet**
          example:
          - cash
          - card
          - ewallet
          items:
            type: string
        payment_method_types_exclude:
          type: array
          description: List of payment methods that are excluded from display on the
            checkout page.
          items:
            type: string
        payment_method_types_include:
          type: array
          description: List of payment methods that are displayed on the checkout
            page. The payment methods appear on the page in the order provided.
          items:
            type: string
        recurrence_type:
          type: string
          description: "Specifies the primary intended purpose of the saved payment\
            \ method. One of the following values: <BR> * **installment** - Regular\
            \ payments for a defined number of payment cycles. <BR> * **recurring**\
            \ - Regular payments for an indefinite period. <BR> * **unscheduled**\
            \ - Individual unrelated payments.<BR>When value is **recurring** or **installment**\
            \ then `save_payment_method` must be **true**.<BR>In subsequent payments,\
            \ the checkbox **Save this card for future payments** is not displayed\
            \ on the Hosted Checkout page. Only cards that were previously used by\
            \ the customer and have a `recurrence_type` set to **recurring** or **installment**\
            \ are displayed."
          default: unscheduled
          enum:
          - installment
          - recurring
          - unscheduled
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code.<BR>* When `fixed_side` is **sell**, it is the currency received\
            \ in the Rapyd Wallet.<BR>When `fixed_side` is **buy**, it is the currency\
            \ charged to the buyer (customer).<BR>Relevant to payments with FX.<BR>See\
            \ also `currency` and **fixed_side** fields."
        require_card_cvv:
          type: boolean
          description: Require the customer to enter their Card Verification Value
            (CVV) for each subsequent payment made using a saved card. Relevant to
            card payments.<BR>* **true** - Customer must enter CVV.<BR>* **false**
            - Customer not required to enter CVV.
          default: false
          enum:
          - true
          - false
        statement_descriptor:
          type: string
          description: A text description suitable for a customer's payment statement.
            5-22 characters.
    inline_response_400_7:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_UNRECOGNIZED_PAYMENT_METHOD_TYPE
          message: "The request tried to create a checkout page, but the payment method\
            \ type specified is not available or does not exist at all. The request\
            \ was rejected. Corrective action: Specify payment method types that are\
            \ valid for the country. Use â€˜List Payment Methods by Countryâ€™."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_HOSTED_PAGE_UNRECOGNIZED_PAYMENT_METHOD_TYPE
          status: ERROR
    inline_response_200_5:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
    inline_response_400_8:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_SUBSCRIPTION_LIST
          message: "The request tried to retrieve a list of subscriptions, but there\
            \ was an error in the query syntax. The request was rejected. Corrective\
            \ action: Use the correct names of all query parameters."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_SUBSCRIPTION_LIST
          status: ERROR
    v1paymentssubscriptions_subscription_items:
      type: object
      properties:
        plan:
          type: string
          description: ID of the plan assigned to this subscription item.
        quantity:
          type: number
    payments_subscriptions_body:
      required:
      - customer
      - subscription_items
      type: object
      properties:
        billing:
          type: string
          description: Determines the method of billing. Set to **pay_automatically**.
        billing_cycle_anchor:
          type: number
          description: "Determines the start of the next billing cycle, as defined\
            \ in the plan described in the 'items'. Value must be timestamp in Unix\
            \ time."
        cancel_at_period_end:
          type: boolean
          description: Terminates the subscription at the end of the current billing
            period.
        coupon:
          type: string
          description: "The ID of a discount coupon that applies to all subscription\
            \ items associated with this subscription. If the coupon defines a fixed\
            \ monetary discount, it must use the same currency as the subscription's\
            \ plan."
        customer:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with cus_.
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          $ref: "#/components/schemas/Payment"
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: "#/components/schemas/PaymentMethodType"
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. When true, the invoice is issued when the subscription\
            \ is created. When false (the default), the invoice is issued an hour\
            \ after the subscription is created."
        subscription_items:
          type: array
          description: Array of subscription items. Each item contains a plan (required)
            and a quantity
          items:
            $ref: "#/components/schemas/v1paymentssubscriptions_subscription_items"
        tax_percent:
          type: number
          description: The percentage of tax that is applied to the entire amount
            of the invoice.
        trial_end:
          type: number
          description: "The time of the end of the customer's free trial period. If\
            \ trial_from_plan is set, leave this parameter unset."
        trial_from_plan:
          type: boolean
          description: "Determines whether a free trial period can be defined in a\
            \ 'plan' object attached to the subscription. If trial_end is set, leave\
            \ this parameter unset."
        trial_period_days:
          type: number
          description: The number of days in the customer's free trial period.
    inline_response_200_6:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Subscription"
    inline_response_400_9:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DAYS_UNTIL_DUE_BILLING_INCORRECT
          message: "The request tried to create or update a subscription, but the\
            \ 'days_until_due' body parameter was set and 'billing' was not set to\
            \ 'send_invoice'. The request was rejected. Corrective action: Set 'billing'\
            \ to 'send_invoice'."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_DAYS_UNTIL_DUE_BILLING_INCORRECT
          status: ERROR
    inline_response_400_10:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_SUBSCRIPTION
          message: "The request attempted an operation that requires a subscription,\
            \ but the subscription was not found. The request was rejected. Corrective\
            \ action: Use the ID of an active subscription."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_SUBSCRIPTION
          status: ERROR
    subscriptions_subscriptionId_body:
      type: object
      properties:
        billing:
          type: string
          description: Determines the method of billing. Set to pay_automatically.
        billing_cycle_anchor:
          type: string
          description: "Determines the start of the next billing cycle, as defined\
            \ in the plan described in the 'items'. Value must be timestamp in Unix\
            \ time."
        cancel_at_period_end:
          type: boolean
          description: Terminates the subscription at the end of the current billing
            period.
        coupon:
          type: string
          description: "The ID of a discount coupon that applies to all subscription\
            \ items associated with this subscription. If the coupon defines a fixed\
            \ monetary discount, it must use the same currency as the subscription's\
            \ plan."
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          $ref: "#/components/schemas/PaymentOptions"
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: "#/components/schemas/PaymentMethodType"
        simultaneous_invoice:
          type: boolean
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. When true, the invoice is issued when the subscription\
            \ is created. When false (the default), the invoice is issued an hour\
            \ after the subscription is created."
        subscription_items:
          type: array
          description: Array of subscription items. Each item contains a plan (required)
            and a quantity
          items:
            type: string
        tax_percent:
          type: number
          description: The percentage of tax that is applied to the entire amount
            of the invoice.
        trial_end:
          type: number
          description: "The time of the end of the customer's free trial period. If\
            \ trial_from_plan is set, leave this parameter unset."
        trial_from_plan:
          type: boolean
          description: "Determines whether a free trial period can be defined in a\
            \ 'plan' object attached to the subscription. If trial_end is set, leave\
            \ this parameter unset."
        trial_period_days:
          type: number
          description: The number of days in the customer's free trial period.
    inline_response_400_11:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_UPDATE_SUBSCRIPTION_STATUS_NOT_UPDATABLE
          message: "The request tried to update a free trial period for a subscription,\
            \ but the subscription status was not 'active' or 'trialing'. The request\
            \ was rejected. Corrective action: Create a new subscription with a new\
            \ trial period."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_UPDATE_SUBSCRIPTION_STATUS_NOT_UPDATABLE
          status: ERROR
    inline_response_400_12:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CANCEL_SUBSCRIPTION
          message: "The request tried to cancel a subscription, but the subscription\
            \ was not found. The request was rejected. Corrective action: Determine\
            \ whether the subscription was previously canceled, and check all input\
            \ parameters."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_CANCEL_SUBSCRIPTION
          status: ERROR
    inline_response_200_7:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_7_data"
    inline_response_400_13:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_SUBSCRIPTION_DISCOUNT
          message: "The request tried to delete a discount from a subscription, but\
            \ the operation failed. Corrective action: Determine whether the discount\
            \ was already deleted, and why there were multiple requests to delete\
            \ it."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_DELETE_SUBSCRIPTION_DISCOUNT
          status: ERROR
    checkout_subscriptions_body:
      required:
      - billing
      - customer
      - subscription_items
      type: object
      properties:
        billing:
          type: string
          description: Determines the method of billing. Set to **pay_automatically**.
        cancel_at_period_end:
          type: boolean
          description: "Determines the last date that charges accrue.<BR>* **true**\
            \ - Charges accrue until the end of the current billing period, then the\
            \ subscription is canceled. When no trial period is set, after this parameter\
            \ is set to **true** the subscription will not be renewed at the next\
            \ interval. When a trial period is set after this parameter is set to\
            \ true, the subscription will not begin.<BR>* **false** - When the subscription\
            \ is created, no end is defined. When Cancel Subscription is run, charges\
            \ stop immediately and the subscription is canceled."
          default: false
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        coupon:
          type: string
          description: "The ID of a coupon to apply a discount to the subscription.\
            \ If the coupon defines a fixed monetary discount, it must use the same\
            \ currency as the subscription. String starting with **coupon_**."
        customer:
          type: string
          description: ID of the customer who pays for this subscription. String starting
            with **cus_**.
        days_until_due:
          type: number
          description: Number of days from the invoice date for customer to complete
            the payment.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'. <BR> * When this parameter\
            \ is null, the language of the user's browser is used. <BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        metadata:
          type: object
          description: A JSON object defined by the client.
        merchant_main_button:
          type: string
          description: "Defines the text for the call-to-action button on the subscription\
            \ checkout page.<BR> * When there is no trial period, the values are:\
            \ **subscribe** (default), **purchase**, **pay** <BR> When there is a\
            \ trial period, the value is **start_trial** (default)."
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If page_expiration is not set, the hosted page expires\
            \ 14 days after creation.<BR> Range: 1 minute to 30 days."
        payment_fees:
          $ref: "#/components/schemas/Fee"
        payment_fields:
          $ref: "#/components/schemas/Payment"
        payment_method:
          description: Payment Method object or ID.
          oneOf:
          - type: string
          - $ref: "#/components/schemas/PaymentMethodType"
        subscription_items:
          type: array
          description: Array of subscription items. Each item contains a plan (required)
            and a quantity
          items:
            $ref: "#/components/schemas/v1paymentssubscriptions_subscription_items"
        tax_percent:
          type: number
          description: The percentage of tax that is applied to the entire amount
            of the invoice.
        trial_end:
          type: number
          description: "The date and time of the end of the customer's free trial\
            \ period, in Unix time, or the string **now**. Takes precedence over `trial_period_days`.\
            \ If `trial_end` is not set by the client, Rapyd calculates this date\
            \ by adding `trial_period_days` to the date in `created_at`. <BR> Relevant\
            \ when `trial_period_days` is not defined."
        trial_from_plan:
          type: boolean
          description: Determines whether a free trial period can be defined in a
            'plan' object attached to the subscription.<BR> * **true** - Free trials
            can be defined in plans that are attached to the subscription. <BR> *
            **false** - Definitions of free trial in plans are ignored.
          default: false
        trial_period_days:
          type: number
          description: "The number of days in the customer's free trial period. Integer.\
            \ Range: 0-730. This value takes precedence over trial periods that are\
            \ defined in a plan. Relevant when `trial_end` is not defined.The number\
            \ of days in the customer's free trial period."
    inline_response_200_8:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/SubscriptionHostedPageReponse"
    inline_response_400_14:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_GET_CUSTOMER
          message: "The request tried to create a checkout page, but the customer\
            \ was not found. The request was rejected. Corrective action: For 'customer',\
            \ provide a valid customer ID, a string starting with 'cus_'."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_HOSTED_PAGE_GET_CUSTOMER
          status: ERROR
    inline_response_200_9:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    v1products_package_dimensions:
      type: object
      properties:
        height:
          type: number
        length:
          type: number
        weight:
          type: number
        width:
          type: number
      description: Describes the physical size and weight of the product. Relevant
        when type is goods.
    v1_products_body:
      required:
      - name
      - type
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
            Default is true.
        attributes:
          type: array
          description: Array of up to 5 alphanumeric strings defined by the merchant.
            Each string defines the key in a key-value pair in the 'attributes' object
            in the corresponding 'sku' objects.
          items:
            type: string
        description:
          type: string
          description: Full text description of the product.
        id:
          type: string
          description: "Unique string for identification of the product. Legal input\
            \ includes all the English alphanumeric characters and the underscore\
            \ (_) character. If the merchant does not define an ID, Rapyd generates\
            \ it with a string that starts with product_"
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that is displayed to the
            customer.
        package_dimensions:
          $ref: "#/components/schemas/v1products_package_dimensions"
        shippable:
          type: boolean
          description: Indicates whether the product is physically shipped to the
            customer. Relevant when type is goods. Default is false.
          example: false
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's invoice.
            Limited to 22 characters. Relevant when type is service.
        type:
          type: string
          description: "One of the following - services, goods"
          enum:
          - services
          - goods
        unit_label:
          type: string
          description: "A label that represents units of this product, such as seats,\
            \ on customersâ€™ invoices. Relevant when type is service."
    inline_response_200_10:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Product"
    inline_response_400_15:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_PRODUCT
          message: "The request tried to perform an operation that requires a product,\
            \ but the product was not found. The request was rejected. Corrective\
            \ action: Use a valid product ID."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: INVALID_PRODUCT
          status: ERROR
    products_productsId_body:
      required:
      - name
      - type
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
            Default is true.
        attributes:
          type: array
          description: Array of up to 5 alphanumeric strings defined by the merchant.
            Each string defines the key in a key-value pair in the 'attributes' object
            in the corresponding 'sku' objects.
          items:
            type: string
        metadata:
          type: object
          description: A JSON object defined by the client.
        name:
          type: string
          description: The name of the product or service that is displayed to the
            customer.
        package_dimensions:
          $ref: "#/components/schemas/v1products_package_dimensions"
        statement_descriptor:
          type: string
          description: A text description that appears in the customer's invoice.
            Limited to 22 characters. Relevant when type is service.
        unit_label:
          type: string
          description: "A label that represents units of this product, such as seats,\
            \ on customersÃ¢â‚¬â„¢"
    inline_response_400_16:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_PRODUCT_ATTRIBUTES
          message: "The request tried to create or update a product, but the 'attributes'\
            \ body parameter was not found or is not an array. The request was rejected.\
            \ Corrective action: Define the 'attributes' body parameter as an array."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: INVALID_PRODUCT_ATTRIBUTES
          status: ERROR
    inline_response_200_11:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_11_data"
    inline_response_400_17:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_PRODUCT
          message: "The request tried to delete a product, but the product was not\
            \ found. The request was rejected. Corrective action: Determine whether\
            \ the product was already deleted, and why there were multiple requests\
            \ to delete it."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_DELETE_PRODUCT
          status: ERROR
    inline_response_200_12:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Plan"
    v1plans_transform_usage:
      type: object
      properties:
        divide_by:
          type: number
          description: Indicates the divisor in the transformation calculation. Integer.
        round:
          type: string
          description: Indicates whether the reported number of units should be rounded
            **up** or **down** to the next whole quantity specified in `divide_by`.
      description: Defines the transformation that is applied to the reported usage
        before the billed price is computed.
    v1_plans_body:
      required:
      - currency
      - interval
      - product
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the plan is available for a subscription.
            Can be **true** when the product associated with this plan is active.
        aggregate_usage:
          type: string
          description: Determines which quantity is used to calculate the pricing.
            Required when `usage_type` is **metered**. Relevant when `billing_scheme`
            is set to **per_unit**.
          default: sum
          enum:
          - max
          - sum
          - last_during_period
          - last_ever
        amount:
          type: number
          description: "The amount to charge in the billing cycle. For a free service,\
            \ use 0. Relevant when billing_scheme is set to per_unit. When the billing_scheme\
            \ is set to tiered, set the amount in the tiers array."
        billing_scheme:
          type: string
          description: "Describes how to compute the price per billing period. One\
            \ of the following values - per_unit, tiered"
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in fields
            that represent monetary amounts. Uppercase.
        id:
          type: string
          description: "Unique ID for this payment plan. English alphanumeric characters\
            \ and underscore. Limited to 44 characters. If the merchant does not define\
            \ an ID, Rapyd generates a string starting with plan_."
        interval:
          type: string
          description: Specifies the units used in defining the billing cycle.
          enum:
          - day
          - week
          - month
          - year
        interval_count:
          type: number
          description: Number of intervals in the billing cycle. Default is 1.
        metadata:
          type: object
          description: A JSON object defined by the client.
        nickname:
          type: string
          description: Brief description of the pricing plan.
        product:
          type: string
          description: ID of the 'product' object that this plan is for. The product
            must have type set to service.
        tiers:
          type: string
          description: Defines a tiered pricing structure. Array of objects. Must
            be null when billing_scheme is set to per_unit.
        tiers_mode:
          type: string
          description: Determines the mode for calculating the total tiered charge.
          enum:
          - graduated
          - volume
        transform_usage:
          $ref: "#/components/schemas/v1plans_transform_usage"
        trial_period_days:
          type: number
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
        usage_type:
          type: string
          description: Determines whether the customer is billed when the service
            is not actually used.
          default: licensed
          enum:
          - metered
          - licensed
    inline_response_200_13:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Plan"
    inline_response_400_18:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_PLAN
          message: "The request tried to create a plan, but the 'type' field of a\
            \ product is set to 'goods'. The request was rejected. Corrective action:\
            \ Add only products that have 'type' set to 'service'."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_CREATE_PLAN
          status: ERROR
    inline_response_400_19:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_PLAN
          message: "The request tried to retrieve a plan, but the plan was not found.\
            \ The request was rejected. Corrective action: Use a valid plan ID."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_PLAN
          status: ERROR
    plans_planId_body:
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        nickname:
          type: string
          description: Brief description of the pricing plan.
    inline_response_400_20:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_UPDATE_PLAN_INVALID_PRODUCT_TYPE
          message: "The request tried to update a plan, but the 'type' field of a\
            \ product is set to 'goods'. The request was rejected. Corrective action:\
            \ Add only products that have 'type' set to 'service'."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_UPDATE_PLAN_INVALID_PRODUCT_TYPE
          status: ERROR
    inline_response_400_21:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_PLAN
          message: "The request tried to delete a plan, but the operation failed.\
            \ Corrective action: Determine whether the plan was already deleted, and\
            \ why there were multiple requests to delete it."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_DELETE_PLAN
          status: ERROR
    inline_response_200_14:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/SubscriptionItem"
    v1_subscription_items_body:
      required:
      - plan
      - subscription
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        plan:
          type: string
          description: ID of the plan assigned to this subscription item. Cannot be
            a plan that is already part of the subscription.
        prorate:
          type: boolean
          description: Determines whether the charge is prorated when a subscription
            item is switched from one subscription to another in a billing cycle.
        proration_date:
          type: number
          description: Indicates the date in the middle of the billing period that
            is the start of the prorated charges.
        quantity:
          type: number
          description: The number of units of the service defined in the plan.
        subscription:
          type: string
          description: ID of the subscription that this item belongs to. String starting
            with **sub_**.
    inline_response_200_15:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/SubscriptionItem"
    subscription_items_subscriptionItemId_body:
      type: object
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        prorate:
          type: boolean
          description: Determines whether the charge is prorated when a subscription
            item is switched from one subscription to another in a billing cycle.
        proration_date:
          type: number
          description: Indicates the date in the middle of the billing period that
            is the start of the prorated charges.
        quantity:
          type: number
          description: The number of units of the service defined in the plan.
    inline_response_200_16:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_16_data"
    inline_response_200_17:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_17_data"
    subscriptionItemId_usage_records_body:
      required:
      - quantity
      - timestamp
      type: object
      properties:
        action:
          type: string
          description: Determines how the quantity is defined in the usage record.
        metadata:
          type: object
          description: A JSON object defined by the client.
        quantity:
          type: number
          description: The usage quantity for the specified date and time (timestamp).
        timestamp:
          type: number
          description: Timestamp for the usage record in Unix time.
    inline_response_200_18:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_17_data"
    inline_response_200_19:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Discount"
    inline_response_400_22:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_DISCOUNT
          message: "The request tried to retrieve a discount, but the discount was\
            \ not found. The request was rejected. Corrective action: For 'discount',\
            \ use the ID of a valid discount."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_GET_DISCOUNT
          status: ERROR
    inline_response_200_20:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceResponse"
    inline_response_400_23:
      properties:
        status:
          $ref: "#/components/schemas/Status"
    v1_invoices_body:
      required:
      - billing
      - customer
      type: object
      properties:
        billing:
          type: number
          description: "Determines the method of billing at the end of the billing\
            \ cycle. Set to **pay_automatically** - Rapyd generates a `payment` object,\
            \ then attempts to pay it using the designated payment method.The number\
            \ of days until the due date."
        currency:
          type: string
          description: "Three-letter ISO 4217 currency code for the currency used\
            \ in all fields that refer to a monetary amount. Required when the subscription\
            \ field is not provided. If subscription field is provided, then the currency\
            \ defined in the subscription's plan is used."
        customer:
          type: string
          description: ID of the customer that pays this invoice. String starting
            with **cus_**.
        days_until_due:
          type: number
          description: The number of days until the due date.
          default: 30
        description:
          type: string
          description: Description of the invoice.
        due_date:
          type: string
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the `days_until_due` field. Relevant when `billing` is **send_invoice**.\
            \  Format is in Unix time."
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Object containing additional payment_options fields.
        payment_method:
          type: string
          description: "ID of the payment method for paying the invoice. If not provided,\
            \ then the payment method is taken from the subscription. If the payment\
            \ method is not provided in the subscription, the payment method is the\
            \ customer's default payment method."
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        subscription:
          type: string
          description: ID of the subscription that generates charges to this customer.
            String starting with **sub_**.
        tax_percent:
          type: number
          description: "The tax rate, defined as a percentage."
    inline_response_400_24:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_SUBSCRIPTION_TRIAL_END
          message: "The request tried to retrieve the upcoming invoice for a customer,\
            \ but the 'trial_end' body parameter was set in the subscription and there\
            \ were no invoice items in the 'lines' array. The request was rejected.\
            \ Corrective action: Add valid items to the 'lines' array in the subscription\
            \ or the invoice."
          response_code: INVALID_SUBSCRIPTION_TRIAL_END
          status: ERROR
    inline_response_200_21:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/InvoiceResponse"
    invoices_invoiceId_body:
      type: object
      properties:
        days_until_due:
          type: number
          description: The number of days until the due date.
        description:
          type: string
          description: Description of the invoice.
        due_date:
          type: string
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the days_until_due field. Format is in Unix time."
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Object containing additional payment_options fields.
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        tax_percent:
          type: number
          description: "The tax rate, defined as a percentage."
    inline_response_200_22:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_22_data"
    inline_response_400_25:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_INVOICE_ID
          message: "The request attempted an operation that requires an invoice, but\
            \ the invoice was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid invoice."
          response_code: INVALID_INVOICE_ID
          status: ERROR
    invoiceId_pay_body:
      properties:
        payment_method:
          type: string
          description: "ID of the payment method for paying the invoice. If not included\
            \ in the body, then the customer's default_payment_method is used."
    inline_response_400_26:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_MARK_UNCOLLECTIBLE_NOT_OPEN_INVOICE
          message: "The request tried to mark an invoice as uncollectible, but the\
            \ invoice status was not 'open'. The request was rejected. Corrective\
            \ action: None. Determine why the invoice was not in 'open' status."
          response_code: ERROR_MARK_UNCOLLECTIBLE_NOT_OPEN_INVOICE
          status: ERROR
    inline_response_200_23:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/InvoiceLineResponse"
    inline_response_400_27:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_INVOICE_CUSTOMER
          message: "The request attempted an operation that requires a customer, but\
            \ the customer specified in the request was not the same as the customer\
            \ defined for the subscription. The request was rejected. Corrective action:\
            \ For the invoice and all of its invoice items, use the customer identified\
            \ in the subscription."
          response_code: INVALID_INVOICE_CUSTOMER
          status: ERROR
    inline_response_200_24:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItemResponse"
    inline_response_400_28:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_INVOICE_ITEMS
          message: "The request tried to retrieve an invoice item, but the invoice\
            \ item was not found. The request was rejected. Corrective action: Use\
            \ a valid invoice item ID."
          response_code: ERROR_GET_INVOICE_ITEMS
          status: ERROR
    v1_invoice_items_body:
      required:
      - currency
      - customer
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the total charge or credit for this item. Decimal,\
            \ including the correct number of decimal places for the currency exponent,\
            \ as defined in ISO 2417:2015.<BR> This is `quantity` times `unit_amount`.\
            \ A credit is indicated by a negative number."
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        customer:
          type: string
          description: ID of the customer. String starting with **cus_**.
        description:
          type: string
          description: Description of the invoice item.
        discountable:
          type: boolean
          description: "Determines whether this invoice item is subject to the discount\
            \ defined in the coupon that is assigned to the customer or subscription.<BR>\
            \ For negative amounts and prorations, the default is **false**, and for\
            \ all other invoice items, the default is **true**."
        invoice:
          type: string
          description: ID of the invoice that this invoice item is assigned to. Relevant
            when `subscription` is not set.
        metadata:
          type: object
          description: A JSON object defined by the client.
        quantity:
          type: number
          description: Indicates the number of units charged as a single invoice item.
            Integer.
        subscription:
          type: string
          description: "ID of the subscription to assign this invoice item to. By\
            \ default, the invoice item is assigned to the customer's subscription\
            \ whose current billing cycle ends first. Relevant when `invoice` is not\
            \ set."
        unit_amount:
          type: number
          description: "Per-unit price of the product or service, adjusted as defined\
            \ in the plan. Decimal."
    inline_response_400_29:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_INVOICE_ITEM_AMOUNT_PARAM
          message: "The request tried to create an invoice item, but the amount was\
            \ not was not clear. The request was rejected. Corrective action: Specify\
            \ the 'amount' field, or specify both 'unit_amount' and 'quantity'."
          response_code: ERROR_INVOICE_ITEM_AMOUNT_PARAM
          status: ERROR
    invoice_items_invoiceItem_body:
      type: object
      properties:
        days_until_due:
          type: number
          description: Number of days the customer has for paying this invoice. Integer.
          default: 30
        description:
          type: string
          description: Description of the invoice.
        due_date:
          type: number
          description: "The date payment is due on this invoice. This value is calculated\
            \ from the date the invoice is created, plus the number of days specified\
            \ in the `days_until_due` field. Relevant when `billing` is **send_invoice**.\
            \ Format is in Unix time."
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_fields:
          type: object
          description: Additional `payment_options`.
        statement_descriptor:
          type: string
          description: Description of the invoice for the customer's credit card statement.
            Limited to 22 characters.
        tax_percent:
          type: number
          description: "The percentage tax rate that is applied to the subtotal of\
            \ the invoice, after subtracting all discounts. Decimal, up to four decimal\
            \ places. Range: 0-100"
    inline_response_400_30:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_INVOICE_ITEM_ID
          message: "The request tried to update or delete an invoice item, but the\
            \ invoice item could not be found. The request was rejected. Corrective\
            \ action: Use the correct ID for a valid invoice item."
          response_code: INVALID_INVOICE_ITEM_ID
          status: ERROR
    inline_response_200_25:
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_25_data"
    inline_response_400_31:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_INVOICE_ITEMS
          message: "The request tried to delete an invoice item, but the invoice item\
            \ was not found. The request was rejected. Corrective action: Determine\
            \ whether the invoice item was already deleted, and why there were multiple\
            \ requests to delete it."
          response_code: ERROR_DELETE_INVOICE_ITEMS
          status: ERROR
    inline_response_200_26:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PaymentLink"
    inline_response_400_32:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_PAGE_EXPIRED
          message: Please contact Rapyd Client Support.
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_HOSTED_PAGE_PAGE_EXPIRED
          status: ERROR
    v1hostedcollectcard_card_fields:
      type: object
      properties:
        recurrence_type:
          type: string
          description: "Specifies the primary intended purpose of the saved payment\
            \ method. See Saving a European Card While Creating a Payment. One of\
            \ the following values: <BR> * **installment** - Regular payments for\
            \ a defined number of payment cycles. <BR> * **recurring** - Regular payments\
            \ for an indefinite period. <BR> * **unscheduled** - Individual unrelated\
            \ payments."
          default: unscheduled
      description: Contains details about the card.
    collect_card_body:
      required:
      - country
      - customer
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Indicates whether the hosted page displays address fields\
            \ to fill in.<BR> * **true** - The address fields are displayed. <BR>\
            \ * **false** - The address fields are displayed only for country codes\
            \ **US**, **GB** and **CA**."
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        card_fields:
          $ref: "#/components/schemas/v1hostedcollectcard_card_fields"
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.The two-letter ISO 3166-1 ALPHA-2 code
            for the country.
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> * If the language of the user's browser cannot be determined,\
            \ the default language is English."
          default: en
        page_expiration:
          type: string
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. Range: 1 minute to 30 days."
        payment_method_type:
          type: string
          description: "Limits the page to a specific type of payment method. For\
            \ example, **dk_visa_card**. For a list of payment methods, use [List\
            \ Payment Methods by Country](https://docs.rapyd.net/en/list-payment-methods-by-country.html)."
    inline_response_200_27:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/CardTokenResponse"
    inline_response_400_33:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_TOKENIZE_CARD_NO_PAYMENT_METHODS
          message: "The request tried to create a token for future use of a card,\
            \ but there are no relevant card payment methods available in the country\
            \ for the merchant. The request was rejected. Corrective action: Contact\
            \ Client Support."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_TOKENIZE_CARD_NO_PAYMENT_METHODS
          status: ERROR
    payments_group_payments_body:
      required:
      - payments
      type: object
      properties:
        description:
          type: string
          description: Description of the group payment
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payments:
          type: object
          description: "Array of 'payment' objects. For details about the fields in\
            \ the 'payment' object, see [Create Payment](https://docs.rapyd.net/en/create-payment.html)."
    inline_response_200_28:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/GroupPayment"
    inline_response_400_34:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_GROUP_PAYMENT_EXCEEDED_MAX_PARTICIPANTS
          message: "The request tried to create a group payment, but there were too\
            \ many individual payments. The request was rejected. Corrective action:\
            \ Use 2 to 10 payments."
          response_code: ERROR_CREATE_GROUP_PAYMENT_EXCEEDED_MAX_PARTICIPANTS
          status: ERROR
    inline_response_400_35:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_GROUP_PAYMENT
          message: "The request attempted an operation that requires a group payment,\
            \ but the group payment was not found. The request was rejected. Corrective\
            \ action: Use the ID of a valid group payment, a string starting with\
            \ 'gp_'."
          response_code: ERROR_GET_GROUP_PAYMENT
          status: ERROR
    inline_response_400_36:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_MISSING_GROUP_PAYMENT
          message: "The request attempted an operation that requires a group payment,\
            \ but the group payment was not found. The request was rejected. Corrective\
            \ action: Use the ID of a valid group payment, a string starting with\
            \ 'gp_'."
          response_code: ERROR_MISSING_GROUP_PAYMENT
          status: ERROR
    inline_response_200_29:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/EscrowResponse"
    inline_response_400_37:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_ESCROW
          message: "The request attempted an operation that requires a payment and\
            \ its escrow, but the payment or the escrow was not found. The request\
            \ was rejected. Corrective action: Use a valid ID for the payment and\
            \ for the escrow."
          response_code: ERROR_GET_ESCROW
          status: ERROR
    escrow_escrow_releases_body:
      allOf:
      - $ref: "#/components/schemas/Escrow"
      - required:
        - ewallets
    inline_response_200_30:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/EscrowResponse"
    inline_response_400_38:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CARD_VALIDATION_IN_PAYMENT_WITH_ESCROW
          message: "The request attempted to validate a card as part of an escrow\
            \ transaction, but these two operations must be done separately. The request\
            \ was rejected. Corrective action: Create a payment with a card payment\
            \ method, set 'capture' to false, set 'amountâ€™ to 0, and set 'escrow'\
            \ to null. Next, create the payment with the escrow."
          response_code: ERROR_CARD_VALIDATION_IN_PAYMENT_WITH_ESCROW
          status: ERROR
    inline_response_200_31:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Refund"
    v1_refunds_body:
      required:
      - payment
      type: object
      properties:
        amount:
          type: number
          description: The amount of the refund. Decimal.
        currency:
          type: string
          description: The currency of the amount received by the original payment
            source. Three-letter ISO 4217 code.
        ewallets:
          type: array
          description: ID of the wallet contact that the card is assigned to. String
            starting with **cont_**.
          items:
            type: string
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment:
          type: string
          description: ID of the Payment object that the refund is charged against.
            String starting with **payment_**.
        reason:
          type: string
          description: Description of the reason for the refund.
    inline_response_200_32:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Refund"
    refunds_complete_body:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: ID of the refund. String starting with **refund_**.
    refunds_group_payments_body:
      required:
      - group_payment
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the refund, in the currency of the group payment.\
            \ Decimal. If this parameter is omitted, the entire group payment is refunded."
        group_payment:
          type: string
          description: ID of the group payment that the refund is charged against.
            String starting with **gp_**.
    inline_response_200_33:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_33_data"
    refunds_refundId_body:
      type: object
      properties:
        metadata:
          description: A JSON object defined by the client.
    inline_response_200_34:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/ApplePayObjectResponse"
    inline_response_200_35:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Dispute"
    inline_response_200_36:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Dispute"
    inline_response_200_37:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Customer"
    v1_customers_body:
      allOf:
      - $ref: "#/components/schemas/CustomerRequest"
      - required:
        - name
    inline_response_200_38:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Customer"
    inline_response_400_39:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_CUSTOMER
          message: "The request tried to create or update a customer, but the wallet\
            \ ID provided is already in use by another customer. The request was rejected.\
            \ Corrective action: Create a new wallet."
          response_code: ERROR_CREATE_CUSTOMER
          status: ERROR
    inline_response_400_40:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_CUSTOMER
          message: "The request attempted an operation that requires the ID of a customer,\
            \ but the customer was not found. The request was rejected. Corrective\
            \ action: Use the correct ID of the customer, a string starting with \"\
            cus_\""
          response_code: ERROR_GET_CUSTOMER
          status: ERROR
    inline_response_400_41:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_CUSTOMER_ID
          message: "The request attempted an operation that requires a valid customer\
            \ ID, but the customer was not found. The request was rejected. Corrective\
            \ action: Use the correct customer, or create a new customer."
          response_code: INVALID_CUSTOMER_ID
          status: ERROR
    inline_response_400_42:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_CUSTOMER
          message: "The request tried to delete a customer, but the operation failed.\
            \ Corrective action: Determine whether the customer was already deleted,\
            \ and why there were multiple requests to delete it."
          response_code: ERROR_DELETE_CUSTOMER
          status: ERROR
    inline_response_200_39:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/DiscountCustomerResponse"
    inline_response_200_40:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_22_data"
        status:
          $ref: "#/components/schemas/Status"
    v1_addresses_body:
      allOf:
      - $ref: "#/components/schemas/Address"
    inline_response_200_41:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/AddressResponse"
    inline_response_400_43:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_ADDRESS_PHONE_NUMBER
          message: "The request tried to add or update a phone number for an address,\
            \ but the phone number is not in proper E.164 format or is not valid.\
            \ The request was rejected. Corrective action: Submit the phone number\
            \ in proper E.164 format."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: INVALID_ADDRESS_PHONE_NUMBER
          status: ERROR
    inline_response_400_44:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_ADDRESS_GET
          message: "The request attempted an operation that requires an address, but\
            \ the address was not found. The request was rejected. Corrective action:\
            \ For the 'address' parameter, use a valid address ID."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_ADDRESS_GET
          status: ERROR
    inline_response_400_45:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_ADDRESS
          message: "The request tried to delete the address, but this operation failed.\
            \ The request was rejected. Corrective action: None. Only an address that\
            \ is linked to a customer or not linked to any object can be deleted."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_DELETE_ADDRESS
          status: ERROR
    inline_response_200_42:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/CustomerPaymentMethod"
    customerId_payment_methods_body:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PaymentMethodType"
    inline_response_200_43:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/CustomerPaymentMethod"
    inline_response_400_46:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_PAYMENT_METHOD
          message: "The request attempted an operation that requires specific fields\
            \ for payment method, but a required field was missing, or an extra, unallowed\
            \ field was included. Corrective action: Run \"Get Payment Method Required\
            \ Fields\" and check all input fields."
          response_code: ERROR_CREATE_PAYMENT_METHOD
          status: ERROR
    inline_response_400_47:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
          message: "The request attempted an operation that requires the default payment\
            \ method of a customer, but the customer does not have a default payment\
            \ method. The request was rejected."
          response_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
          status: ERROR
    inline_response_200_44:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_44_data"
    inline_response_400_48:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
          message: "The request tried to delete a customer's default payment method,\
            \ but the payment method was in use. The request was rejected. Corrective\
            \ actionis to use \"List Subscriptions\", filtered by the customer's ID,\
            \ then use \"Cancel Subscription\" to remove all subscriptions that use\
            \ the customer's ID or the payment method that you want to delete."
          response_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
          status: ERROR
    inline_response_200_45:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Sku"
    v1skusskuId_inventory:
      type: object
      properties:
        type:
          type: string
          enum:
          - finite
          - infinite
          - bucket
        quantity:
          type: integer
        value:
          type: string
          enum:
          - in_stock
          - limited
          - out_of_stock
      description: "inventory object {quantity, type, value}"
    v1skusskuId_package_dimensions:
      type: object
      properties:
        length:
          type: number
        height:
          type: number
        weight:
          type: number
        width:
          type: number
      description: "Physical attributes of the SKU item. Object containing the following\
        \ fields - height, length, weight, width"
    skus_skuId_body:
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/Currency_1"
        inventory:
          $ref: "#/components/schemas/v1skusskuId_inventory"
        price:
          type: number
          description: The amount of the price. Decimal.
        product:
          type: string
          description: ID of the product that this SKU relates to. The type field
            of the product must be set to goods.
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
        attributes:
          type: array
          description: Array of alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the "attributes" list of the corresponding
            "product" object.
          items:
            type: string
        image:
          type: string
          description: URL of image associated with the product.
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: "#/components/schemas/v1skusskuId_package_dimensions"
    inline_response_200_46:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Sku"
    v1_skus_body:
      required:
      - currency
      - inventory
      - price
      - product
      type: object
      properties:
        currency:
          $ref: "#/components/schemas/Currency_1"
        inventory:
          $ref: "#/components/schemas/v1skusskuId_inventory"
        price:
          type: number
          description: The amount of the price. Decimal.
        product:
          type: string
          description: ID of the product that this SKU relates to. The type field
            of the product must be set to goods.
        active:
          type: boolean
          description: Indicates whether the product is currently available for purchase.
        attributes:
          type: array
          description: Array of alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the "attributes" list of the corresponding
            "product" object.
          items:
            type: string
        image:
          type: string
          description: URL of image associated with the product.
        metadata:
          type: object
          description: A JSON object defined by the client.
        package_dimensions:
          $ref: "#/components/schemas/v1skusskuId_package_dimensions"
    inline_response_200_47:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/OrderResponse"
    v1orders_items:
      type: object
      properties:
        amount:
          type: string
          description: "Price of one SKU unit, in the currency defined in currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015."
        currency:
          $ref: "#/components/schemas/Currency_1"
        description:
          type: string
          description: Description of the item.
        parent:
          type: string
          description: "ID of the SKU object that represents the product. String starting\
            \ with sku_. Each SKU can appear in this list only one time, for items\
            \ of type 'sku'. Required when type is sku. Must be null when type is\
            \ shipping."
        type:
          type: string
          description: Type of line item.
          enum:
          - shipping
          - sku
        quantity:
          type: number
          description: Quantity of the product in the line item. Integer. Required
            when type is sku.
    v1_orders_body:
      required:
      - currency
      - customer
      - items
      type: object
      properties:
        coupon:
          type: string
          description: "ID of a coupon that is applied against this order. String\
            \ starting with coupon_. The duration field of the coupon must be set\
            \ to **repeating**, and the `duration_in_months` and `discount_duration_in_uses`\
            \ fields must be set to **1**."
        customer:
          type: string
          description: ID of the customer. String starting with cus_.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the objects
            in the 'items' list.
        email:
          type: string
          description: Email address of the customer.
        items:
          type: array
          description: Array of line items.
          items:
            $ref: "#/components/schemas/v1orders_items"
        metadata:
          type: object
          description: A JSON object defined by the client.
        shipping_address:
          $ref: "#/components/schemas/Address_1"
        tax_percent:
          type: number
          description: Percentage of tax to charge. Decimal.
        upstream_id:
          type: string
          description: "Merchant-defined ID for the order. If the merchant does not\
            \ define an ID, Rapyd generates it."
    inline_response_200_48:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/OrderResponse"
    orders_orderId_body:
      properties:
        coupon:
          type: string
          description: "ID of a coupon that is applied against this order. String\
            \ starting with **coupon_**. The duration field of the coupon must be\
            \ set to **repeating**, and the `duration_in_months` and `discount_duration_in_uses`\
            \ fields must be set to **1**."
        metadata:
          type: object
          description: A JSON object defined by the client.
        tax_percent:
          type: number
          description: Percentage of tax to charge. Decimal.
        status:
          type: string
          description: "Indicates the status of the order. Can be changed when status\
            \ is pending, paid or fulfilled"
          enum:
          - paid
          - pending
          - canceled
          - fulfilled
          - returned
          - partial
    v1ordersorderIdreturns_items:
      type: object
      properties:
        description:
          type: string
        parent:
          type: string
        type:
          type: string
          enum:
          - sku
          - shipping
          - tax
        quantity:
          type: number
        currency:
          type: string
        amount:
          type: number
        order_id:
          type: string
    orderId_returns_body:
      required:
      - items
      type: object
      properties:
        order_id:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/v1ordersorderIdreturns_items"
    inline_response_200_49:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/OrderReturnedResponse"
    orderId_pay_body:
      properties:
        metadata:
          type: object
          description: A JSON object defined by the client.
        payment_method:
          type: string
          description: "ID of the payment method. String starting with card_ or other_.\
            \ If not specified, the payment method is the default_payment_method of\
            \ the customer."
        customer:
          type: string
          description: ID of a customer. String starting with cus_. The order is paid
            with the customer's default payment method.
    inline_response_200_50:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/OrderReturnedResponse"
    inline_response_200_51:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Coupon"
    inline_response_200_52:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Coupon"
    inline_response_200_53:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_53_data"
    inline_response_200_54:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/PayoutMethodType"
    inline_response_200_55:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/PayoutMethodTypeDetails"
    inline_response_400_49:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_PAYOUT_METHOD_TYPE
          message: "The request tried to perform an operation that requires a payout\
            \ method type, but the type was not recognized. The request was rejected.\
            \ Corrective action: To find payout method types, use 'List Payout Method\
            \ Types."
          operation_id: 3f595230-0258-473c-94e5-075741ab84e2
          response_code: INVALID_PAYOUT_METHOD_TYPE
          status: ERROR
    inline_response_200_56:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Payout"
        status:
          $ref: "#/components/schemas/Status"
    v1payouts_payout_fees_transaction_fee_fx_fee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:<BR>*\
            \ **net** - The fee is deducted from the amount paid. For example, in\
            \ a payment of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet.<BR> * **gross** - The fee is\
            \ added to the amount paid. For example, for a transaction of $100 with\
            \ a fee of 5%, the sender pays $105.00."
          enum:
          - net
          - gross
        value:
          type: number
          description: The amount of the fee.
      description: Describes the fees for processing the currency exchange. Relevant
        to payments with FX.
    v1payouts_payout_fees_transaction_fee:
      type: object
      properties:
        calc_type:
          type: string
          description: "Specifies how the fee is calculated. One of the following:<BR>*\
            \ **net** - The fee is deducted from the amount paid. For example, in\
            \ a payment of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet.<BR> * **gross** - The fee is\
            \ added to the amount paid. For example, for a transaction of $100 with\
            \ a fee of 5%, the sender pays $105.00."
          enum:
          - net
          - gross
        fee_type:
          type: string
          description: "One of the following:<BR>* **percentage** - A percentage of\
            \ the transaction amount. For example, 5 percent is represented by **value=5.**<BR>*\
            \ **absolute** - A fixed amount."
          enum:
          - percentage
          - absolute
        value:
          type: number
          description: The amount of the fee.
        fx_fee:
          $ref: "#/components/schemas/v1payouts_payout_fees_transaction_fee_fx_fee"
      description: Describes the fee for processing the transaction.
    v1payouts_payout_fees:
      type: object
      properties:
        transaction_fee:
          $ref: "#/components/schemas/v1payouts_payout_fees_transaction_fee"
        gross_fees:
          type: number
          description: "The total gross fees for the transaction, in units defined\
            \ by `currency_code`."
        net_fees:
          type: number
          description: "The total net fees for the transaction, in units defined by\
            \ `merchant_requested_currency`."
        total_merchant_fees:
          type: number
          description: The amount of the fee.
      description: Object that defines transaction fees and foreign exchange fees
        that the client can define for payout transactions.
    v1_payouts_body:
      required:
      - beneficiary
      - beneficiary_entity_type
      - payout_amount
      - payout_currency
      - payout_method_type
      - sender
      - sender_country
      - sender_currency
      - sender_entity_type
      type: object
      properties:
        beneficiary:
          description: String starting with **beneficiary_** or the object describing
            the beneficiary.
          oneOf:
          - type: string
          - $ref: "#/components/schemas/Beneficiary"
        beneficiary_country:
          type: string
          description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
            Uppercase.
          example: US
        beneficiary_entity_type:
          type: string
          description: Type of entity for the beneficiary.
          enum:
          - individual
          - company
        confirm_automatically:
          type: boolean
          description: Determines whether completion of the payout requires confirmation
            of the FX rate. Relevant to payouts with foreign exchange.
          default: false
        description:
          type: string
          description: Description of the payout transaction.
        ewallet:
          type: string
          description: ID of the wallet that the money is transferred from. String
            starting with **ewallet_**.
          example: ewallet_4f1757749b8858160274e6db49f78ff3
        merchant_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
          example: GHY-0YU-HUJ-POI
        metadata:
          type: object
          description: A JSON object defined by the client.
        payout_amount:
          type: number
          description: "Amount of the payout, in units of the currency defined in\
            \ `payout_currency`. Mandatory when `sender_amount` is not used. Decimal."
          example: 110
        payout_currency:
          type: string
          description: Currency received by the beneficiary. Three-letter ISO 4217
            code.
        payout_fees:
          $ref: "#/components/schemas/v1payouts_payout_fees"
        payout_method_type:
          type: string
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when the beneficiary does not have
            a default payout method type.
          example: us_general_bank
        sender:
          description: String starting with **sender_** or the object describing the
            sender.
          oneOf:
          - type: string
          - $ref: "#/components/schemas/Sender"
        sender_amount:
          type: string
          description: Amount that the sender is paying in units of the currency defined
            in `sender_currency`. This amount remains the same regardless of FX fees.
            Decimal. Required when `payout_amount` is not used.
        sender_country:
          type: string
          description: Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code.
        sender_currency:
          type: string
          description: Currency that the sender is paying with. Three-letter ISO 4217
            code. Takes precedence over `sender.currency`.
        sender_entity_type:
          type: string
          description: The sender entity type.
          enum:
          - individual
          - company
        statement_descriptor:
          type: string
          description: A `statement` that includes the reason for the payout. Limited
            to 35 characters.
    inline_response_200_57:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Payout"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_50:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_PAYOUT
          message: "The request tried to create a payout, but a required field was\
            \ missing or a field had an incorrect value. The request was rejected.\
            \ Corrective action: Run 'Get Payout Required Fields' and check all values."
          operation_id: 889e9472-922c-40a2-861d-19977c396di8
          response_code: ERROR_CREATE_PAYOUT
          status: ERROR
    files_mass_payout_pci_body:
      type: object
      properties:
        file:
          type: string
          description: "The `-F` or `--form` parameter requires a CSV file on your\
            \ local machine. The file must be in unencrypted CSV format. To get a\
            \ template for this file, see [Downloading a Sample Mass Payout File](https://docs.rapyd.net/en/downloading-a-sample-mass-payout-file.html)."
          example: -F 'file=@"/your-file-location/mass-payout-file.csv"'
    inline_response_200_58:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/MassPayoutResponse"
    payouts_beneficiary_body:
      required:
      - category
      - country
      - currency
      - entity_type
      type: object
      properties:
        category:
          $ref: "#/components/schemas/Category"
        company_name:
          type: string
          description: Name of the beneficiary company. Relevant when `entity_type`
            is **company**.
          example: ABC
        country:
          type: string
          description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
        currency:
          type: string
          description: Currency received by the beneficiary. Three-letter ISO 4217
            code.
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          example: us_general_bank
        entity_type:
          $ref: "#/components/schemas/EntityType"
        first_name:
          type: string
          description: First name of the beneficiary. Relevant when `entity_type`
            is **individual**.
          example: John
        identification_type:
          type: string
          description: "Type of identification document for the beneficiary. When\
            \ `entity_type` is **company**, this field must be **company_registered_number**."
          example: drivers_license
          enum:
          - company_registered_number
          - drivers_license
          - identification_id
          - international_passport
          - residence_permit
          - social_security
          - work_permit
        identification_value:
          type: string
          description: Identification number on the document mentioned in `identification_type`.
          example: ABNHDLK354665
        last_name:
          type: string
          description: Family name of the beneficiary. Relevant when `entity_type`
            is **individual**.
          example: John
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
          example: GHY-0YU-HUJ-POI
    inline_response_200_59:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Beneficiary"
    inline_response_400_51:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_BENEFICIARY_COUNTRY_NOT_VALID
          message: "The request tried to create a beneficiary for a payout, but the\
            \ country was not recognized. The request was rejected. Corrective action:\
            \ Use the correct 2-letter ISO 3166-1 ALPHA-2 code, in uppercase letters,\
            \ for the 'country' field."
          operation_id: 889e9472-922c-40a2-861d-19977c396dbt
          response_code: ERROR_CREATE_BENEFICIARY_COUNTRY_NOT_VALID
          status: ERROR
    payouts_extended_beneficiary_body:
      required:
      - address
      - category
      - city
      - country
      - currency
      - entity_type
      - identification_type
      - identification_value
      type: object
      properties:
        address:
          type: string
          description: Beneficiary's street address including the building number.
          example: 123 East 32nd street
        city:
          type: string
          description: City of the beneficiary.
          example: anytown
        category:
          $ref: "#/components/schemas/Category"
        company_name:
          type: string
          description: Name of the beneficiary company. Required when `entity_type`
            is **company**.
          example: All Star Limousine Service
        country:
          $ref: "#/components/schemas/Country"
        country_of_incorporation:
          type: string
          description: The country where the company was registered. Two-letter ISO
            3166-1 ALPHA-2 code. Required when `entity_type` is **company**.
          example: IT
        currency:
          $ref: "#/components/schemas/Currency"
        date_of_birth:
          type: string
          description: "Date of birth of the individual. Format: DD/MM/YYYY. Required\
            \ when `entity_type` is **individual**."
          example: 05/03/1967
        date_of_incorporation:
          type: string
          description: "The date when the company was registered. Format: DD/MM/YYYY.\
            \ Required when `entity_type` is **company**."
          example: 05/03/1967
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          example: us_general_bank
        entity_type:
          $ref: "#/components/schemas/EntityType"
        first_name:
          type: string
          description: First name of the beneficiary. Required when `entity_type`
            is **individual**.
          example: John
        gender:
          $ref: "#/components/schemas/gender"
        identification_type:
          type: string
          description: "Type of identification document for the beneficiary. When\
            \ `entity_type` is **company**, this field must be **company_registered_number**.\
            \ When `entity_type` is **individual**:"
          example: drivers_license
          enum:
          - drivers_license
          - identification_id
          - international_passport
          - residence_permit
          - social_security
          - work_permit
          - company_registered_number
        identification_value:
          type: string
          description: Identification number on the document mentioned in `identification_type`.
          example: ABNHDLK354665
        last_name:
          type: string
          description: Family name of the beneficiary. Required when `entity_type`
            is **individual**. Required when `entity_type` is **individual**.
          example: John
        merchant_reference_id:
          type: string
          description: ID defined by the client.
          example: GHY-0YU-HUJ-POI
        nationality:
          type: string
          description: "The citizenship of the beneficiary. Two-letter ISO 3166-1\
            \ ALPHA-2 code for the country. To determine the code for a country, see\
            \ 'List Countries'. Required when `entity_type` is **individual**."
          example: SG
    inline_response_200_60:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Beneficiary"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_52:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_CREATE_BENEFICIARY
          message: "The request tried to create a beneficiary for a payout, but the\
            \ country was not recognized. The request was rejected. Corrective action:\
            \ In the 'country' field, use the correct 2-letter ISO 3166-1 ALPHA-2\
            \ code."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_CREATE_BENEFICIARY
          status: ERROR
    beneficiary_validate_body:
      required:
      - amount
      - beneficiary
      - payout_method_type
      - sender_country
      - sender_currency
      - sender_entity_type
      type: object
      properties:
        amount:
          type: number
          description: "Maximum payout amount to validate, in units of the currency\
            \ defined in `sender_currency`. Decimal."
        beneficiary:
          description: String starting with **beneficiary_** or the object describing
            the beneficiary.
          example: beneficiary_d895d90d276869efe1e359386a1fb3e3
          oneOf:
          - type: string
          - $ref: "#/components/schemas/Beneficiary"
        identifier_type:
          type: string
          description: Identifier type of beneficiary
        identifier_value:
          type: string
          description: Identifier value to filter with
        payout_method_type:
          type: string
          description: The type of the payout method. Set to a value included in the
            response to List Payout Method Types. The two-letter prefix must match
            the beneficiary country code.
          example: us_general_bank
        sender_country:
          $ref: "#/components/schemas/Country"
        sender_currency:
          $ref: "#/components/schemas/Currency"
        sender_entity_type:
          $ref: "#/components/schemas/EntityType"
    inline_response_200_61:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_61_data"
        status:
          $ref: "#/components/schemas/Status"
    beneficiary_beneficiaryId_body:
      type: object
      properties:
        address:
          type: string
          description: Beneficiary's street address including the building number.
          example: 123 East 32nd street
        city:
          type: string
          description: City of the beneficiary.
          example: anytown
        company_name:
          type: string
          description: Name of the beneficiary company. Relevant when `entity_type`
            is **company**.
          example: All Star Limousine Service
        country:
          $ref: "#/components/schemas/Country"
        country_of_incorporation:
          type: string
          description: The country where the company was registered. Two-letter ISO
            3166-1 ALPHA-2 code. Relevant when `entity_type` is **company**.
          example: IT
        date_of_birth:
          type: string
          description: "Date of birth of the individual. Format: DD/MM/YYYY. Relevant\
            \ when `entity_type` is **individual**."
          example: 05/03/1967
        date_of_incorporation:
          type: string
          description: "The date when the company was registered. Format: DD/MM/YYYY.\
            \ Relevant when `entity_type` is **company**."
          example: 05/03/1967
        default_payout_method_type:
          type: string
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          example: us_general_bank
        first_name:
          type: string
          description: First name of the beneficiary. Relevant when `entity_type`
            is **individual**.
          example: John
        gender:
          type: string
          description: Gender of the individual. Relevant when `entity_type` is **individual**.
          enum:
          - male
          - female
          - other
          - not_applicable
        identification_type:
          type: string
          description: "Type of identification document for the beneficiary. When\
            \ `entity_type` is **company**, this field must be **company_registered_number**.\
            \ When `entity_type` is **individual**:"
          example: drivers_license
          enum:
          - drivers_license
          - identification_id
          - international_passport
          - residence_permit
          - social_security
          - work_permit
          - company_registered_number
        identification_value:
          type: string
          description: Identification number on the document mentioned in `identification_type`.
          example: ABNHDLK354665
        last_name:
          type: string
          description: Family name of the beneficiary. Relevant when `entity_type`
            is **individual**. Required when `entity_type` is **individual**.
          example: John
        merchant_reference_id:
          type: string
          description: ID defined by the client.
          example: GHY-0YU-HUJ-POI
        nationality:
          type: string
          description: "The citizenship of the beneficiary. Two-letter ISO 3166-1\
            \ ALPHA-2 code for the country. To determine the code for a country, see\
            \ 'List Countries'. Relevant when `entity_type` is **individual**."
          example: SG
    inline_response_400_53:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_BENEFICIARY
          message: "The request attempted an operation that requires a payout beneficiary,\
            \ but the beneficiary was not found. The request was rejected. Corrective\
            \ action: Use the ID of a valid beneficiary."
          response_code: ERROR_GET_BENEFICIARY
          status: ERROR
    inline_response_200_62:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_62_data"
        status:
          $ref: "#/components/schemas/Status"
    v1hosteddisbursebeneficiary_beneficiary_optional_fields:
      required:
      - identification_type
      - identification_value
      type: object
      properties:
        company_name:
          type: string
          description: "The name of the beneficiary's company. Relevant to beneficiaries\
            \ that are not individuals. If the request does not contain this information,\
            \ the hosted page prompts the customer for it. <BR> If `beneficiary_entity_type`\
            \ is **individual**, this field must be omitted."
        first_name:
          type: string
          description: "The first name of the beneficiary. Relevant to individual\
            \ beneficiaries. If the request does not contain this information, the\
            \ redirect page prompts the customer for it."
        identification_type:
          description: "Type of identification document. When `entity_type` is **company**,\
            \ this field must be **company_registered_number**. When `entity_type`\
            \ is **individual**, one of the following values: <BR> * **drivers_license**<BR>\
            \ * **identification_id** <BR> * **international_passport** <BR> * **residence_permit**<BR>\
            \ * **social_security**<BR> * **work_permit** type: string"
        identification_value:
          type: string
          description: The identification of the document mentioned in identification_type.
        last_name:
          type: string
          description: "The last name of the beneficiary. Relevant to individual beneficiaries.\
            \ If the request does not contain this information, the redirect page\
            \ prompts the customer for it."
    disburse_beneficiary_body:
      required:
      - beneficiary_entity_type
      - sender_country
      - sender_entity_type
      type: object
      properties:
        beneficiary_country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            beneficiaryâ€™s bank account. The two-letter prefix of the payout method
            type matches the beneficiary country code.
          example: FR
        beneficiary_entity_type:
          type: string
          description: "Type of entity for the beneficiary. One of the following:"
          enum:
          - company
          - individual
        beneficiary_extended_fields:
          type: boolean
          description: "When the value is **true**, the hosted tokenization page displays\
            \ additional required fields.<BR> * Additional required fields when `beneficiary_entity_type`\
            \ is **individual**: `address`, `city`, `country`, `date_of_birth`, `first_name`,\
            \ `gender`, `identification_type`, `identification_value`, `last_name`,\
            \ `nationality`. <BR> * Additional required fields when `beneficiary_entity_type`\
            \ is **company**: `address`, `city`, `company_name`, `country`, `country_of_incorporation`,\
            \ `date_of_incorporation`, `identification_type`, `identification_value`.<BR>\
            \ For more information on the additional required fields, see 'Create\
            \ Extended Beneficiary'.<BR> **Note**: Currently only available in the\
            \ sandbox."
          default: false
          enum:
          - true
          - false
        beneficiary_optional_fields:
          type: array
          description: Additional information about the beneficiary.
          items:
            $ref: "#/components/schemas/v1hosteddisbursebeneficiary_beneficiary_optional_fields"
        category:
          type: string
          description: "The category of payout method. One of the following: <BR>\
            \ * **bank**<BR> * **card** - US only."
          enum:
          - bank
          - card
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'.<BR> * When this parameter\
            \ is null, the language of the user's browser is used.<BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        merchant_alias:
          type: string
          description: Client's name.
          example: Rapyd
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation. <BR> **Range**: 1 minute to 30 days."
        payout_currency:
          type: string
          description: Currency accepted by the beneficiaryâ€™s bank account. Three-letter
            ISO 4217 code.
        payout_method_types_exclude:
          type: array
          description: List of payout methods that are excluded from display on the
            beneficiary tokenization page.
          items:
            type: object
        payout_method_types_include:
          type: array
          description: Array of strings. List of payout methods that are displayed
            on the beneficiary tokenization page.
          items:
            type: object
        sender_country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the senderâ€™s country.
        sender_currency:
          type: string
          description: Currency paid from the senderâ€™s wallet. Three-letter ISO 4217
            code.
        sender_entity_type:
          type: string
          description: Type of entity for the sender.
          enum:
          - company
          - individual
    inline_response_200_63:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/HostedBeneficiaryTokenResponse"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_54:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_BENEFICIARY_INVALID_CATEGORY
          message: "The request tried to create a beneficiary tokenization page, but\
            \ the payout category was not valid. The request was rejected. Corrective\
            \ action: Set 'category' to 'bank' or 'card'."
          response_code: ERROR_HOSTED_PAGE_BENEFICIARY_INVALID_CATEGORY
          status: ERROR
    inline_response_400_55:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_UPDATE_PAYOUT
          message: "The request tried to update a payout, but the payout was not found.\
            \ The request was rejected. Corrective action: For the 'payout' path parameter,\
            \ use the ID of a valid payout, a string starting with **payout_**."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_UPDATE_PAYOUT
          status: ERROR
    payouts_response_body:
      required:
      - id
      - status
      type: object
      properties:
        id:
          type: string
          description: ID of the `payout` object in the 'Create Payout' response.
            String starting with **payout_**.
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Determines how to handle the payout.
          enum:
          - accept
          - decline
    inline_response_200_64:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_56:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: MISSING_INVALID_PARAMETERS
          message: Contact Rapyd Client Support
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: MISSING_INVALID_PARAMETERS
          status: ERROR
    payouts_sender_body:
      required:
      - country
      - currency
      - entity_type
      type: object
      properties:
        company_name:
          type: string
          description: Name of the sender company. Relevant when `entity_type` is
            **company**.
          example: ABC
        country:
          $ref: "#/components/schemas/Country"
        currency:
          $ref: "#/components/schemas/Currency"
        entity_type:
          $ref: "#/components/schemas/EntityType"
        first_name:
          type: string
          description: First name of the sebder. Relevant when entity_type is individual.
          example: Scott
        identification_type:
          type: string
          description: Type of identification document for the sender.
          example: drivers_license
        identification_value:
          type: string
          description: Identification number on the document mentioned in identification_type.
          example: ANDSFS8974562
        last_name:
          type: string
          description: Last name of the sender. Relevant when `entity_type` is **individual**.
          example: Williams
    inline_response_200_65:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Sender"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_57:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_SENDER
          message: "The request attempted an operation that requires a payout sender,\
            \ but the sender was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid sender."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_GET_SENDER
          status: ERROR
    inline_response_200_66:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_66_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_58:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_PAYOUT
          message: "The request tried to retrieve a payout, but the payout was not\
            \ found. The request was rejected. Corrective action: Use the ID of a\
            \ valid payout."
          operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
          response_code: ERROR_GET_PAYOUT
          status: ERROR
    payouts_payoutId_body:
      type: object
      properties:
        description:
          type: string
          description: Description of the payout.
        metadata:
          type: object
          description: A JSON object defined by the client.
    inline_response_200_67:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PayoutReturned"
        status:
          $ref: "#/components/schemas/Status"
    payout_payout_body:
      type: object
      properties:
        file:
          type: string
          description: "Use the `-F` or `--form` parameter to define the path to the\
            \ document file on your local machine. Supported file types include '*.pdf',\
            \ '*.doc', '*.docx', '.*csv', '*.jpeg', '*.jpg', '*.gif', '*.png'. Format\
            \ of input must follow the `multipart/form-data` protocol. Use the `files`\
            \ parameter to upload multiple files."
          example: -F file="@/path/of/file.jpg"
    inline_response_200_68:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_68_data"
    cards_eligibility_body:
      required:
      - card_number
      - transaction_type
      type: object
      properties:
        card_number:
          type: string
          description: "The number of the card. In the sandbox, use the number **4895034400003371**\
            \ to simulate this method with a Visa card. Alternatively, use `card_id`\
            \ and enter the ID of the card (string starting with **card_**)"
        transaction_type:
          type: string
          description: The type of transaction. One of the following:<BR>* **all**
            - OCT and AFT transactions.<BR>* **oct** - Original Credit Transactions
            (OCT).<BR>* **aft** - Account Funding Transaction (AFT).
          enum:
          - all
          - oct
          - aft
    inline_response_200_69:
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/CardEligibility"
    account_transfer_body:
      required:
      - amount
      - currency
      - destination_ewallet
      - source_ewallet
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the amount
            field. Uppercase.
        destination_ewallet:
          type: string
          description: ID of the wallet receiving the money. String starting with
            **ewallet_**.
        expiration:
          type: string
          description: "Determines the day the ewallet funds transfer expires, in\
            \ Unix time. Acceptance of the ewallet transfer must be completed before\
            \ the start of this day. The default setting is 14 days from the date\
            \ the ewallet transfer was created."
        metadata:
          type: object
          description: A JSON object defined by the client.
        source_ewallet:
          type: string
          description: ID of the wallet sending the money. String starting with **ewallet_**.
    inline_response_200_70:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Transfer"
        status:
          $ref: "#/components/schemas/Status"
    transfer_response_body:
      required:
      - id
      - status
      type: object
      properties:
        id:
          type: string
          description: "ID of the transfer transaction, from the `id` field in the\
            \ `data` object of the response. 32-digit hexadecimal."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: "Determines how to handle the transfer. One of the following\
            \ values - accept, decline, cancel"
    account_deposit_body:
      required:
      - amount
      - currency
      - ewallet
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transaction. Decimal.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        ewallet:
          type: object
          description: ID of the Rapyd Wallet. String starting with **ewallet_**.
        metadata:
          type: object
          description: A JSON object defined by the client.
    inline_response_200_71:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_71_data"
    account_withdraw_body:
      required:
      - amount
      - currency
      - ewallet
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transaction. Decimal.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        ewallet:
          type: object
          description: ID of the Rapyd Wallet. String starting with **ewallet_**.
        metadata:
          type: object
          description: A JSON object defined by the client.
    balance_hold_body:
      required:
      - amount
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
          example: 100.0
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        ewallet:
          type: string
          description: ID of the wallet associated with the contact. String starting
            with **ewallet_**.
    inline_response_200_72:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/PutFundsOnHoldResponse"
    inline_response_400_59:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_TRANSFER_FUNDS_DESTINATION_AND_SOURCE_CANNOT_BE_THE_SAME
          message: "The request tried to transfer funds, but the source was the same\
            \ as the destination. The request was rejected. Corrective action: Set\
            \ 'source_ewallet' and 'destination_ewallet' to the IDs of two different\
            \ wallets."
          response_code: ERROR_TRANSFER_FUNDS_DESTINATION_AND_SOURCE_CANNOT_BE_THE_SAME
          status: ERROR
    balance_release_body:
      required:
      - amount
      - currency
      - ewallet
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer. Decimal.
          example: 100.0
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency used in the `amount`
            field.
        ewallet:
          type: string
          description: ID of the wallet associated with the contact. String starting
            with **ewallet_**.
    inline_response_400_60:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_USER
          message: "The request tried to transfer funds, but the source was the same\
            \ as the destination. The request was rejected. Corrective action: Set\
            \ 'source_ewallet' and 'destination_ewallet' to the IDs of two different\
            \ wallets."
          response_code: ERROR_GET_USER
          status: ERROR
    inline_response_401_1:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: UNAUTHENTICATED_API_CALL
          message: "The request attempted an operation that requires a wallet, but\
            \ the wallet was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid wallet that has not been deleted. The ID is a\
            \ string starting with 'ewallet_'."
          operation_id: 3f595230-0258-473c-94e5-075741ab84e2
          response_code: UNAUTHENTICATED_API_CALL
          status: ERROR
    inline_response_200_73:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_61:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_EWALLET
          message: "The request attempted an operation that requires a wallet, but\
            \ the wallet was not found. The request was rejected. Corrective action:\
            \ Use the ID of a valid wallet, a string starting with **ewallet_**."
          response_code: ERROR_GET_EWALLET
          status: ERROR
    v1ewalletsewalletIdcontacts_business_details:
      required:
      - industry_category
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
        annual_revenue:
          type: number
          description: Annual revenue of the business in US dollars.
        cnae_code:
          type: string
          description: "Business activity code of the business, according to the ClassificaÃ§\
            Ã£o Nacional de Atividades EconÃ´micas of Brazil. Alphanumeric string. Maximum\
            \ 7 characters."
        customer_service_phone_number:
          type: string
          description: Rapyd Platform only. Required when a partner creates a Rapyd
            Platform wallet for a merchant. Phone number for contacting the customer
            support service of the business.
        entity_type:
          type: string
          description: Type of business entity.
          enum:
          - sole_prop
          - partnership
          - company
          - government
          - charity
          - NPO
          - association
          - trust
        establishment_date:
          type: string
          description: "Date that the business was established. Format: **YYYY-MM-DD**."
        industry_category:
          type: string
          description: Name of the industry that this business belongs to. Alphanumeric
            string with no special characters.
        industry_sub_category:
          type: string
          description: Subcategory of the industry that this business belongs to.
        legal_entity_type:
          type: string
          description: Type of legal entity. Alphanumeric string.
        mcc:
          type: string
          description: "Rapyd Platform only. Required when a partner creates a Rapyd\
            \ Platform wallet for a merchant. Four-digit merchant category code (MCC)\
            \ of the business, as defined in ISO 18245."
        name:
          type: string
          description: Business name.
        registration_number:
          type: string
          description: Registration number.
        statement_descriptor:
          type: string
          description: "Required when a partner creates a Rapyd Platform wallet for\
            \ a merchant. The business name followed by the merchant name, separated\
            \ by an asterisk. For example, **Acme*Apex**. The names cannot include\
            \ an asterisk. Maximum: 22 characters."
        website_url:
          type: string
          description: Rapyd Platform only. Required when a partner creates a Rapyd
            Platform wallet for a merchant. URL of the business website.
      description: Describes additional information for business entities. Required
        when type is company.
    ewalletId_contacts_body:
      required:
      - contact_type
      - country
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
        business_details:
          $ref: "#/components/schemas/v1ewalletsewalletIdcontacts_business_details"
        contact_type:
          type: string
          description: "Type of contact: personal."
        country:
          type: string
          description: 2-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
        date_of_birth:
          type: string
          description: "Date of birth of the individual. Format: **MM/DD/YYYY** or\
            \ **YYYY-MM-DD**"
        email:
          type: string
          description: Email address for the contact.
        first_name:
          type: string
          description: "First name of the personal contact or primary person associated\
            \ with the business contact. For a **personal** contact type, alphabetic\
            \ characters and spaces."
        gender:
          type: string
          description: Gender of the contact.
          enum:
          - male
          - female
          - other
          - not_applicable
        house_type:
          type: string
          description: Description of the type of residency.
          enum:
          - lease
          - live_with_family
          - own
          - owner
          - month_to_month
          - housing_project
        identification_number:
          type: string
          description: ID number as shown by the ID document. Alphanumeric string
        identification_type:
          type: string
          description: "Type of the identification document. See also [List Official\
            \ Identification Documents](https://docs.rapyd.net/en/list-official-identification-documents.html)"
        last_name:
          type: string
          description: "Family name of the personal contact or primary person associated\
            \ with the business contact. For a **personal** contact type, alphabetic\
            \ characters and spaces.<BR>Required for issuing a card to a **personal**\
            \ contact."
        marital_status:
          type: string
          description: Marital status of the contact.
          enum:
          - married
          - single
          - divorced
          - widowed
          - cohabiting
          - not_applicable
        metadata:
          type: object
          description: A JSON object defined by the client.
          example:
            merchant_defined: true
        middle_name:
          type: string
          description: Middle name of the personal contact or primary person associated
            with the business contact.
        mothers_name:
          type: string
          description: Name of the contact's mother.
        nationality:
          type: string
          description: The citizenship of the contact. Two-letter ISO 3166-1 ALPHA-2
            code for the country. Uppercase.
        phone_number:
          type: string
          description: Phone number of the contact in E.164 format.
        second_last_name:
          type: string
          description: Second last name of the contact.
        send_notifications:
          type: boolean
          description: Determines whether Rapyd sends notifications to the contact.
          default: false
        contact_reference_id:
          type: string
          description: Reference ID for the contact. Limited to 45 characters. Should
            be unique per merchant per e-wallet.
    inline_response_200_74:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Contact"
    inline_response_400_62:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
          message: "The request tried to add a contact to a personal wallet, but a\
            \ personal wallet can have only one contact. The request was rejected.\
            \ Corrective action: None. Determine why an attempt was made to give a\
            \ personal wallet two contacts. Consider creating a company wallet."
          response_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
          status: ERROR
    inline_response_200_75:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Contact"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_63:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_EWALLET_CONTACT
          message: "The request attempted an operation that requires a wallet contact,\
            \ but the contact was not found. The request was rejected. Corrective\
            \ action: In the path, specify the ID of a valid wallet, a string starting\
            \ with \"ewallet\", and the ID of a valid contact belonging to that wallet,\
            \ a string starting with \"cont\"."
          response_code: ERROR_GET_EWALLET_CONTACT
          status: ERROR
    inline_response_400_64:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_UPDATE_EWALLET_CONTACT
          message: "The request tried to update a business wallet contact, but there\
            \ was a format error in the business details. The request was rejected.\
            \ Corrective action: Provide all data in the correct format. See the API\
            \ reference."
          response_code: ERROR_UPDATE_EWALLET_CONTACT
          status: ERROR
    inline_response_200_76:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_76_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_65:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
          message: "The request tried to delete a contact, but the wallet was a personal\
            \ wallet. A personal wallet can have only one contact and it cannot be\
            \ deleted. The request was rejected. Corrective action: None. Determine\
            \ why an attempt was made to delete the contact."
          response_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
          status: ERROR
    inline_response_200_77:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_77_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_400_66:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_GET_COMPLIANCE_LEVELS
          message: ""
          response_code: ERROR_GET_COMPLIANCE_LEVELS
          status: ERROR
    card_details_cardToken_body:
      properties:
        card_color:
          type: string
          description: "The color of the card, specified by one of the following formats:\
            \ `hexadecimal value`  `CSS color name` `RGB` `RGBA`  `black`"
        language:
          type: string
          description: "Determines the default language of the hosted page. When this\
            \ parameter is null, the language of the user's browser is used. If the\
            \ language of the user's browser cannot be determined, the default language\
            \ is English"
        logo:
          type: string
          description: "The URL of the logo image that appears on the card. If the\
            \ logo is not specified, the name of the merchant appears."
        logo_orientation:
          type: string
          description: "The orientation of the logo on the card:\n  `landscape`  `square`\
            \ `portrait` \n    Default value: `landscape`\n"
    inline_response_200_78:
      type: object
      properties:
        data:
          allOf:
          - $ref: "#/components/schemas/HostedPageStatusBaseResponse"
          - $ref: "#/components/schemas/CardDetailsResponse"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_79:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/CardIssuing"
            - $ref: "#/components/schemas/CardIssuingMasked"
    issuing_cards_body:
      required:
      - card_program
      - ewallet_contact
      type: object
      properties:
        card_program:
          type: string
          description: ID of the card program that the card is issued from. String
            starting with **cardprog_**.
        country:
          type: string
          description: Two-letter ISO 3166-1 ALPHA-2 code for the country.
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is assigned to. String
            starting with **cont_**.
        expiration_month:
          type: string
          description: Expiration month of the card.
        expiration_year:
          type: string
          description: Expiration year of the card.
        metadata:
          type: object
          description: A JSON object defined by the client.
    inline_response_200_80:
      type: object
      properties:
        data:
          oneOf:
          - $ref: "#/components/schemas/CardIssuing"
          - $ref: "#/components/schemas/CardIssuingMasked"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_81:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          oneOf:
          - $ref: "#/components/schemas/CardIssuing"
          - $ref: "#/components/schemas/CardIssuingMasked"
    cards_activate_body:
      required:
      - card
      type: object
      properties:
        card:
          type: string
          description: "The card token, which is a string starting with 'card_'. If\
            \ the client is PCI-certified, you can use the actual card number."
    inline_response_200_82:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CardIssuing"
        status:
          $ref: "#/components/schemas/Status"
    issuing_activate_card_body:
      required:
      - ewallet_contact
      type: object
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is assigned to. Must
            have a valid phone number. String starting with **cont_**.
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'.<BR>* When this parameter\
            \ is null, the language of the user's browser is used.<BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation.<BR>**Range**: 1 minute to 30 days."
        personalize:
          type: boolean
          description: "When **true**, connects an issued card to a wallet contact.\
            \ Relevant to a card that was issued in bulk and is not assigned to a\
            \ specific person."
        skip_pin:
          type: boolean
          description: "When **true**, the customer cannot reset the PIN."
          default: false
    inline_response_200_83:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/HostedPageActivateCardResponse"
    issuing_pin_body:
      required:
      - ewallet_contact
      type: object
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website**.
        card:
          type: string
          description: ID of the card. String starting with **card_**.
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is assigned to. Must
            have a valid phone number. String starting with **cont_**.
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'.<BR>* When this parameter\
            \ is null, the language of the user's browser is used.<BR> * If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
        page_expiration:
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 7 days after creation.<BR>**Range**: 1 minute to 30 days."
        skip_pin:
          type: boolean
          description: "When **true**, the customer cannot reset the PIN."
          default: false
    inline_response_200_84:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/HostedPageCardPINResponse"
    cards_personalize_body:
      required:
      - card
      - ewallet_contact
      type: object
      properties:
        card:
          type: string
          description: "The card token, which is a string starting with **card_**.\
            \ If the client is PCI-certified, you can use the actual card number."
        ewallet_contact:
          type: string
          description: ID of the wallet contact that the card is issued to. String
            starting with **cont_**.
    cards_status_body:
      required:
      - card
      - status
      type: object
      properties:
        blocked_reason:
          type: string
          description: Reason for blocking the card. Relevant when the value of status
            is block.
        card:
          type: string
          description: "The card token, which is a string starting with **card_**.\
            \ If the client is PCI-certified, you can use the actual card number."
        status:
          type: string
          description: "Status of the card. One of the following, block/unblock"
    inline_response_200_85:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CardTransaction"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_86:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CardTransaction"
        status:
          $ref: "#/components/schemas/Status"
    cards_pin_body:
      required:
      - card
      - new_pin
      type: object
      properties:
        card:
          type: string
          description: Card number or card ID.
        new_pin:
          type: string
          description: PIN code. Numeric string.
    inline_response_200_87:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/setPINResponse"
    card_tokens_google_pay_body:
      required:
      - client_device_id
      - client_wallet_account_id
      - client_wallet_provider
      type: object
      properties:
        client_device_id:
          type: string
          description: Stable device identification set by the wallet provider. Could
            be a computer identifier or an ID tied to hardware such as TEE_ID or SE_ID.
        client_wallet_provider:
          type: string
          description: The token requesterâ€™s Id (TRID).
        client_wallet_account_id:
          type: string
          description: Client provided consumer ID that identifies the wallet account
            holder entity.
    inline_response_200_88:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/AddCardtoGooglePayResponse"
    cards_simulate_block_body:
      required:
      - card_id
      type: object
      properties:
        blocked_reason:
          type: string
          description: Reason for blocking the card.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
    inline_response_200_89:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/simulateBlockCardResponse"
    cards_authorization_body:
      required:
      - amount
      - card_id
      - currency
      - financial_impact
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the authorization, in units of the `currency`\
            \ defined in currency. Decimal."
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        currency:
          type: string
          description: The currency supported by the card. Three-letter ISO 4217 code.
        financial_impact:
          type: string
          description: Indicates the financial impact of the transaction.
          enum:
          - credit
          - debit
    inline_response_200_90:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/SimulateCardTransactionAuthorizationRequestEEA"
    cards_reversal_body:
      required:
      - authorization_id
      - card_id
      - currency
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the authorization, in units of the `currency`\
            \ defined in currency. Decimal."
        authorization_id:
          type: string
          description: ID of the authorization. String starting with **cardauth_**.
            Use the value of `id` in the response to Simulate a Card Transaction Authorization
            Request - EEA.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        currency:
          type: string
          description: Defines the currency for the transaction. Three-letter ISO
            4217 code.
    inline_response_200_91:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/SimulateCardTransactionAuthorizationReversalEEA"
    cards_clearing_body:
      required:
      - amount
      - authorization_id
      - card_id
      - currency
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the authorization, in units of the `currency`\
            \ defined in currency. Decimal."
        authorization_id:
          type: string
          description: ID of the authorization. String starting with **cardauth_**.
            Use the value of `id` in the response to Simulate a Card Transaction Authorization
            Request - EEA.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        category:
          type: string
          description: "Type of charge: **ATM**. Required when `fee_amount` is set."
        currency:
          type: string
          description: Defines the currency for the transaction. Three-letter ISO
            4217 code.
        fee_amount:
          type: string
          description: "The amount of the fee charged for the transaction, in units\
            \ of the currency defined in `currency`. Decimal. Required when `category`\
            \ is set."
    inline_response_200_92:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/SimulateClearingCardTransactionEEA"
    cards_refund_body:
      required:
      - amount
      - authorization_id
      - card_id
      - currency
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the refund, in units of the `currency` defined\
            \ in currency. Decimal."
        authorization_id:
          type: string
          description: ID of the authorization. String starting with **cardauth_**.
            Use the value of `id` in the response to 'Simulate a Card Transaction
            Authorization Request - EEA'.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        currency:
          type: string
          description: The refund currency. Three-letter ISO 4217 code.
    cards_adjustment_body:
      required:
      - amount
      - authorization_id
      - card_id
      - currency
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the adjustment, in units of the `currency` defined\
            \ in currency. Decimal."
        authorization_id:
          type: string
          description: ID of the authorization. String starting with **cardauth_**.
            Use the value of `id` in the response to 'Simulate a Card Transaction
            Authorization Request - EEA'.
        card_id:
          type: string
          description: ID of the card. String starting with **card_**.
        currency:
          type: string
          description: The adjustment currency. Three-letter ISO 4217 code.
    v1_virtual_accounts_body:
      required:
      - country
      - currency
      - ewallet
      type: object
      properties:
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        requested_currency:
          type: string
          description: "Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following:<BR> * **AUD** - Australian Dollar<BR>\
            \ * **EUR** - Euro<BR> * **GBP - Pound Sterling<BR> * **HKD** - Hong Kong\
            \ Dollar<BR> * **SGD** - Singapore Dollar<BR> * **USD** - US Dollar<BR>\
            \ When not specified, the funds appear in the wallet's currency account\
            \ for the currency of the transaction."
    inline_response_200_93:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_93_data"
        status:
          $ref: "#/components/schemas/Status"
    virtual_accounts_transactions_body:
      required:
      - amount
      - currency
      - issued_bank_account
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the transaction, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015. If the amount\
            \ is a whole number, use an integer and not a decimal."
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217 code. Must
            be the same as the currency of the virtual account.
        issued_bank_account:
          type: string
          description: ID of the Virtual Account Number object. String starting with
            issuing_
    inline_response_200_94:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_94_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_95:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/VirtualAccountIssuing"
        status:
          $ref: "#/components/schemas/Status"
    virtual_accounts_virtualAccountId_body:
      properties:
        requesting_currency:
          $ref: "#/components/schemas/Currency"
    inline_response_200_96:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_96_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_97:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_97_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_98:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_98_data"
    inline_response_200_99:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Ewallet"
    v1ewallets_contact:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        cnls_partner_query_reference:
          type: string
          description: "Rapyd Platform only. Required when a partner creates a Rapyd\
            \ Platform wallet for a merchant. Value of the `partner_query_reference`\
            \ parameter used as the query request ID in the Card Network Lookup Service\
            \ (CNLS). See `Retrieve Query Results`. You must run the CNLS before creating\
            \ a wallet for a merchant. If the `cnls_partner_query_reference` and `partner_query_reference`\
            \ values do not match, ERROR_CREATE_WALLET_CNLS_PARTNER_QUERY_REFERENCE_MISMATCH\
            \ is returned."
    v1_ewallets_body:
      required:
      - contact
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/v1ewallets_contact"
        ewallet_reference_id:
          type: string
          description: Rapyd Wallet ID defined by the customer or end user. Must be
            unique.
        first_name:
          type: string
          description: First name of the Rapyd Wallet owner.
        last_name:
          type: string
          description: Last name of the Rapyd Wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
        parent_ewallet:
          type: string
          description: ID of a **company** wallet assigned as the parent wallet of
            a **person** wallet. String starting with **ewallet_**. Maximum - one
            parent wallet.
        type:
          type: string
          description: "Type of wallet, **company or **person**."
          default: person
          enum:
          - company
          - person
    inline_response_200_100:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Ewallet"
        status:
          $ref: "#/components/schemas/Status"
    ewallets_ewalletToken_body:
      required:
      - ewalletToken
      type: object
      properties:
        ewallet_reference_id:
          type: string
          description: Rapyd Wallet ID defined by the customer or end user.  Must
            be unique.
        first_name:
          type: string
          description: First name of the Rapyd Wallet owner.
        last_name:
          type: string
          description: Last name of the Rapyd Wallet owner.
        metadata:
          type: object
          description: A JSON object defined by the client.
    account_limits_body:
      required:
      - amount
      - currency
      - type
      type: object
      properties:
        account_id:
          type: string
          description: The ID of the account within the wallet.
        amount:
          type: string
          description: The amount of the limit.
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency of an existing
            account.
        type:
          type: string
          description: The limit type.
    inline_response_200_101:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Account"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_102:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/Account"
    inline_response_200_103:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/EwalletTransaction"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_104:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/EwalletTransactionDetails"
    inline_response_200_105:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_105_data"
    inline_response_200_106:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/DailyRate"
    inline_response_400_67:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: "INVALID_FIELDS - [BUY_CURRENCY]"
          message: "The request attempted an operation, but one or more of the fields\
            \ did not have a valid value. The request was rejected. Corrective action:\
            \ Use valid values. The names of the affected fields appear at the end\
            \ of the error code. See the API Reference for details."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: "INVALID_FIELDS - [BUY_CURRENCY]"
          status: ERROR
    inline_response_200_107:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/ResendWebhookResponse"
    inline_response_200_108:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/ListWebhooksResponse"
    issuing_bankaccounts_body:
      required:
      - country
      - currency
      - ewallet
      type: object
      properties:
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        requested_currency:
          type: string
          description: "Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following:<BR> * AUD - Australian Dollar<BR> *\
            \ EUR - Euro<BR> * GBP - Pound Sterling<BR> * HKD - Hong Kong Dollar<BR>\
            \ * SGD - Singapore Dollar<BR> * USD - US Dollar<BR> When not specified,\
            \ the funds appear in the walletâ€™s currency account for the currency of\
            \ the transaction."
    inline_response_200_109:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_109_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_110:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_110_data"
        status:
          $ref: "#/components/schemas/Status"
    inline_response_200_111:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/inline_response_200_111_data"
        status:
          $ref: "#/components/schemas/Status"
    collect_payments_body:
      required:
      - amount
      - country
      - currency
      - items
      type: object
      properties:
        amount:
          type: string
          description: "The amount of the payment, in units of the currency defined\
            \ in currency. Decimal, including the correct number of decimal places\
            \ for the currency exponent, as defined in ISO 2417:2015.<BR> On the hosted\
            \ payment page, the customer: <BR> * Cannot modify the amount when amount_is_editable\
            \ is false or not used. <BR> * Can modify the amount when amount_is_editable\
            \ is true and amount has a positive value. <BR> * Must enter an amount\
            \ when amount_is_editable is true and amount is 0, null, or not used."
        amount_is_editable:
          type: boolean
          description: Determines whether the customer can edit the amount. <BR> *
            **true** - The customer can edit the amount. <BR> * **false** - The customer
            cannot edit the amount.
          default: false
        checkout:
          type: object
          description: Optional parameters for the checkout page.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
        currency:
          type: string
          description: "In transactions without FX, defines the currency of the transaction.\
            \ Three-letter ISO 4217 code. <BR> In FX transactions: <BR> * When `fixed_side`\
            \ is **buy**, it is the currency received in the Rapyd wallet. <BR> *\
            \ When `fixed_side` is **sell**, it is the currency charged to the buyer.\
            \ <BR> See also `fixed_side` and `requested_currency` fields."
        customer:
          type: string
          description: ID of a specific customer. String starting with **cus_**. Restricts
            the payment link to the customer.
        fixed_side:
          type: string
          description: "Indicates whether the FX rate is fixed for the buy side (seller)\
            \ or for the sell side (buyer).<BR>* **buy** - The currency that the Rapyd\
            \ Wallet receives for goods or services. Fixed side buy relates to the\
            \ seller (merchant) funds. For example, a US-based merchant wants to charge\
            \ 100 USD. The buyer (customer) pays the amount in MXN that converts to\
            \ 100 USD.<BR>* **sell** - The currency that the buyer is charged for\
            \ purchasing goods or services. Fixed side sell relates to the buyer (customer)\
            \ funds. For example, a US-based merchant wants to charge a buyer 2,000\
            \ MXN and will accept whatever amount in USD that is converted from 2,000\
            \ MXN."
          default: buy
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see 'List Supported Languages'. <BR> * When this parameter\
            \ is null, the language of the user's browser is used. <BR> If the language\
            \ of the user's browser cannot be determined, the default language is\
            \ English."
          default: en
        max_payments:
          type: number
          description: "Indicates the maximum number of times that the payment link\
            \ can be used for payments. When not indicated, there is no limit."
          example: 7
        merchant_reference_id:
          type: string
          description: "Identifier defined by the client for reference purposes. Limit:\
            \ 45 characters."
        requested_currency:
          type: string
          description: "Currency for one side of an FX transaction. Three-letter ISO\
            \ 4217 code. <BR><BR>* When `fixed_side` is **sell**, it is the currency\
            \ received in the Rapyd Wallet. <BR><BR>* When `fixed_side` is **buy**,\
            \ it is the currency charged to the buyer (customer)."
    inline_response_400_68:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_CURRENCY_MISSING_WHEN_AMOUNT_IS_NOT_EDITABLE
          message: "The request tried to create a hosted page without specifying a\
            \ currency, but the amount is not editable. The request was rejected.\
            \ Corrective action: Set 'amount_is_editable' to true or set 'currency'\
            \ to a valid value."
          operation_id: 889e9472-922c-40a2-861d-19977c396db5
          response_code: ERROR_HOSTED_PAGE_CURRENCY_MISSING_WHEN_AMOUNT_IS_NOT_EDITABLE
          status: ERROR
    v1_identities_body:
      required:
      - country
      - document_type
      - ewallet
      - face_image
      - front_side_image
      - reference_id
      properties:
        back_side_image:
          type: string
          description: Base-64-encoded image of the back of the identity document.
        back_side_image_mime_type:
          type: string
          description: MIME type of the back side image of the identity document.
          default: image/jpeg
          enum:
          - image/jpeg
          - image/png
        contact:
          type: string
          description: ID of a personal contact for a **person** wallet.
        country:
          $ref: "#/components/schemas/Country_1"
        document_type:
          type: string
          description: Type of the identification document. Two-letter code.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet. String starting with **ewallet_**.
        face_image:
          type: string
          description: "Base-64-encoded image of the face. Maximum size: 8,000 pixels\
            \ height or width, 5 MB."
        face_image_mime_type:
          type: string
          description: MIME type of the face image. Default is image/jpeg.
        front_side_image:
          type: string
          description: Base-64-encoded image of the front of the identity document.
        front_side_image_mime_type:
          type: string
          description: MIME type of the front side image of the identity document.
          default: image/jpeg
          enum:
          - image/jpeg
          - image/png
        reference_id:
          type: string
          description: "ID of the identity verification request. Must be unique for\
            \ each request. Defined by the client. Maximum length: 36 characters.\
            \ In sandbox, to simulate success or failure, the string must contain\
            \ one of the following values: **success**, **failure**. For example:\
            \ **12345678success**"
        request_type:
          type: string
          description: Determines the action that is taken on the request.
          enum:
          - strore
          - verify
        send_callback:
          type: boolean
          description: Determines whether a webhook is sent with the results of the
            verification request.
    inline_response_200_112:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_112_data"
    inline_response_400_69:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_ID_VERIFICATION
          message: "The request tried to validate identity, but the operation failed.\
            \ The request was rejected. Corrective action: Check all parameters and\
            \ provide a unique reference ID for each identity verification operation,\
            \ whether successful or unsuccessful."
          response_code: ERROR_ID_VERIFICATION
          status: ERROR
    inline_response_200_113:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_113_data"
    inline_response_200_114:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_114_data"
    inline_response_200_115:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_115_data"
    applications_hosted_body:
      required:
      - country
      - phone_number
      - rapyd_entity_token
      type: object
      properties:
        application_type:
          type: string
          description: Code for the type of application.
          x-note: "If you do not specify application_type, the application is not\
            \ created until the applicant selects an application type and saves it."
        country:
          type: string
          description: The country where the company is domiciled. Two-letter ISO
            3166-1 ALPHA-2 code. The hosted application displays the country as the
            default setting.
        rapyd_entity_token:
          type: string
          description: The ID of the Rapyd wallet of the company. String starting
            with ewallet_.
          example: ewallet_ef84c580177dbfc4293b1cf73c73fc77
        phone_number:
          type: string
          description: The phone number of the applicant. This is the phone number
            where an authentication code is sent. Must have a leading plus sign (+).
        metadata:
          type: object
          description: A JSON object defined by the client.
        client_reference_id:
          type: string
          description: ID defined by the client. Limited to 255 characters.
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing Back to
            Website to exit the hosted page. This URL overrides the merchant_website
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing Close to
            exit the hosted page. This URL overrides the merchant_website URL. Does
            not support localhost URLs.
    inline_response_200_116:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/VerifyHostedAppResponse"
    inline_response_200_117:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_117_data"
    hosted_idv_body:
      required:
      - contact
      - country
      - ewallet
      - reference_id
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        contact:
          type: string
          description: ID of the wallet contact. String starting with **cont_**.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            identification document. Must match the wallet contact country.
        document_type:
          type: string
          description: Type of the identification document. Two-letter code.<BR>See
            also 'List Official Identification Documents'.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet. String starting with **ewallet_**.
        force_camera:
          type: boolean
          description: "Requires the applicant to use the device's camera for a current\
            \ face image, and prohibits uploading an existing image file. Default\
            \ is **false**."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> * If the language of the user's browser cannot be determined,\
            \ the default language is English."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation.<BR>**Range**: 1 minute to 30 days."
        reference_id:
          type: string
          description: ID of the identity verification request. Must be unique for
            each request. Defined by the client.
        request_type:
          type: string
          description: Determines the action that is taken on the request. One of
            the following:<BR>* **store** - Store the images on the Rapyd platform.<BR>*
            **verify** - Verify the identity of the person in the images.
          enum:
          - store
          - verify
    inline_response_200_118:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_118_data"
    inline_response_400_70:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: ERROR_HOSTED_PAGE_INVALID_CONTACT
          message: "The request attempted a hosted page operation for identity verification\
            \ process, but the contact was of type 'business' and the verification\
            \ process is only for personal contacts. The request was rejected. Corrective\
            \ action: Add a personal contact to the wallet and run the verification\
            \ process on the personal contact."
          response_code: ERROR_HOSTED_PAGE_INVALID_CONTACT
          status: ERROR
    v1cnltermination_query_search_criteria:
      type: object
      properties:
        search_area:
          type: string
          description: "The geographic range of the query. One of the following:<BR>*\
            \ **global** - The query is geographically unlimited.<BR>* **local** -\
            \ The query is limited to the merchant's country.<BR>* **regional** -\
            \ The query is limited to the merchant's region, such as APAC."
          enum:
          - global
          - local
          - regional
      description: Specifies search criteria for the query.
    v1cnltermination_query_queried_merchant_address:
      required:
      - address_line_1
      - address_line_2
      - city
      - country
      type: object
      properties:
        address_line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name.<BR>String with letters, numbers, numeric letters, and spaces.\
            \ Applicable street details in this order: building number/name, street\
            \ number and name, shop number, floor number.<BR>Length: 1-60"
        address_line_2:
          type: string
          description: "Line 2 of the address, such as a building number and street\
            \ name.<BR>String with letters, numbers, numeric letters, and spaces.<BR>Length:\
            \ 1-60"
        city:
          type: string
          description: "City portion of the address.<BR>String with letters, numbers,\
            \ and spaces.<BR>Length: 1-20"
        country:
          type: string
          description: "Code for the country.<BR>The two-letter ISO 3166-1 ALPHA-2\
            \ country code.<BR>Length: 2"
        postal_code:
          type: string
          description: "Postal code portion of the address.<BR>String with letters,\
            \ numbers, and spaces.<BR>Length: 1-10"
      description: Details of the merchant's business address.
    v1cnltermination_query_queried_merchant_principals_address:
      type: object
      properties:
        address_line_1:
          type: string
          description: "Line 1 of the address, such as a building number and street\
            \ name.<BR>String with letters, numbers, numeric letters, and spaces.\
            \ Applicable street details in this order: building number/name, street\
            \ number and name, shop number, floor number.<BR>Length: 1-60"
        address_line_2:
          type: string
          description: "Line 2 of the address, such as a building number and street\
            \ name.<BR>String with letters, numbers, numeric letters, and spaces.<BR>Length:\
            \ 1-60"
        city:
          type: string
          description: "City portion of the address.<BR>String with letters, numbers,\
            \ and spaces.<BR>Length: 1-20"
        country:
          type: string
          description: "Code for the country.<BR>The two-letter ISO 3166-1 ALPHA-2\
            \ country code.<BR>Length: 2"
        postal_code:
          type: string
          description: "Postal code portion of the address.<BR>String with letters,\
            \ numbers, and spaces.<BR>Length: 1-10"
      description: Details of the owner's business address.
    v1cnltermination_query_queried_merchant_principals:
      required:
      - address_line_1
      - address_line_2
      - city
      - country
      type: object
      properties:
        first_name:
          type: string
          description: "The first name of the owner.<BR>String that starts and ends\
            \ with any combination of characters, whitespace, a specified range of\
            \ Latin letters with diacritics, and a specific set of special characters.<BR>Length:\
            \ 1-35"
        middle_initial:
          type: string
          description: "The initial letter of the owner's middle name.<BR>String that\
            \ starts and ends with any combination of characters, whitespace, a specified\
            \ range of Latin letters with diacritics, and a specific set of special\
            \ characters.<BR>Length: Maximum - 1"
        last_name:
          type: string
          description: "The family name of the owner.<BR>String that starts and ends\
            \ with any combination of characters, whitespace, a specified range of\
            \ Latin letters with diacritics, and a specific set of special characters.<BR>Length:\
            \ 1-40"
        email:
          type: string
          description: "The primary email address of the merchant.<BR>String that\
            \ starts with a combination of letters, numbers, ., _, %, or - before\
            \ an **@** sign. After the **@** sign, a domain name with letters, numbers,\
            \ ., or -, ending with a dot and a 2 to 4 letter domain type, such as\
            \ **.com**. For example: **billsmith@snapphoto.com**<BR>Length: Maximum\
            \ - 90"
        phone_number:
          type: string
          description: "The phone number of the owner.<BR> Phone number in the format\
            \ +[country code]/[phone number], where the forward slash (/) represents\
            \ a separator between the country code and the telephone number.<BR>The\
            \ plus sign before the country code is optional. The country code may\
            \ only contain digits.<BR>The slash is required and must follow the country\
            \ code.<BR>The telephone number may include blank spaces and hyphens (-).<BR>For\
            \ example, in **+1/555 555-5555**, the country code is 1 and the telephone\
            \ number is 5555555555.<BR>Length: 8-15"
        address:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_principals_address"
      description: Details of the registered principal owners of the merchant.<BR>
        Maximum - 3.
    v1cnltermination_query_queried_merchant:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_address"
        phone_numbers:
          type: object
          description: "Business phone numbers of the merchant.<BR<Array of strings.\
            \ Maximum - 2. Each string is a phone number in the format +[country code]/[phone\
            \ number], where the forward slash (/) represents a separator between\
            \ the country code and the telephone number.<BR>The plus sign before the\
            \ country code is optional. The country code may only contain digits.<BR>The\
            \ slash is required and must follow the country code.<BR>The telephone\
            \ number may include blank spaces and hyphens (-).<BR>For example, in\
            \ **+1/555 555-5555**, the country code is 1 and the telephone number\
            \ is 5555555555.<BR>Length of each phone number: 8-15."
        business_category:
          type: string
          description: The category of the merchant's business.
          enum:
          - Merchant
          - Payment Facilitator
          - Independent Sales Organization
          - Marketplace
          - Staged Digital Wallet Operator
          - Sponsored Merchant
        dba_name:
          type: string
          description: "The \"doing business as\" name of the merchant.<BR>String\
            \ that starts and ends with any combination of characters, whitespace,\
            \ a specified range of Latin letters with diacritics, and a specific set\
            \ of special characters.<BR>Length: 4-60"
        mcc:
          type: object
          description: "Merchant category codes of the merchant's business.<BR>Array\
            \ of strings. Numbers or US letters. Maximum - 5 items. <BR>Length of\
            \ each string: 4."
          example:
          - "5411"
          - "5812"
        principals:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_principals"
        is_ecommerce:
          type: boolean
          description: Indicates whether the merchant trades through the internet.
        legal_name:
          type: string
          description: "The family name of the owner.<BR>String that starts and ends\
            \ with any combination of characters, whitespace, a specified range of\
            \ Latin letters with diacritics, and a specific set of special characters.<BR>Length:\
            \ 1-40"
        url:
          type: object
          description: "Web addresses associated with the merchant.<BR>Array of strings.\
            \ Numbers or US letters. Maximum - 3 items. For example: [\"https://fourstarmarket.com\"\
            , \"https://fourstarmarket.net\"]<BR>Length: Maximum - 40"
        email:
          type: string
          description: "The primary email address of the owner.<BR>String that starts\
            \ with a combination of letters, numbers, ., _, %, or - before an **@**\
            \ sign. After the **@** sign, a domain name with letters, numbers, .,\
            \ or -, ending with a dot and a 2 to 4 letter domain type, such as **.com**.\
            \ For example: **davidsmith@snapphoto.com**<BR>Length: Maximum - 90"
      description: Information about the merchant who is the subject of the query.
    cnl_termination_query_body:
      required:
      - partner_merchant_reference
      - partner_query_reference
      - queried_merchant
      - reference_id
      properties:
        partner_merchant_reference:
          type: string
          description: "ID of the merchant, defined by the partner.<BR>Length: 0-60"
        partner_query_reference:
          type: string
          description: "Unique ID of the query request, defined by the partner.<BR>Length:\
            \ 0-60"
        search_criteria:
          $ref: "#/components/schemas/v1cnltermination_query_search_criteria"
        queried_merchant:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant"
    inline_response_200_119:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_119_data"
    inline_response_400_71:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: INVALID_FIELDS
          message: "The request attempted an operation, but one of the fields contained\
            \ a value that is not valid. The request was rejected. Corrective action:\
            \ The name of the field appears at the end of the response code. Use a\
            \ valid value."
          response_code: "INVALID_FIELDS - [SEARCH_CRITERIA]"
          status: ERROR
    inline_response_200_120:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/inline_response_200_120_data"
    inline_response_400_72:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      example:
        status:
          error_code: BAD REQUEST
          message: ""
          response_code: BAD REQUEST
          status: ERROR
    inline_response_200_121:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/ListSupportedLanguagesResponse"
    inline_response_200_122:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/ListCountriesResponse"
    inline_response_200_123:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
        data:
          $ref: "#/components/schemas/ListCurrenciesResponse"
    VerifyHostedAppResponse_merchant_details_merchant_customer_support:
      type: object
      properties:
        email:
          type: string
          description: ""
        url:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
      description: ""
    VerifyHostedAppResponse_merchant_details:
      type: object
      properties:
        merchant_alias:
          type: string
          description: "The name that appears on the hosted page when merchant_logo\
            \ is not specified. To change this value, contact Client Support. Response\
            \ only."
        merchant_language:
          type: string
          description: |
            Determines the default language of the application page.  The values are documented in List Hosted Page Supported Languages.
          x-note: "When this parameter is null, the language of the user's browser\
            \ is used. * If the language of the user's browser cannot be determined,\
            \ the default language is English. Response only."
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo. Response only. To\
            \ configure this feature, use the Client Portal."
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        merchant_color:
          type: string
          description: ""
        merchant_design:
          type: string
          description: ""
        merchant_customer_support:
          $ref: "#/components/schemas/VerifyHostedAppResponse_merchant_details_merchant_customer_support"
        merchant_terms:
          type: string
          description: ""
        merchant_privacy_policy:
          type: string
          description: ""
      description: Object containing information about the merchant.
    AddCardtoGooglePayResponse_UserAddress:
      type: object
      properties:
        firstPartAddress:
          type: string
          description: First part address.
        secondPartAddress:
          type: string
          description: Second part address.
        countryCode:
          type: string
          description: Two character Country code.
        locality:
          type: string
          description: "Locality such as city, town, etc."
      description: "The base64 encoded string that contains the encrypted object for\
        \ Push Provisioning. Required for adding the card to the Google Pay wallet\
        \ by using the Google Pay `pushTokenizeRequest` method. For more information\
        \ refer to the Google Pay Provisioning developer documentation .Details of\
        \ an account funding transaction (AFT), which transfers funds from a card\
        \ to a cardholder's wallet."
    PayoutAmountRangePerCurrency_inner:
      properties:
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
        payout_currency:
          $ref: "#/components/schemas/Currency"
    Beneficiary_bin_details:
      type: object
      properties:
        bin_number:
          type: string
          description: Bank identification details. Relevant to cards.
        brand:
          type: string
          description: The brand of the card.
        country:
          type: string
          description: The country where the card was issued.
        issuer:
          type: string
          description: Name of the bank that issued the card.
        level:
          type: string
          description: The level of the card.
        type:
          type: string
          description: The type of card.
      description: Bank identification details. Relevant to cards.
    CardEligibility_aft:
      type: object
      properties:
        domestic:
          type: string
          description: Indicates whether the card is eligible to initiate a domestic
            AFT transaction.
        international:
          type: string
          description: Indicates whether the card is eligible to initiate a cross-border
            AFT transaction.
      description: Indicates whether the card is eligible to initiate AFT transactions
        (Card Payments). Valid statuses for AFT transactions include:<BR> * **true**
        - Transfer of funds is permitted.<BR>* **false** - Transfer of funds is not
        permitted.
    CardEligibility_oct:
      type: object
      properties:
        money_transfer_domestic:
          type: string
          description: Indicates whether domestic money transfer OCTs are allowed.
        money_transfer_international:
          type: string
          description: Indicates whether international money transfer OCTs are allowed.
        non_money_transfer_domestic:
          type: string
          description: Indicates whether domestic non-money transfer OCTs are allowed.
        non_money_transfer_international:
          type: string
          description: Indicates whether international non-money transfer OCTs are
            allowed.
        online_gambling_domestic:
          type: string
          description: Indicates whether domestic online gambling OCTs are allowed.
        online_gambling_international:
          type: string
          description: Indicates whether international online gambling OCTs are allowed.
      description: Indicates whether the card can receive the domestic/international
        OCT transactions (Card Payouts). Valid statuses for each OCT type include:<BR>*
        **fast_funds** - Transfer of funds may take up to 30 minutes.<BR>* **not_supported**
        - The card is not supported for the specific type of OCT transfer.<BR>* **standard**
        - Transfer of funds may take up to 48 hours.
    Contact_issued_card_data:
      type: object
      properties:
        preferred_name:
          type: string
          description: The name of the contact person.
        transaction_permissions:
          type: string
          description: Indicates permissions for issuing transactions.
          enum:
          - allowed
          - not allowed
        role_in_company:
          type: string
          description: The role of the named person.
          enum:
          - owner
          - agent
          - employee
      description: Describes additional information about the business contact for
        a company wallet.
    ListWebhooksResponse_attempts_http_response_headers:
      type: object
      properties:
        connection:
          type: string
          description: Control options for the connection.
        content-length:
          type: number
          description: Length of the content in bytes.ook destination.
        content-type:
          type: string
          description: MIME type of the content.
        date:
          type: string
          description: Timestamp of the response in HTTP-date format (RFC 9110).
        server:
          type: string
          description: Name of the server.
      description: "Headers of the HTTP response from the configured webhook destination,\
        \ with the value received."
    ListWebhooksResponse_attempts:
      type: object
      properties:
        error:
          type: string
          description: Error message received from the configured webhook destination.
        http_status_code:
          type: string
          description: HTTP status code returned by the configured webhook destination.
        http_response_body:
          type: string
          description: Body of the HTTP response from the configured webhook destination.
        http_response_headers:
          $ref: "#/components/schemas/ListWebhooksResponse_attempts_http_response_headers"
      description: "List of attempts at sending the webhook. Array of objects that\
        \ contain the following fields:"
    ListCountriesResponse_languages:
      type: object
      properties:
        currency_code:
          type: string
          description: Three-letter ISO 4217 code for the currency.
        currency_name:
          type: string
          description: Name of the currency in English.
        currency_sign:
          type: string
          description: Unicode symbol for the currency.
        id:
          type: string
          description: ID of the country.
        iso_alpha2:
          type: string
          description: 2-letter ISO 3166-1 alpha-2 code for the country.
        iso_alpha3:
          type: string
          description: 3-letter ISO 3166-1 alpha-2 code for the country. Informational
            only - not relevant to Rapyd API.
        name:
          type: string
          description: Name of the country in English.
        phone_code:
          type: string
          description: International telephone prefix for the country.
      description: List of the supported countries.
    ListSupportedLanguagesResponse_languages:
      type: object
      properties:
        name:
          type: string
          description: Name of the language in English.
        iso_alpha2:
          type: string
          description: "ISO 639-1 code for the language. 2 letters, with suffix where\
            \ relevant."
      description: List of the languages supported for hosted pages.
    Ewallet_contacts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        has_more:
          type: boolean
        total_count:
          type: integer
        url:
          type: string
    Field_conditions:
      type: object
      properties:
        description:
          type: string
          description: Description of the condition.
        element_name:
          type: string
          description: "The name of a field, including the path. The field is the\
            \ first operand of the condition."
        operator:
          type: string
          description: A symbol representing the operator of the condition. String
            starting with $. The operator determines the relationship between the
            operands.
        threshold_value:
          description: One or more possible values of the element_name field. The
            second operand of the condition.
          oneOf:
          - type: string
          - type: array
            items:
              type: string
    HostedBeneficiaryTokenResponse_beneficiary_optional_fields:
      properties:
        company_name:
          type: string
          description: "The name of the beneficiary's company. Relevant to beneficiaries\
            \ that are not individuals. If the request does not contain this information,\
            \ the hosted page prompts the customer for it. <BR> If `beneficiary_entity_type`\
            \ is **individual**, this field must be omitted."
        first_name:
          type: string
          description: "The first name of the beneficiary. Relevant to individual\
            \ beneficiaries. If the request does not contain this information, the\
            \ redirect page prompts the customer for it."
        identification_type:
          description: "Type of identification document. When `entity_type` is **company**,\
            \ this field must be **company_registered_number**. When `entity_type`\
            \ is **individual**, one of the following values: <>BR> * **drivers_license**<BR>\
            \ * **identification_id** <BR> * **international_passport** <BR> * **residence_permit**<BR>\
            \ * **social_security**<BR> * **work_permit** type: string"
        identification_value:
          type: string
          description: The identification of the document mentioned in identification_type.
        last_name:
          type: string
          description: "The last name of the beneficiary. Relevant to individual beneficiaries.\
            \ If the request does not contain this information, the redirect page\
            \ prompts the customer for it."
    HostedBeneficiaryTokenResponse_merchant_customer_support:
      properties:
        email:
          type: string
          description: Email address.
        url:
          type: string
          description: URL for the client's customer support service.
        phone_number:
          type: string
          description: Phone number for contacting the client's customer support service.
    Payout_ewallets:
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in currency. Decimal. If the total amount of the payment is\
            \ not fully accounted for, the balance appears in the client wallet. Relevant\
            \ when percentage is not set."
        ewallet_id:
          type: string
          description: ID of the wallet. String starting with **ewallet_**. Read-only.
        percent:
          type: number
          description: The percentage that is paid to the wallet out of the total
            payment. Read-only.
    Payout_instructions:
      type: object
      properties:
        name:
          type: string
        steps:
          type: array
          items:
            type: object
            x-isDynamicObject: true
    PayoutMethodType_amount_range_per_currency:
      type: object
      properties:
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency.
        maximum_amount:
          type: number
          description: The maximum amount allowed for a payment.
        minimum_amount:
          type: number
          description: The minimum amount allowed for a payment.
      description: "Indicates the amount range for the payment method's currencies.\
        \ Array of objects. Each object contains the following fields:"
    SimulateCardTransactionAuthorizationRequestEEA_auth_response:
      type: object
      properties:
        code:
          type: string
          description: Indicates success or reason for failure.
        message:
          type: string
          description: Descriptive text.
      description: "Response related to an authorization. Contains the following fields:"
    SimulateClearingCardTransactionEEA_remote_auth_response:
      type: object
      properties:
        authorization_id:
          type: string
          description: ID of the authorization. String starting with **cardauth_**.
        response_code:
          type: string
          description: Code returned by the client in the response to the remote authorization.
        auth_code:
          type: string
          description: Authorization code returned by the client in the response to
            the remote authorization.
      description: "Response to a successful remote authorization request. Contains\
        \ the following fields:"
    PaymentAmountRangePerCurrency_inner:
      properties:
        maximum_amount:
          type: number
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
        minimum_amount:
          type: number
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
        currency:
          $ref: "#/components/schemas/Currency_1"
    CardTokenResponse_card_fields:
      type: object
      properties:
        recurrence_type:
          type: string
          description: "Specifies the primary intended purpose of the saved payment\
            \ method. See Saving a European Card While Creating a Payment. One of\
            \ the following values: <BR> * **installment - Regular payments for a\
            \ defined number of payment cycles.** <BR> * **recurring** - Regular payments\
            \ for an indefinite period. <BR> * **unscheduled** - Individual unrelated\
            \ payments."
      description: Contains details about the card.
    CardTokenResponse_payment_params:
      type: object
      properties:
        complete_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is successful,\
            \ after returning from an external page such as a 3DS page. Does not support\
            \ localhost URLs."
        error_payment_url:
          type: string
          description: "URL where the customer is redirected when payment is not successful,\
            \ after returning from an external page, such as a 3DS page. Does not\
            \ support localhost URLs."
      description: "Contains the following fields. When these fields do not include\
        \ values, the user is redirected to the hosted page, and a related status\
        \ message appears at the top of the page."
    Customer_payment_methods:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/CustomerPaymentMethod"
        has_more:
          type: boolean
        total_count:
          type: integer
        url:
          type: string
      description: "An object containing the following fields - * data - A list of\
        \ up to three payment methods. For more information, see Customer Payment\
        \ Method Object. * has_more - Indicates whether there are more than three\
        \ payment methods for this customer. * total_count - Total number of payment\
        \ methods for this customer. * url - URL for requesting all of the payment\
        \ methods for this customer.."
    CustomerRequest_payment_method:
      type: object
      properties:
        fields:
          type: array
          description: Payment Method Type required field
          items:
            $ref: "#/components/schemas/Field_1"
        type:
          type: string
          description: "Type of the payment method. For example, it_visa_card"
      description: The payment method that is used when the transaction does not specify
        a payment method. String starting with **card_** or other_.
    Escrow_ewallets:
      type: object
      properties:
        ewallet:
          type: string
          description: "ID of the wallet, a string starting with **ewallet_**."
        amount:
          type: number
          description: The amount to release to this wallet. Relevant when `percentage`
            is not set.
        percentage:
          type: number
          description: "The percentage of this escrow to release to this wallet. Relevant\
            \ when `amount` is not set. On a partial release after the first, this\
            \ refers to the percentage of the original amount of the escrow."
      description: Describes the wallets and the releases from escrow.
    EscrowResponse_escrow_releases_data:
      type: object
      properties:
        amount:
          type: number
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        created_at:
          type: number
          description: "Date and time the escrow release was created, in Unix time."
        currency:
          type: string
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        ewallets:
          $ref: "#/components/schemas/Escrow_ewallets"
        id:
          type: number
          description: "ID of the escrow release, a string starting with **er_**."
        proportional_release:
          type: boolean
          description: Indicates that the wallets were released in the same proportion
            that was defined in the Create Payment request.
        trigger:
          type: string
          description: "Indicates what triggered the escrow release. One of the following:\
            \ <BR> * **event** - Funds were released due to an API request. <BR> **time**\
            \ - Funds were automatically released at 5:00 p.m. GMT (17:00 GMT) on\
            \ the day indicated in theCreate Payment request. <BR> **cancel_escrow**\
            \ - Escrow was canceled."
      description: Array of objects that describe individual escrow releases.
    EscrowResponse_escrow_releases:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/EscrowResponse_escrow_releases_data"
        has_more:
          type: boolean
          description: Indicates that the number of escrow releases is greater than
            the number returned in the response.
        total_count:
          type: number
          description: Number of escrow releases.
        url:
          type: string
          description: URL for the record of all escrow releases for this payment.
      description: Array of objects that describe individual releases.
    HostedPageAdditionalResponse_account_funding_transaction:
      type: object
      properties:
        ewallet:
          type: string
          description: ID of a Rapyd wallet.
          example: ewallet_d2ab10025f4da04a5442ea264fd98f53
        payment_method_types:
          description: Array of strings. One or more card payment method types that
            support AFT.
          example:
          - at_mastercard_card
      description: "Details of an account funding transaction (AFT), which transfers\
        \ funds from a card to a cardholder's wallet."
    HostedPageAdditionalResponse_cart_items:
      properties:
        amount:
          type: number
          description: The price of the item in the currency defined in currency.
        amount_off:
          type: number
          description: "The size of the discount, measured in the amount of money.\
            \ Decimal. Range: Positive decimal number, including the correct number\
            \ of decimal places for the currency exponent, as defined in ISO 2417:2015."
        discount:
          type: number
          description: "The total amount of money deducted from the payment for the\
            \ discount. Decimal. Range: Positive decimal number, including the correct\
            \ number of decimal places for the currency exponent, as defined in ISO\
            \ 2417:2015."
        image:
          type: string
          description: The image that appears in the checkout page for this item.
        name:
          type: string
          description: The name of the item.
        percent_off:
          type: number
          description: "The size of the discount, measured in percent. Integer. Range:\
            \ 1-100."
        quantity:
          type: number
          description: The quantity of the item.
      description: Describes the cart items that the customer is purchasing. These
        items are displayed at the checkout page.
    HostedPageAdditionalResponse_custom_elements:
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Determines whether the customer is asked to fill in the billing\
            \ address. Relevant when a card payment method is selected.<BR>* **true**\
            \ - The address fields appear on the checkout page.<BR>* **false** - The\
            \ address fields appear only if the country is **US**, **GB** or **CA**.<BR>**Note:**\
            \ When the customer already has address details, it is always displayed."
        cardholder_name:
          type: string
          description: "The name of the card owner, printed on the front of the card."
        display_description:
          type: boolean
          description: Determines whether the checkout page displays the payment description.<BR>*
            **true** - The payment description appears.<BR>* **false** - The payment
            description does not appear.<BR>Relevant when description is passed in
            the Create Checkout Page request.
        dynamic_currency_conversion:
          type: boolean
          description: "Determines whether the checkout page displays multiple currency\
            \ options for a payment.<BR>* **true** - Multiple currency options appear.<BR>*\
            \ **false** - Currency options do not appear.<BR>When the customer selects\
            \ the requested currency, the checkout page displays the following information:<BR>*\
            \ The original amount and currency.<BR>* The converted amount in the requested\
            \ currency.<BR>* The exchange rate.<BR>Relevant when:<BR>* The 'Create\
            \ Checkout Page' request passes `requested_currency`.<BR>* `fixed_side`\
            \ is **buy**.<BR> One or more payment methods support the values for `currency`\
            \ and `requested_currency`."
        merchant_color:
          type: string
          description: Reserved.
        merchant_currency_only:
          type: boolean
          description: "In a payment with FX where `fixed_side`=**buy**, determines\
            \ whether the buyer's currency and the exchange rate appear. One of the\
            \ following:<BR>* **true** - The currency and the exchange rate are hidden.<BR>*\
            \ **false** - The currency and the exchange rate appear."
        payment_fees_display:
          type: boolean
          description: Determines whether payment fees appear on the checkout page.<BR>*
            **true** - Payment fees appear when the `payment_fees` object is set in
            the 'Create Checkout Page' request.<BR>* **false** - Payment fees do not
            appear.
        save_card_default:
          type: boolean
          description: Determines whether the **save card** checkbox is checked by
            default.<BR>* **true** - The **save card** checkbox is checked.<BR>* **false**
            - The **save card** checkbox is cleared.<BR>Relevant when `customer_id`
            is passed in the 'Create Checkout Page' request.
      description: Describes customizations of the page as it appears to the customer.
    InvoiceItemResponse_period:
      type: object
      properties:
        start:
          type: string
          description: "First date in the period covered by the invoice, in Unix time.\
            \ Response only."
        end:
          type: string
          description: "Last date in the period covered by the invoice, in Unix time.\
            \ Response only."
      description: "Defines the start and end of the time period that this invoice\
        \ item refers to. Relevant when the invoice item refers to more than one day.\
        \ Contains the following fields:"
    InvoiceItem_period:
      type: object
      properties:
        start:
          type: string
          description: "First date in the period covered by the invoice, in Unix time.\
            \ Response only."
        end:
          type: string
          description: "Last date in the period covered by the invoice, in Unix time.\
            \ Response only."
    InvoiceLineResponse_period:
      type: object
      properties:
        start:
          type: number
        end:
          type: number
    OrderResponse_status_transitions:
      type: object
      properties:
        canceled:
          type: number
        fulfilled:
          type: number
        paid:
          type: number
        returned:
          type: number
        pending:
          type: number
        partial:
          type: number
      description: Indicates the last time in Unix time that the order transitioned
        to one of the following statuses. A zero value for a status indicates that
        the order has never transitioned to it.
    Payment_escrow:
      type: object
      properties:
        amount:
          type: number
          description: "The amount in escrow, in units of the currency defined in\
            \ currency in the payment."
        amount_on_hold:
          type: number
          description: "Total amount of funds that are currently held in the escrow,\
            \ in the currency defined in `currency_code` in the payment."
        created_at:
          type: number
          description: "Date and time the escrow was created, in Unix time."
        currency:
          type: string
          description: The currency of the escrow balance. Three-letter ISO 4217 code.
        escrow_release_days:
          type: number
          description: Indicates the number of days after creation of the payment
            that funds are released from escrow. Funds are released at 5:00 pm GMT
            on the day indicated.
        escrow_releases:
          type: object
          description: Array of objects that describe individual releases.
        ewallets:
          description: Array of objects that define the allocation of the release
            to multiple wallets.
        last_payment_completion:
          type: number
          description: "Date and time of the completion of the last payment or partial\
            \ payment, in Unix time."
        payment:
          type: string
          description: "Date and time of the completion of the last payment or partial\
            \ payment, in Unix time."
        status:
          type: string
          description: "status of the escrow. One of the following:<BR>* **pending**\
            \ - The payment and escrow were created, but the payment is not completed\
            \ and the funds are not in the escrow.<BR>* **on_hold** - The payment\
            \ is completed and the funds are in escrow.<BR>* **canceled** - The escrow\
            \ is canceled.<BR>* **released** - All or part of the funds have been\
            \ released to the wallets."
          enum:
          - pending
          - on_hold
          - canceled
          - released
        total_amount_released:
          type: number
          description: "Total amount of funds that were released to the wallets, in\
            \ the currency defined in `currency_code` in the payment response."
        updated_at:
          type: number
          description: "Date and time of the last update to the escrow, in Unix time."
      description: Details of the escrow for the payment. Relevant when the payment
        is created with `escrow` set to **true**.
    Payment_ewallets:
      properties:
        ewallet_id:
          type: string
          description: ID of the wallet.
        amount:
          type: number
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in `currency`."
        percent:
          type: number
          description: The percentage that is paid to the wallet out of the total
            payment.
        refunded_amount:
          type: number
          description: "The total amount refunded against this payment, in units of\
            \ the currency defined in `currency`."
    Payment_steps:
      type: object
      properties:
        step:
          type: string
          description: "Step for the customer to take. Each step is named **stepN**,\
            \ where **N** is an integer."
    Payment_instructions:
      type: object
      properties:
        name:
          type: string
          description: Description of the payment method
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Payment_steps"
    Payment_payment_method_data_bin_details:
      type: object
      properties:
        bin_number:
          type: string
          description: Bank identification number of the issuing bank.
        brand:
          type: string
          description: The brand of the card
        country:
          type: string
          description: The country where the card was issued.
        issuer:
          type: string
          description: Name of the bank that issued the card.
        level:
          type: number
          description: The level of the card.
        type:
          type: string
          description: The type of card.
      description: Bank identification details. Relevant to cards.
    Payment_payment_method_data_digital_wallet:
      type: object
      properties:
        pan_type:
          type: string
          description: Describes the type of PAN.
        type:
          type: string
          description: Describes the type of digital wallet.
      description: Information about the digital wallet.
    Payment_payment_method_data:
      type: object
      properties:
        account_last4:
          type: string
          description: Last four digits of the IBAN. Relevant to bank transfers.
        acs_check:
          type: string
          description: Last four digits of the IBAN. Relevant to bank transfers. Relevant
            to cards.
          enum:
          - pass
          - fail
          - unavailable
          - unchecked
        avs_check:
          type: string
          description: "Results of the Address Verification Service (AVS) check.<BR>Relevant\
            \ to Visa, Mastercard, Amex, and Discover cards."
        authentication_url:
          type: string
          description: URL of a page where the customer enters the IBAN and phone
            number for authentication.<BR>Relevant to some bank transfer payment methods.
        bic_swift:
          type: string
          description: BIC (Bank Identifier Code)/SWIFT code.
        bin_details:
          $ref: "#/components/schemas/Payment_payment_method_data_bin_details"
        category:
          type: string
          description: Category of payment method. One of the following:<BR>* **bank_redirect**<BR>*
            **bank_transfer**<BR>* **card**<BR>* **cardtocard<BR>* **cash**<BR>* **ewallet**<BR>rapyd_ewallet
          enum:
          - bank_redirect
          - bank_transfer
          - card
          - cardtocard
          - cash
          - ewallet
          - rapyd_ewallet
        cvv_check:
          type: string
          description: Verification of the cardâ€™s CVV. Relevant to cards.
          enum:
          - pass
          - fail
          - unavailable
          - unchecked
        digital_wallet:
          $ref: "#/components/schemas/Payment_payment_method_data_digital_wallet"
        expiration_month:
          type: string
          description: The month when the expiration of the card occurs.<BR>Relevant
            to cards.
        expiration_year:
          type: string
          description: The year when the expiration of the card occurs.<BR>Relevant
            to cards.
        fingerprint_token:
          type: string
          description: "Hash of the card number, expiration date and CVV.<BR>Relevant\
            \ to cards."
        id:
          type: string
          description: ID of the payment method.<BR>**Note:<BR>Card payment method
            ID is not returned when the `next_action` is **3d_verification** or when
            `save_payment_method` was set to **false**.
        image:
          type: string
          description: A URL to the image of the icon for the payment method type.
        last4:
          type: string
          description: Last four digits of the card. Relevant to cards.
        metadata:
          type: object
          description: A JSON object defined by the client. See Metadata.
        network_reference_id:
          type: string
          description: Identifier for use in a recurring card payment.
        next_action:
          type: string
          description: Indicates the next action for completing the payment. One of
            the following values:<BR>* **3d_verification** - The next action is 3DS.
            Relevant to card payments.<BR>* **pending_capture** - The next action
            is pending the capture of the amount. Relevant to card payments when the
            amount is not zero.<BR>* **pending_confirmation** - The next action is
            pending the confirmation for the payment. Relevant to all payment methods
            excluding card payment.<BR>* **not_applicable** - The payment has completed
            or the next action is not relevant.
          enum:
          - 3d_verification
          - pending_capture
          - pending_confirmation
          - not_applicable
        supporting_documentation:
          type: string
          description: Reserved
        type:
          type: string
          description: Type of the payment card.
          enum:
          - credit
          - debit
          - prepaid
          - unknown
        webhook_url:
          type: string
          description: Reserved
      description: Details of the payment_method_data object.
      nullable: true
    Payment_refunds:
      type: object
      properties:
        data:
          type: array
          description: A list of up to three `refund` objects.
          items:
            type: string
        has_more:
          type: boolean
          description: Indicates whether there are more than three refunds against
            this payment.
        total_count:
          type: integer
          description: Total number of refunds against this payment.
        url:
          type: string
          description: URL for requesting all of the refunds against this payment.
      description: Refunds object
    Payment_remitter_information:
      type: object
      properties:
        account_id:
          type: string
          description: Number of the remitter's bank account.
        bank_code:
          type: string
          description: SWIFT code for the remitter's bank.
        name:
          type: string
          description: Name of the remitter.
      description: Contains the remitter's name and bank account information.
    PaymentMethodType_amount_range_per_currency:
      type: object
      properties:
        currency:
          type: string
          description: Three-letter ISO 4217 code for the currency.
        maximum_amount:
          type: number
          description: The maximum amount allowed for a payment.
        minimum_amount:
          type: number
          description: The minimum amount allowed for a payment.
      description: "Indicates the amount range for the payment method's currencies.\
        \ Array of objects. Each object contains the following fields:"
      example: "[{\"currency\":\"EUR\",\"maximum_amount\":1000,\"minimum_amount\"\
        :10},{\"currency\":\"GBP\",\"maximum_amount\":1000,\"minimum_amount\":20}]"
    Plan_tiers:
      type: object
      properties:
        amount:
          type: number
          description: The price for each item in this tier. Decimal number.
          example: 15
        flat_amount:
          type: number
          description: Additional price for the entire tier. Default is 0.
          example: 0
        up_to:
          description: "The upper volume limit for this tier. Valid values: inf (infinite)\
            \ or an integer."
          example: inf
          oneOf:
          - type: string
            example: inf
          - type: number
            example: 1
    Plan_transform_usage:
      type: object
      properties:
        divide_by:
          type: number
          description: Indicates the divisor in the transformation calculation. Integer.
            Default is 1.
          example: 1
        round:
          type: string
          description: Indicates whether the reported number of units should be rounded
            up or down to the next whole quantity specified in divide_by. String.
            Default is up.
      description: "Defines the transformation that is applied to the reported usage\
        \ before the billed price is computed. The transformation divides the quantity\
        \ by the divisor specified in divide_by, then rounds up or down according\
        \ to the setting in round. Relevant when billing_scheme is set to per_unit."
    Product_package_dimensions:
      type: object
      properties:
        height:
          type: number
          description: NA
          example: 10
        length:
          type: number
          description: NA
          example: 20
        weight:
          type: number
          description: NA
          example: 100
        width:
          type: number
          description: NA
          example: 40
      description: "Describes the physical size and weight of the product. Contains\
        \ the following fields: \n* height \n* length \n* weight \n* width \nThese\
        \ fields are represented as numbers, but it is the responsibility of the merchant\
        \ to define and interpret the relevant units of length and weight.\n"
    Refund_ewallets:
      type: object
      properties:
        amount:
          type: number
          description: "The amount of the payment to the wallet, in units of the currency\
            \ defined in currency. Decimal. If the total amount of the payment is\
            \ not fully accounted for, the balance appears in the client wallet. Relevant\
            \ when percentage is not set."
        ewallet:
          type: string
          description: ID of the wallet. String starting with **ewallet_**. Read-only.
    Sku_package_dimensions:
      type: object
      properties:
        height:
          type: number
          description: NA
          example: 1
        length:
          type: number
          description: NA
          example: 2
        weight:
          type: number
          description: NA
          example: 3
        width:
          type: number
          description: NA
          example: 4
      description: "Physical attributes of the SKU item. Contains the following fields,\
        \ height length weight width These fields are represented as numbers, but\
        \ it is the responsibility of the merchant to define and interpret the relevant\
        \ units of length and weight."
    SubscriptionHostedPageReponse_custom_elements:
      type: object
      properties:
        billing_address_collect:
          type: boolean
          description: "Determines whether the customer is asked to fill in the billing\
            \ address. Relevant when a card payment method is selected. <BR> * **true**\
            \ - The address fields appear on the checkout page.<BR> * **false** -\
            \ The address fields appear only if the country is **US, **GB** or **CA**."
        cardholder_name:
          type: string
          description: "The name of the card owner, printed on the front of the card."
        display_description:
          type: boolean
          description: Determines whether the checkout page displays the payment description.<BR>*
            **true** - The payment description appears.<BR> * **false** - The payment
            description does not appear.<BR> Relevant when description is passed in
            the Create Checkout Page request.
        dynamic_currency_conversion:
          type: boolean
          description: "Determines whether the checkout page displays multiple currency\
            \ options for a payment.<BR> * **true** - Multiple currency options appear.<BR>\
            \ * **false** - Currency options do not appear.<BR>When the customer selects\
            \ the requested currency, the checkout page displays the following information:<BR>*\
            \ The original amount and currency.<BR> * The converted amount in the\
            \ requested currency.<BR> * The exchange rate.<BR> Relevant when: <BR>\
            \ * The Create Checkout Page request passes requested_currency.<BR> *\
            \ `fixed_side` is **buy**. <BR> * One or more payment methods support\
            \ the values for `currency` and `requested_currency`."
        merchant_color:
          type: string
          description: reserved
        merchant_currency_only:
          type: boolean
          description: "In a payment with FX where fixed_side=**buy**, determines\
            \ whether the buyer's currency and the exchange rate appear. One of the\
            \ following:<BR> * **true** - The currency and the exchange rate are hidden.<BR>\
            \ * **false** - The currency and the exchange rate appear."
        payment_fees_display:
          type: boolean
          description: Determines whether payment fees appear on the checkout page.<BR>
            * **true** - Payment fees appear when the `payment_fees` object is set
            in the 'Create Checkout Page' request.<BR> * **false** - Payment fees
            do not appear.
        required_customer_fields:
          description: Indicates the list of fields that the customer has to fill
            in on the payment page before completing the payment via hosted checkout.
            Valid values include:<BR>* **name** â€“ The customer's full name (default).<BR>
            * **email** â€“ The customer's email address.<BR> * **phone_number** â€“ The
            customer's phone number.<BR> * **address** â€“ The address of the customer.
        save_card_default:
          type: boolean
          description: Determines whether the save card checkbox is checked by default.<BR>
            * **true** - The **save card** checkbox is checked.<BR> * **false** -
            The **save card** checkbox is cleared.<BR> Relevant when `customer_id`
            is passed in the 'Create Checkout Page' request.
      description: Description of the payment transaction.
    SubscriptionHostedPageReponse_merchant_customer_support:
      type: object
      properties:
        email:
          type: string
          description: Email address.
        url:
          type: string
          description: URL for the client's customer support service.
        phone_number:
          type: string
          description: Phone number for contacting the client's customer support service.
    Field_1_conditions:
      type: object
      properties:
        description:
          type: string
          description: Description of the condition.
        element_name:
          type: string
          description: "The name of a field, including the path. The field is the\
            \ first operand of the condition."
        operator:
          type: string
          description: "Operator for evaluating the condition. When the condition\
            \ evaluates to **true**, the field is required. One of the following:<BR>*\
            \ **$eq** - Equal to - The value in the field is equal to the `threshold_value`.<BR>*\
            \ **$ne** - Not equal to - The value in the field is not equal to the\
            \ `threshold_value`.<BR>* **$gt** - Greater than - The value in the field\
            \ is greater than the `threshold_value`.<BR>* **$lt** - Less than - The\
            \ value in the field is less than the `threshold_value`.<BR>* **$gte**\
            \ - Greater than or equal to - The value in the field is greater than\
            \ the `threshold_value`.<BR>* **$lte** - Less than or equal to - The value\
            \ in the field is less than the `threshold_value`.<BR>* **$in** - In -\
            \ The value in the field is equal to any of the values in the `threshold_value`\
            \ array.<BR>* **$nin** - Not in - The value in the field is not equal\
            \ to any of the values in the `threshold_value array`."
          enum:
          - $eq
          - $ne
          - $gt
          - $lt
          - $gte
          - $lte
          - $in
          - $nin
        threshold_value:
          description: Value to compare with. Can be a string or an array of strings.
          oneOf:
          - type: string
          - type: array
            items:
              type: string
    inline_response_200_7_data:
      type: object
      properties:
        id:
          type: string
          description: discount id
        deleted:
          type: boolean
    inline_response_200_11_data:
      type: object
      properties:
        deleted:
          type: boolean
        id:
          type: string
          description: ID of the plan
    inline_response_200_16_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: "true if the item deleted successfully, else false."
        id:
          type: string
          description: ID of the subscription item.
    inline_response_200_17_data:
      type: object
      properties:
        id:
          type: string
        quantity:
          type: number
          description: The usage quantity for the specified date and time (timestamp).
        subscription_item:
          type: string
          description: ID of the subscription item.
        timestamp:
          type: string
          description: Timestamp for the usage record in Unix time.
    inline_response_200_22_data:
      type: object
      properties:
        id:
          type: string
        deleted:
          type: boolean
    inline_response_200_25_data:
      type: object
      properties:
        id:
          type: string
          description: ID of the invoice item. String starting with **ii_**.
        deleted:
          type: boolean
          description: Indicates whether this invoice item was deleted.
    inline_response_200_33_data:
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the group payment, in units defined by currency.\
            \ Decimal, including the correct number of decimal places for the currency\
            \ exponent, as defined in ISO 2417:2015. If the amount is a whole number,\
            \ use an integer and not a decimal."
        amount_to_replace:
          type: number
          description: Indicates the total amount of failed payments that have not
            been replaced. Response only.
        cancel_reason:
          type: string
          description: Reason for cancellation of the group payment. Response only.
        country:
          type: string
          description: Country where the payment methods are supported. Two-letter
            ISO 3166-1 ALPHA-2 code. Response only.
        currency:
          type: string
          description: Currency of the payments. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the group payment.
        expiration:
          type: number
          description: "End of the time allowed for customers to make this payment,\
            \ in Unix time. Response only."
        id:
          type: string
          description: ID of the Group Payment object. String starting with **gp_**.
        merchant_reference_id:
          type: string
          description: Merchant-defined ID. Limited to 255 characters.
        metadata:
          type: object
          description: A JSON object defined by the client.
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
        status:
          type: string
          description: Indicates the status of the group payment operation
    inline_response_200_44_data:
      properties:
        id:
          type: string
        deleted:
          type: boolean
    inline_response_200_53_data:
      type: object
      properties:
        deleted:
          type: boolean
        id:
          type: string
    inline_response_200_61_data:
      type: object
      properties:
        beneficiary:
          $ref: "#/components/schemas/Beneficiary"
        validated:
          type: boolean
          description: validation status
          example: true
    inline_response_200_62_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: Flag to indicate whether beneficiary deleted or not
          example: true
        id:
          type: string
          description: Beneficiary token
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
    inline_response_200_66_data:
      type: object
      properties:
        deleted:
          type: boolean
          description: Flag to indicate whether sender deleted or not
          example: true
        id:
          type: string
          description: Sender token
          example: sender_b9342620e3eb13164286485bbff9eb7b
    inline_response_200_68_data:
      properties:
        payout_token:
          type: string
          description: ID of the payout. String starting with **payout_**.
        file_id:
          type: string
          description: ID of the uploaded file. UUID.
        file_name:
          type: string
          description: The name of the document file.
        file_extension:
          type: string
          description: The uploaded file's extension.
        created_at:
          type: string
          description: The date and time when the file was successfully uploaded.
            Format is **YYYY-MM-DD HH:MM:SS**.
    inline_response_200_71_data:
      properties:
        account_id:
          type: string
          description: ID of the Rapyd wallet account. UUID.
        amount:
          type: number
          description: "Amount of the transfer, in units of the currency specified\
            \ in `currency`."
        balance_type:
          type: string
          description: Indicates the type of balance within the Rapyd wallet account.
        currency:
          type: string
          description: The currency of the transfer. Three-letter ISO 4217 code.
        id:
          type: string
          description: ID of the funds transfer transaction. UUID.
        metadata:
          type: string
          description: A JSON object defined by the client.
        phone_number:
          type: string
          description: Phone number of the Rapyd wallet.
    inline_response_200_76_data:
      type: object
      properties:
        delete:
          type: boolean
          description: Flag to indicate whether contact deleted or not
          example: true
        id:
          type: string
          description: Contact id
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
    inline_response_200_77_data_elements:
      minItems: 0
      type: object
      properties:
        element_name:
          type: string
        verified:
          type: boolean
    inline_response_200_77_data_compliance_levels:
      type: object
      properties:
        level:
          type: number
        elements:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_77_data_elements"
    inline_response_200_77_data:
      type: object
      properties:
        compliance_levels:
          type: array
          items:
            $ref: "#/components/schemas/inline_response_200_77_data_compliance_levels"
    inline_response_200_93_data:
      type: object
      properties:
        bank_account:
          type: object
          description: Issuied virtual account.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        funding_instructions:
          type: object
          description: Issuied virtual account funding instructions.
        id:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issuied virtual account statuts.
        transactions:
          type: array
          description: Issuied virtual account transactions.
          items:
            $ref: "#/components/schemas/CardTransaction"
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the walletÃ¢â‚¬â„¢s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_94_data_transactions:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            cit_.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: Amount of the transaction.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        original_amount:
          type: number
          description: This field will show the initial transaction amount before
            conversion.
        original_currency:
          $ref: "#/components/schemas/Currency_1"
        fx_rate:
          type: number
          description: This field will indicate the exchange rate applied for the
            currency conversion
    inline_response_200_94_data:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            cit_.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with ewallet_.
        bank_account:
          type: object
          description: Issuied virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issuied virtual account statuts.
        description:
          type: string
          description: Description of the account.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: "#/components/schemas/inline_response_200_94_data_transactions"
        requested_currency:
          type: string
          description: "*Currency received by the virtual account after conversion.\
            \ Uppercase. One of the following: AUD - Australian Dollar EUR - Euro\
            \ GBP - Pound Sterling HKD - Hong Kong Dollar SGD - Singapore Dollar USD\
            \ - US Dollar When not specified, the funds appear in the walletÃ¢â‚¬â„¢s currency\
            \ account for the currency of the transaction.*"
    inline_response_200_96_data_transactions:
      type: object
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: Amount of the transaction.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        receiving_currency:
          type: boolean
    inline_response_200_96_data:
      properties:
        id:
          type: string
          description: ID of the issued card transaction object. String starting with
            **cit_**.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        bank_account:
          type: object
          description: Issued virtual account.
          nullable: true
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issued virtual account statuts.
        description:
          type: string
          description: Description of the account.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        currency:
          type: string
          description: Currency of the transaction. Three-letter ISO 4217.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: "#/components/schemas/inline_response_200_96_data_transactions"
    inline_response_200_97_data:
      properties:
        id:
          type: string
          description: ID of the account. String starting with issuing_
        deleted:
          type: boolean
          description: Indicates whether the account has been successfully deleted
    inline_response_200_98_data:
      properties:
        accept_swift:
          type: boolean
          description: Indicates whether the virtual account has a SWIFT code.
          enum:
          - true
          - false
        account_id_type:
          type: string
          description: Type of the virtual account number.
          enum:
          - iban - International bank account number (IBAN).
          - clabe - CLABE number.
          - null - Regular bank account number.
        country:
          type: string
          description: Two-letter ISO 3166-1 ALPHA-2 code for the country. code.
        local_bank_code_type:
          type: string
          description: Type of the local bank code.
          enum:
          - bic
          - aba
          - sort_code
          - bsb
          - cnaps
          - ifsc
        refundable:
          type: boolean
          description: Indicates whether the virtual account has a SWIFT code.
          enum:
          - true
          - false
        remitter_details:
          type: boolean
          description: Indicates whether remitter details are available.
          enum:
          - true
          - false
        supported_currencies:
          type: array
          description: Array of currencies supported for the virtual account. Array
            of strings.
          items:
            type: string
    inline_response_200_105_data_bank_accounts:
      type: object
      properties:
        account_id:
          type: string
          description: The actual account number that was assigned to the virtual
            account when it was created.
        account_id_type:
          type: string
          description: "Type of the virtual account number, such as IBAN or CLABE."
        country_iso:
          type: string
          description: Two-letter ISO 3166-1 ALPHA-2 code of the country of the virtual
            account.
        currency:
          type: string
          description: Currency of the virtual account. Three-letter ISO 4217 code.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that the virtual accounts were issued
            to. String starting with **ewallet_**.
        issuing_id:
          type: string
          description: ID of the virtual account number object. String starting with
            **issuing_**.
        requested_currency:
          type: string
          description: "Currency received by the virtual account after conversion.<BR>When\
            \ not specified, the funds appear in the walletâ€™s currency account for\
            \ the currency of the transaction."
          enum:
          - AUD
          - EUR
          - GBP
          - HKD
          - SGD
          - USD
        status:
          type: string
          description: Indicates the status of the virtual account.
          enum:
          - ACT
          - CLO
          - ERR
          - REJ
      description: Array of objects with details of the virtual accounts. Each object
        contains the following fields
    inline_response_200_105_data:
      properties:
        bank_accounts:
          $ref: "#/components/schemas/inline_response_200_105_data_bank_accounts"
    inline_response_200_109_data:
      type: object
      properties:
        bank_account:
          type: object
          description: Issued virtual account.
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        description:
          type: string
          description: Description of the account.
        ewallet:
          type: string
          description: ID of the wallet the bank account number is issued to. String
            starting with **ewallet_**.
        funding_instructions:
          type: object
          description: Issued virtual account funding instructions.
        id:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        merchant_reference_id:
          type: string
          description: "ID of this account, as provided by the merchant. Limited to\
            \ 45 characters."
        metadata:
          type: object
          description: A JSON object defined by the client.
        status:
          type: string
          description: Issued virtual account statuts.
        transactions:
          type: array
          description: Issued virtual account transactions.
          items:
            $ref: "#/components/schemas/CardTransaction"
        requested_currency:
          type: string
          description: "Currency received by the virtual account after conversion.\
            \ Uppercase. When not specified, the funds appear in the walletâ€™s currency\
            \ account for the currency of the transaction."
          enum:
          - AUD
          - EUR
          - GBP
          - HKD
          - SGD
          - USD
    inline_response_200_110_data:
      type: object
      properties:
        account_name:
          type: string
          description: Name of the bank account holder.
        account_number:
          type: string
          description: Number of the bank account.
        amount:
          type: string
          description: "The amount of the transaction, in units of the currency defined\
            \ in currency."
        bank_code:
          type: string
          description: "Bank identifier code, such as SWIFT, BIC, ABA, or other local\
            \ identifier."
        bank_name:
          type: string
          description: Name of the bank.
        country:
          type: string
          description: The country that the account number will be associated with.
            Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
        created_at:
          type: number
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        iban:
          type: string
          description: IBAN of the virtual bank account.
        id:
          type: string
          description: ID that is assigned by the remitter
        partner_transaction_id:
          type: string
          description: ID that is assigned by the client to the transaction.
        receiving_iban:
          type: string
          description: IBAN that was assigned to the Rapyd Wallet.
        remitter_reference:
          type: string
          description: "Optional information that the remitter adds to the transaction,\
            \ intended for the beneficiary. Supported by some payment methods."
        sort_code:
          type: string
          description: ""
        status:
          type: string
          description: Indicates the status of the transfer.
        updated_at:
          type: number
          description: "Time of update of the virtual account, in Unix time. Response\
            \ only."
        created_at_gw:
          type: string
          description: "Time of creation of the transaction, in Unix time. Response\
            \ only."
        original_currency:
          type: string
          description: This field will display the currency in which the transaction
            was originally made.
        original_amount:
          type: string
          description: This field will show the initial transaction amount before
            conversion.
        fx_rate:
          type: string
          description: This field will indicate the exchange rate applied for the
            currency conversion
    inline_response_200_111_data:
      type: object
      properties:
        account_id:
          type: string
          description: ID of the virtual bank account.
        account_id_type:
          type: string
          description: Type of the virtual account number.
        amount:
          type: number
          description: "Amount of the transaction, in units defined in currency."
        created_at:
          type: integer
          description: "Timestamp for the transaction, in Unix time"
        currency:
          type: string
          description: Currency of the account. Three-letter ISO 4217 code.
        ewallet:
          type: string
          description: ID of the Rapyd Wallet that is attached to the virtual account.
            String starting with **ewallet_**.
        id:
          type: string
          description: ID of the transaction. String starting with **isutran_**.
    inline_response_200_112_data:
      type: object
      properties:
        id:
          type: string
          description: ID Verification.
        reference_id:
          type: string
          description: Organization Reference Token.
    inline_response_200_113_data:
      properties:
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            identification document.
        type:
          type: string
          description: Type of the identification document. Two-letter code
        name:
          type: string
          description: Name of the identification document. Two-letter code
        is_back_required:
          type: boolean
          description: Indicates whether the back of the document is required to establish
            identity.
        is_address_extractable:
          type: boolean
          description: Indicates whether the person's address can be extracted from
            the document.
    inline_response_200_114_data:
      properties:
        application_type:
          type: string
          description: Code for the type of application. String starting with typ_.
        country:
          $ref: "#/components/schemas/Country_1"
        entity_type:
          $ref: "#/components/schemas/EntityTypeVerify"
    inline_response_200_115_data:
      type: object
      properties:
        status:
          type: string
          enum:
          - NEW
          - DON
          - EXP
    inline_response_200_117_data_application_type:
      type: object
      properties:
        application_type:
          type: string
          description: ""
        entity_type:
          type: string
          description: ""
        country:
          type: string
          description: ""
      description: ""
    inline_response_200_117_data_organization_details_merchant_customer_support:
      type: object
      properties:
        url:
          type: string
          description: ""
        email:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
      description: ""
    inline_response_200_117_data_organization_details:
      type: object
      properties:
        merchant_color:
          type: string
          description: ""
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        merchant_logo:
          type: string
          description: ""
        merchant_design:
          type: string
          description: ""
        merchant_language:
          type: string
          description: ""
        merchant_alias:
          type: string
          description: ""
        merchant_customer_support:
          $ref: "#/components/schemas/inline_response_200_117_data_organization_details_merchant_customer_support"
      description: ""
    inline_response_200_117_data_renew_result:
      type: object
      properties:
        redirect_to_app_type_page:
          type: boolean
          description: ""
        need_to_renew:
          type: boolean
          description: ""
      description: ""
    inline_response_200_117_data:
      type: object
      properties:
        token:
          type: string
          description: ""
          example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
        application_token:
          type: string
          description: ""
        country:
          type: string
          description: ""
        rapyd_entity_token:
          type: string
          description: ""
        client_reference_id:
          type: string
          description: ""
        cancel_url:
          type: string
          description: ""
        complete_url:
          type: string
          description: ""
        phone_number:
          type: string
          description: ""
        application_level:
          type: number
          description: ""
          enum:
          - 1
          - 2
        sell_type:
          type: string
          description: ""
        business_industry:
          type: string
          description: ""
        application_type:
          $ref: "#/components/schemas/inline_response_200_117_data_application_type"
        organization_details:
          $ref: "#/components/schemas/inline_response_200_117_data_organization_details"
        renew_result:
          $ref: "#/components/schemas/inline_response_200_117_data_renew_result"
    inline_response_200_118_data_merchant_customer_support:
      type: object
      properties:
        email:
          type: string
          description: Email address.
        url:
          type: string
          description: URL for the client's customer support service.
        phone_number:
          type: string
          description: Phone number for contacting the client's customer support service.
      description: "Contains details of the clientâ€™s customer support. To configure\
        \ these fields, use the Client Portal."
    inline_response_200_118_data:
      type: object
      properties:
        cancel_url:
          type: string
          description: URL where the customer is redirected after pressing **Back
            to Website** to exit the hosted page. This URL overrides the `merchant_website`
            URL. Does not support localhost URLs.
        complete_url:
          type: string
          description: URL where the customer is redirected after pressing **Close**
            to exit the hosted page. This URL overrides the `merchant_website` URL.
            Does not support localhost URLs.
        contact:
          type: string
          description: ID of the wallet contact. String starting with **cont_**.
        country:
          type: string
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the
            identification document.
        id:
          type: string
          description: "ID of the Hosted Page Identity Verification object, a string\
            \ starting with **hp_idv_**."
        language:
          type: string
          description: "Determines the default language of the hosted page. For a\
            \ list of values, see [List Supported Languages](https://docs.rapyd.net/en/list-supported-languages.html).\
            \ <BR> * When this parameter is null, the language of the user's browser\
            \ is used. <BR> * If the language of the user's browser cannot be determined,\
            \ the default language is English."
        merchant_alias:
          type: string
          description: Client's name.
          example: Rapyd
        merchant_color:
          type: string
          description: "Color of the call-to-action (CTA) button on the hosted page.<BR>\
            \ To configure this field, use the Client Portal."
        merchant_customer_support:
          $ref: "#/components/schemas/inline_response_200_118_data_merchant_customer_support"
        merchant_logo:
          type: string
          description: "URL for the image of the client's logo.<BR> To configure this\
            \ field, use the Client Portal."
        merchant_privacy_policy:
          type: string
          description: "URL for the terms and conditions of the agreement between\
            \ the client and the clientâ€™s customers.<BR>To configure this field, use\
            \ the Client Portal."
        merchant_terms:
          type: string
          description: "URL for the client's terms and conditions. To configure this\
            \ field, use the Client Porta"
        merchant_website:
          type: string
          description: "The URL where the customer is redirected after exiting the\
            \ hosted page. Relevant when one or both of the following fields is unset:\
            \ <BR>* `cancel_url` <BR>* `complete_url`.<BR> To configure this field,\
            \ use the **Fallback URL** field in the Client Portal. See [Customizing\
            \ Your Hosted Page](https://docs.rapyd.net/en/customizing-your-hosted-page.html)."
        page_expiration:
          type: number
          description: "End of the time when the customer can use the hosted page,\
            \ in Unix time. If `page_expiration` is not set, the hosted page expires\
            \ 14 days after creation.<BR>**Range**: 1 minute to 30 days."
        redirect_url:
          type: string
          description: URL of the hosted page that is shown to the customer.
        reference_id:
          type: string
          description: ID of the identity verification request. Must be unique for
            each request. Defined by the client.
        request_type:
          type: string
          description: Determines the action that is taken on the request. One of
            the following:<BR>* **store** - Store the images on the Rapyd platform.<BR>*
            **verify** - Verify the identity of the person in the images.
          enum:
          - store
          - verify
        status:
          type: string
          description: Status of the hosted page. One of the following:<BR> * **NEW**
            - The hosted page was created.<BR>* **DON** - Done. The card was added
            to the customer profile.<BR>* **EXP** - The hosted page expired.<BR>*
            **INP** - Creation of the payment is still in progress.<BR>* **DEC** -
            Rapyd Protect blocked the payment.
          enum:
          - NEW
          - DON
          - EXP
          - INP
          - DEC
      description: Retrieve the Rapyd ID and merchant reference ID.
    inline_response_200_119_data:
      type: object
      properties:
        operation_id:
          type: string
          description: ID of the query request operation. UUID.
        partner_merchant_reference:
          type: string
          description: "ID of the merchant, defined by the partner.."
        partner_query_reference:
          type: string
          description: "Unique ID of the query request, defined by the partner."
        status:
          type: string
          description: Status of the Card Network Lookup Service query. One of the
            following:<BR>* **ERROR** - The query failed.<BR>* **IN_PROGRESS** - The
            query is being processed. Results are not available.<BR>* **PARTIAL**
            - The query process is partially complete. Some results are available.<BR>*
            **PROCESSED** - The query process is complete. All results are available.The
            two-letter ISO 3166-1 ALPHA-2 code for the country of the identification
            document.
          enum:
          - IN_PROGRESS
          - ERROR
          - IN_PROGRESS
          - PARTIAL
          - PROCESSED
    inline_response_200_120_data_match_stats:
      type: object
      properties:
        query_match_count:
          type: number
          description: Number of previous queries to the card network termination
            database that match elements of this merchant query. Does not indicate
            a registered match. Mastercard only.
        registered_match_count:
          type: number
          description: Total number of registered matches in the card network termination
            databases with elements shared with this merchant query.
      description: Statistics about the query.
    inline_response_200_120_data_matches:
      type: object
      properties:
        card_network:
          type: string
          description: Name of the card network termination database with a match.
          enum:
          - MASTERCARD
          - VISA
        exact_match:
          type: object
          description: List of the data points that match this query exactly. Array
            of strings.
          example:
          - string1
          - string2
        match_type:
          type: string
          description: Type of match. One of the following:<BR>* **query match** -
            This merchant query matches elements of a previous merchant query in the
            card network termination database.<BR>This means that the queried merchant
            shares data with a merchant that was previously searched for.<BR>* **registered
            match** - This merchant query matches elements of a merchant termination
            registration in the card network termination database. This means that
            an acquirer terminated the contract of a merchant that shares data with
            the queried merchant.
        partial_match:
          type: object
          description: List of the data points that partly match the query. Array
            of strings.
          example:
          - string1
          - string2
      description: Describes the results of the query.
    inline_response_200_120_data_query_info_queried_merchant:
      type: object
      properties:
        business_category:
          type: string
          description: The category of the merchant's business.
          enum:
          - Merchant
          - Payment Facilitator
          - Independent Sales Organization
          - Marketplace
          - Staged Digital Wallet Operator
          - Sponsored Merchant
        dba_name:
          type: string
          description: "The \"doing business as\" name of the merchant.<BR>String\
            \ that starts and ends with any combination of characters, whitespace,\
            \ a specified range of Latin letters with diacritics, and a specific set\
            \ of special characters.<BR>Length: 4-60"
        legal_name:
          type: string
          description: The registered legal name of the merchant.
        address:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_principals_address"
        phone_numbers:
          type: object
          description: "Business phone numbers of the merchant.<BR<Array of strings.\
            \ Maximum - 2. Each string is a phone number in the format +[country code]/[phone\
            \ number], where the forward slash (/) represents a separator between\
            \ the country code and the telephone number.<BR>The plus sign before the\
            \ country code is optional. The country code may only contain digits.<BR>The\
            \ slash is required and must follow the country code.<BR>The telephone\
            \ number may include blank spaces and hyphens (-).<BR>For example, in\
            \ **+1/555 555-5555**, the country code is 1 and the telephone number\
            \ is 5555555555.<BR>Length of each phone number: 8-15."
        is_ecommerce:
          type: boolean
          description: Indicates whether the merchant trades through the internet.
      description: Details of the merchant who is the subject of the query.
    inline_response_200_120_data_query_info:
      type: object
      properties:
        partner_merchant_reference:
          type: string
          description: "ID of the merchant, defined by the partner."
        partner_query_reference:
          type: string
          description: "Unique ID of the query request, defined by the partner."
        queried_merchant:
          $ref: "#/components/schemas/inline_response_200_120_data_query_info_queried_merchant"
      description: asd
    inline_response_200_120_data_principals:
      type: object
      properties:
        first_name:
          type: string
          description: "The first name of the owner.<BR>String that starts and ends\
            \ with any combination of characters, whitespace, a specified range of\
            \ Latin letters with diacritics, and a specific set of special characters.<BR>Length:\
            \ 1-35"
        middle_initial:
          type: string
          description: "The initial letter of the owner's middle name.<BR>String that\
            \ starts and ends with any combination of characters, whitespace, a specified\
            \ range of Latin letters with diacritics, and a specific set of special\
            \ characters.<BR>Length: Maximum - 1"
        last_name:
          type: string
          description: "The family name of the owner.<BR>String that starts and ends\
            \ with any combination of characters, whitespace, a specified range of\
            \ Latin letters with diacritics, and a specific set of special characters.<BR>Length:\
            \ 1-40"
        email:
          type: string
          description: "The primary email address of the merchant.<BR>String that\
            \ starts with a combination of letters, numbers, ., _, %, or - before\
            \ an **@** sign. After the **@** sign, a domain name with letters, numbers,\
            \ ., or -, ending with a dot and a 2 to 4 letter domain type, such as\
            \ **.com**. For example: **billsmith@snapphoto.com**<BR>Length: Maximum\
            \ - 90"
        phone_number:
          type: string
          description: "The phone number of the owner.<BR> Phone number in the format\
            \ +[country code]/[phone number], where the forward slash (/) represents\
            \ a separator between the country code and the telephone number.<BR>The\
            \ plus sign before the country code is optional. The country code may\
            \ only contain digits.<BR>The slash is required and must follow the country\
            \ code.<BR>The telephone number may include blank spaces and hyphens (-).<BR>For\
            \ example, in **+1/555 555-5555**, the country code is 1 and the telephone\
            \ number is 5555555555.<BR>Length: 8-15"
        address:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_principals_address"
      description: Details of the registered principal owners of the merchant.<BR>
        Maximum - 3.
    inline_response_200_120_data_matched_merchant:
      type: object
      properties:
        business_category:
          type: string
          description: The category of the merchant's business.
          enum:
          - Merchant
          - Payment Facilitator
          - Independent Sales Organization
          - Marketplace
          - Staged Digital Wallet Operator
          - Sponsored Merchant
        dba_name:
          type: string
          description: "The \"doing business as\" name of the merchant.<BR>String\
            \ that starts and ends with any combination of characters, whitespace,\
            \ a specified range of Latin letters with diacritics, and a specific set\
            \ of special characters.<BR>Length: 4-60"
        legal_name:
          type: string
          description: The registered legal name of the merchant.
        address:
          $ref: "#/components/schemas/v1cnltermination_query_queried_merchant_principals_address"
        phone_numbers:
          type: object
          description: "Business phone numbers of the merchant.<BR<Array of strings.\
            \ Maximum - 2. Each string is a phone number in the format +[country code]/[phone\
            \ number], where the forward slash (/) represents a separator between\
            \ the country code and the telephone number.<BR>The plus sign before the\
            \ country code is optional. The country code may only contain digits.<BR>The\
            \ slash is required and must follow the country code.<BR>The telephone\
            \ number may include blank spaces and hyphens (-).<BR>For example, in\
            \ **+1/555 555-5555**, the country code is 1 and the telephone number\
            \ is 5555555555.<BR>Length of each phone number: 8-15."
        mcc:
          type: object
          description: "Merchant category codes of the merchant's business.<BR>Array\
            \ of strings. Numbers or US letters. Maximum - 5 items. <BR>Length of\
            \ each string: 4."
          example:
          - "5411"
          - "5812"
        url:
          type: object
          description: "Web addresses associated with the merchant.<BR>Array of strings.\
            \ Numbers or US letters. Maximum - 3 items. For example: [\"https://fourstarmarket.com\"\
            , \"https://fourstarmarket.net\"]<BR>Length: Maximum - 40"
      description: Data about the merchant on file in the database.
    inline_response_200_120_data_registration_info:
      type: object
      properties:
        contract_end_date:
          type: number
          description: End date of the merchant's contract with the acquirer.
        contract_start_date:
          type: number
          description: start date of the merchant's contract with the acquirer.
        primary_registration_reason:
          type: string
          description: Reason that the merchant's contract with the acquirer was terminated.
        registered_by_acquirer_id:
          type: string
          description: ID of the acquirer that listed the merchant.
        registered_by_acquirer_name:
          type: string
          description: Name of the acquirer that listed the merchant.
        registered_by_acquirer_region:
          type: string
          description: Region of the acquirer that listed the merchant.
      description: Registration information in the card network's termination database
        about the merchant and the acquirer that listed the merchant.
    inline_response_200_120_data:
      type: object
      properties:
        match_stats:
          $ref: "#/components/schemas/inline_response_200_120_data_match_stats"
        matches:
          $ref: "#/components/schemas/inline_response_200_120_data_matches"
        query_info:
          $ref: "#/components/schemas/inline_response_200_120_data_query_info"
        search_criteria:
          $ref: "#/components/schemas/v1cnltermination_query_search_criteria"
        principals:
          $ref: "#/components/schemas/inline_response_200_120_data_principals"
        status:
          type: string
          description: Status of the Card Network Lookup Service query. One of the
            following:<BR>* **ERROR** - The query failed.<BR>* **IN_PROGRESS** - The
            query is being processed. Results are not available.<BR>* **PARTIAL**
            - The query process is partially complete. Some results are available.<BR>*
            **PROCESSED** - The query process is complete. All results are available.The
            two-letter ISO 3166-1 ALPHA-2 code for the country of the identification
            document.
          enum:
          - IN_PROGRESS
          - ERROR
          - IN_PROGRESS
          - PARTIAL
          - PROCESSED
        matched_merchant:
          $ref: "#/components/schemas/inline_response_200_120_data_matched_merchant"
        registration_info:
          $ref: "#/components/schemas/inline_response_200_120_data_registration_info"
x-tagGroups:
- name: Collect
  tags:
  - Payment Method Type
  - Payment
  - Checkout Page
  - Subscription
  - Subscription.Product
  - Subscription.Plan
  - Subscription.Subscription Item
  - Subscription.Invoice
  - Subscription.Invoice Item
  - Payment Link
  - Payment.Card Token
  - Group Payment
  - Escrow
  - Refund
  - Digital Wallet
  - Dispute
  - Customer
  - Payment.Address
  - Customer Payment Method
  - SKU
  - Order
  - Order.Return
  - Coupon
- name: Disburse
  tags:
  - Disburse.Payout Method Type
  - Disburse
  - Disburse.Payout Beneficiary
  - Disburse.Payout Sender
  - Disburse.Upload Documents
  - Disburse.Card Eligibility
- name: eWallet
  tags:
  - eWallet.Transaction
  - eWallet
  - eWallet.Contact
  - eWallet.Virtual Account
- name: Issuing Cards
  tags:
  - Issuing
  - Issuing.Simulations
- name: Verify
  tags:
  - Verify
  - Card Network Lookup Service
- name: Miscellaneous
  tags:
  - Localization Methods
  - Webhook Methods
