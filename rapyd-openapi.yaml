openapi: 3.0.0

info:
  contact:
    email: rapyd_support@rapyd.com
  description: This is Rapyd OpenAPI
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rapyd API
  version: 1.0.5

servers:
  - description: Sandbox server
    url: https://sandboxapi.rapyd.net/
  - description: Production server
    url: https://api.rapyd.net/

paths:
  /v1/account/transfer:
    post:
      description: Transfer funds between Rapyd Wallets.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-transaction#transfer-funds-between-wallets
      operationId: fundsTransfer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: Amount of the transfer. Decimal.
                  type: number
                currency:
                  description: Three-letter ISO 4217 code for the currency used in the amount field. Uppercase.
                  type: string
                destination_ewallet:
                  description: ID of the wallet receiving the money. String starting with ewallet_.
                  type: string
                expiration:
                  description: Determines the day the ewallet funds transfer expires, in Unix time. Acceptance of the ewallet transfer must be completed before the start of this day. The default setting is 14 days from the date the ewallet transfer was created.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                source_ewallet:
                  description: ID of the wallet sending the money. String starting
                    with ewallet_.
                  type: string
              required:
                - amount
                - destination_ewallet
                - source_ewallet
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Transfer'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Transacton properties
      summary: Transfer Funds Between Wallets
      tags:
        - eWallets
  /v1/account/transfer/response:
    post:
      description: Respond to a funds transfer between wallets. The transferee uses this method to accept or decline the transfer.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-transaction#set-transfer-response
      operationId: setFundsTransferResponse
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: ID of the transfer transaction, from the 'id' field
                    in the 'data' object of the response. 32-digit hexadecimal.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                status:
                  description: Determines how to handle the transfer. One of the following values - accept, decline, cancel
                  type: string
              required:
                - id
                - status
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Transfer'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Transacton properties
      summary: Set Transfer Response
      tags:
        - eWallets
  /v1/addresses:
    post:
      description: Adds an address to merchant
      externalDocs:
        description: Learn more about address operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/addresses#address-object
      operationId: createAddress
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddressRequest'
                - required: [name, line_1]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: address was created successfully
      summary: Create an address
      tags:
        - Collect
  /v1/addresses/{addressesId}:
    get:
      description: 'Retrieve an address'
      externalDocs:
        description: Learn more about address operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/addresses#address-object
      operationId: retrieveAddress
      parameters:
        - description: address Id
          in: path
          name: addressesId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get Address details By address Id
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_ADDRESS_GET
                    message: "The request attempted an operation that requires an
                      address, but the address was not found. The request was rejected.
                      Corrective action: For the ''address'' parameter, use a valid
                      address ID."
                    response_code: ERROR_ADDRESS_GET
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Address not found for given ID
      summary: Retrieve an address
      tags:
        - Collect
    post:
      description: update an address with address Id in Path
      operationId: updateAddress
      parameters:
        - description: address Id
          in: path
          name: addressesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Address'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: address was updated successfully
        '400':
          description: Bad Request. Address not found for given ID
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_ADDRESS_GET
                    message: "The request attempted an operation that requires an
                      address, but the address was not found. The request was rejected.
                      Corrective action: For the 'address' parameter, use a valid
                      address ID."
                    response_code: ERROR_ADDRESS_GET
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
      summary: Update an address
      tags:
        - Collect
  /v1/coupons:
    get:
      description: Retrieve a list of all coupons
      externalDocs:
        description: Defines a discount on charges to the customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/coupons
      operationId: listCoupon
      parameters:
        - description: The ID of the coupon created before the first coupon you want
            to retrieve
          in: query
          name: starting_after
          schema:
            type: string
        - description: The ID of the coupon created after the last coupon you want to
            retrieve
          in: query
          name: ending_before
          schema:
            type: string
        - description: The maximum number of coupons to return. Range is 1-100. Default
            is 10
          in: query
          name: limit
          schema:
            pattern: ([1-9]|[1-9]\d|100)
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coupon'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get coupons details
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve list of coupons
      tags:
        - Collect
    post:
      description: create a coupon
      externalDocs:
        description: Defines a discount on charges to the customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/coupons
      operationId: createCoupon
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Coupon'
                - oneOf:
                    - required: [duration, amount_off, currency]
                    - required: [duration, percent_off]
        description: address to add
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Coupon'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Coupon was created
      summary: Create new coupon
      tags:
        - Collect
  /v1/coupons/{couponId}:
    delete:
      description: Delete a coupon from the Rapyd platform. Deleting a coupon removes
        it from all customers and subscriptions, but does not affect invoices and
        payment authorizations that have already been calculated
      operationId: deleteCoupon
      parameters:
        - description: coupon Id. String starting with coupon_.
          in: path
          name: couponId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: object
                    properties:
                      deleted:
                        type: boolean
                      id:
                        type: string
                type: object
          description: coupon was deleted
        400:
          description: bad input parameter
        500:
          description: Internal server error.
      summary: Delete a coupon from the Rapyd platform
      tags:
        - Collect
    get:
      description: 'Retrieve a coupon'
      externalDocs:
        description: Learn more about coupon operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/coupons#retrieve-coupon
      operationId: retrieveCoupon
      parameters:
        - description: coupon Id. String starting with coupon_.
          in: path
          name: couponId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/Coupon'
                type: object
          description: get Coupon details By coupon Id
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve an coupon
      tags:
        - Collect
    post:
      description: Modify the metadata of a coupon with coupon Id in Path
      operationId: updateCoupon
      parameters:
        - description: coupon Id. String starting with coupon_.
          in: path
          name: couponId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
        description: coupon to add
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/Coupon'
                type: object
          description: coupon was updated
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update a coupon
      tags:
        - Collect
  /v1/checkout/{checkout_token}:
    get:
      description: 'Retrieve a checkout page'
      externalDocs:
        description: Learn more about coupon operations provided by this API
        url: https://docs.rapyd.net/en/retrieve-checkout-page.html
      operationId: getHostedPagePayment
      parameters:
        - description: ID of the checkout page. String starting with checkout_.
          in: path
          name: checkout_token
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/CheckoutPageResponse'
                type: object
          description: Retrieve a checkout page
      summary: Retrieve a checkout page.
      tags:
        - Collect
  /v1/checkout:
    post:
      description: Create a checkout page that makes a payment.
      externalDocs:
        description: Create a checkout page that makes a payment.
        url: https://docs.rapyd.net/en/create-checkout-page.html
      operationId: generateHostedPagePayment
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/HostedPageAdditionalResponse'
                - required: [country, currency, amount]
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutPageResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Create a checkout page that makes a payment.
      summary: Create checkout page
      tags:
        - Collect
  /v1/customers:
    get:
      description: 'Retrieve a list of all customers'
      externalDocs:
        description: GET list of customers
        url: https://docs.rapyd.net/build-with-rapyd/reference/customers#list-customers
      operationId: listCustomer
      parameters:
        - description: The ID of the customer created before the first customer you want to retrieve
          in: query
          name: starting_after
          schema:
            type: string
        - description: The ID of the customer created after the last customer you want to retrieve
          in: query
          name: ending_before
          schema:
            type: string
        - description: The maximum number of customers to return. Range is 1-100. Default is 10
          in: query
          name: limit
          schema:
            pattern: ([1-9]|[1-9]\d|100)
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                type: object
          description: get customers details
      summary: Retrieve list of customers
      tags:
        - Collect
    post:
      description: Adds a customer to merchant
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/customers#create-customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerRequest'
                - required: [name]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Customer'
                      - $ref: '#/components/schemas/CustomerDetailsPMT'
                type: object
          description: customer was created successfully
        '400':
          description: Bad Request. Address not found for given ID
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_CREATE_CUSTOMER
                    message: 'The request tried to create or update a customer, but the wallet ID provided is already in use by another customer. The request was rejected. Corrective action: Create a new wallet.'
                    response_code: ERROR_CREATE_CUSTOMER
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
      summary: Create a customer
      tags:
        - Collect
  /v1/customers/{customerId}:
    delete:
      description: 'This method triggers the Customer Deleted webhook. This webhook
        contains the same information as the response'
      externalDocs:
        description: delete an existing customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/customers#delete-customer
      operationId: deleteCustomer
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      deleted:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
          description: customer was deleted
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_DELETE_CUSTOMER
                    message: 'The request tried to delete a customer, but the operation failed. Corrective action: Determine whether the customer was already deleted, and why there were multiple requests to delete it.'
                    response_code: ERROR_DELETE_CUSTOMER
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: 'The request tried to delete a customer, but the operation failed. Corrective action is to Determine whether the customer was alread deleted, and why there were multiple requests to delete it.'
      summary: Delete a customer from the Rapyd platform
      tags:
        - Collect
    get:
      description: Retrieve a customer
      externalDocs:
        description: Learn more about Retrieve a customer details provided by this
          API
        url: https://docs.rapyd.net/build-with-rapyd/reference/customers#retrieve-customer
      operationId: retrieveCustomer
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Customer'
                      - $ref: '#/components/schemas/CustomerDetailsPMT'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get customer details By customer Id
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_CUSTOMER
                    message: 'The request attempted an operation that requires the ID of a customer, but the customer was not found. The request was rejected. Corrective action: Use the correct ID of the customer, a string starting with "cus_"'
                    response_code: ERROR_GET_CUSTOMER
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer not found for given ID
      summary: Retrieve a customer details
      tags:
        - Collect
    post:
      description: Update a customer with customer Id in Path
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/customers#update-customer
      operationId: updateCustomer
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/Customer'
                      - $ref: '#/components/schemas/CustomerDetailsPMT'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: customer was updated successfully
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: INVALID_CUSTOMER_ID
                    message: 'The request attempted an operation that requires a valid customer ID, but the customer was not found. The request was rejected. Corrective action: Use the correct customer, or create a new customer.'
                    response_code: INVALID_CUSTOMER_ID
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Update customer
      tags:
        - Collect
  /v1/customers/{customerId}/discount:
    delete:
      description: 'Delete the discount that has been assigned to a customer through a coupon.
        This action does not affect the coupon that the discount was derived from.
        This method triggers the Customer Discount Deleted webhook.'
      operationId: deleteCustomerDiscount
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      deleted:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
          description: discount was deleted
      summary: Delete the discount that has been assigned to a customer
      tags:
        - Collect
  /v1/customers/{customerId}/payment_methods:
    get:
      description: Retrieve payment methods for a customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/customer-payment-method#list-payment-methods-of-customer
      operationId: getCustomerPaymentMethods
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - in: query
          name: category
          schema:
            $ref: '#/components/schemas/Category'
        - description: The ID of the coupon created before the first coupon you want
            to retrieve
          in: query
          name: starting_after
          schema:
            type: string
        - description: The ID of the coupon created after the last coupon you want to
            retrieve
          in: query
          name: ending_before
          schema:
            type: string
        - description: The maximum number of coupons to return. Range is 1-100. Default
            is 10
          in: query
          name: limit
          schema:
            type: string
        - description: The type of payment method to find.
          in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerPaymentMethod'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get customer details By customer Id
      summary: Retrieve payment methods for a customer
      tags:
        - Collect
    post:
      description: Add a payment method to a customer profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/customer-payment-method#add-payment-method-to-customer
      operationId: createCustomerPaymentMethod
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/PaymentMethodType'
              type: object
        description: customer to add
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/CustomerPaymentMethod'
                type: object
          description: Payment method was created for this customer successfully
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_CREATE_PAYMENT_METHOD
                    message: 'The request attempted an operation that requires specific fields for payment method, but a required field was missing, or an extra, unallowed field was included. Corrective action: Run "Get Payment Method Required Fields" and check all input fields.'
                    response_code: ERROR_CREATE_PAYMENT_METHOD
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Add a payment method to a customer profile
      tags:
        - Collect
  /v1/customers/{customerId}/payment_methods/{pmtId}:
    delete:
      description: 'This method triggers the Webhook - Payment Method Canceled webhook.
        This webhook contains more information than the response.'
      externalDocs:
        description: delete a payment method for customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/customer-payment-method#delete-payment-method
      operationId: deleteCustomerPaymentMethod
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Pmt Id
          in: path
          name: pmtId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        type: string
                      deleted:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payment method was deleted for this customer
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
                    message: 'The request tried to delete a customer''s default payment method, but the payment method was in use. The request was rejected. Corrective actionis to use "List Subscriptions", filtered by the customer''s ID, then use "Cancel Subscription" to remove all subscriptions that use the customer''s ID or the payment method that you want to delete.'
                    response_code: ERROR_DELETE_PAYMENT_METHOD_IN_USE
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Delete a payment method type from customer
      tags:
        - Collect
    get:
      description: Retrieve a payment method for a specific customer
      externalDocs:
        description: Learn more about Retrieve payment methods for a customer
        url: https://docs.rapyd.net/build-with-rapyd/reference/customer-payment-method#retrieve-payment-method
      operationId: getCustomerPaymentMethod
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Pmt Id
          in: path
          name: pmtId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerPaymentMethod'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get customer details By customer Id
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    message: 'The request attempted an operation that requires the default payment method of a customer, but the customer does not have a default payment method. The request was rejected.'
                    response_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: bad input parameter
      summary: Retrieve a payment method for a specific customer
      tags:
        - Collect
    post:
      description: Change or modify a payment method that was stored in a customer
        profile
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/customer-payment-method#update-payment-method
      operationId: updateCustomerPaymentMethod
      parameters:
        - description: customer Id
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Pmt Id
          in: path
          name: pmtId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentMethod'
        description: customer to add
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CustomerPaymentMethod'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: customer was updated successfully
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    message: 'The request attempted an operation that requires the default payment method of a customer, but the customer does not have a default payment method. The request was rejected.'
                    response_code: ERROR_CUSTOMER_PAYMENT_METHOD_NOT_FOUND
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: bad input parameter
      summary: Update payment method for customer
      tags:
        - Collect
  /v1/data/countries:
    get:
      description: Retrieve a list of all countries.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/country-object#list-countries
      operationId: getCountries
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/CountryObject'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: countries fetched successfuly
      summary: List Countries
      tags:
        - General.Resources
  /v1/data/currencies:
    get:
      description: Retrieve a list of all currencies.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/currency-object#list-currencies
      operationId: getCurrencies
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/CurrencyObject'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Returns list of supported currencies
      summary: List Currencies
      tags:
        - General.Resources
  /v1/disputes:
    get:
      description: Retrieve a detailed list of 'dispute' objects.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/dispute#list-disputes
      operationId: getDisputesListByOrgId
      summary: Retrieve list of disputes
      parameters:
        - description: The ID of the dispute created before the first dispute you want to retrieve. String starting with dispute_.
          in: query
          example: dispute_3e4862ba69665f04da530154f1019998
          name: starting_after
          schema:
            type: string
        - description: The ID of the dispute created after the last dispute you want to retrieve. String starting with dispute_.
          example: dispute_3e4862ba69665f04da530154f1019998
          in: query
          name: ending_before
          schema:
            type: string
        - description: The maximum number of disputes to return. Range is 1-100. Default is 10.
          in: query
          name: limit
          schema:
            pattern: ([1-9]|[1-9]\d|100)
            type: string
        - description: Filters the list for disputes with the specified dispute status.
          in: query
          name: status
          schema:
            type: string
            enum:
              - ACT
              - RVW
              - PRA
              - ARB
              - LOS
              - WIN
              - REV
        - description: The ID of the payment that is linked to the dispute. String starting with payment_.
          in: query
          name: payment
          example: payment_ce936f36d93bc9307a3d
          schema:
            type: string
      tags:
        - Collect
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Dispute'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: disputes fetched successfuly
  /v1/disputes/{disputeId}:
    get:
      description: Retrieve the details of a dispute.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/dispute#retrieve-dispute
      operationId: getDispute
      summary: Retrieve an dispute.
      parameters:
        - description: ID of the dispute you want to retrieve. String starting with dispute_.
          in: path
          required: true
          example: dispute_3e4862ba69665f04da530154f1019998
          name: disputeId
          schema:
            type: string
      tags:
        - Collect
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Dispute'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Get dispute details by dispute id
  /v1/ewallets/{ewalletId}/contacts:
    get:
      description: Retrieve all contacts for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#list-contacts-for-a-rapyd-wallet
      operationId: getEwalletContacts
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Contact'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_EWALLET
                    message: 'The request attempted an operation that requires a wallet, but the wallet was not found. The request was rejected. Corrective action: Use the ID of a valid wallet, a string starting with "ewallet_".'
                    response_code: ERROR_GET_EWALLET
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: List Contacts for a Rapyd Wallet
      tags:
        - eWallets
    post:
      description: Add a personal contact to a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#add-contact-to-wallet
      operationId: createEwalletContact
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  $ref: '#/components/schemas/Address'
                contact_type:
                  description: 'Type of contact: personal.'
                  type: string
                country:
                  description: 2-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
                  type: string
                date_of_birth:
                  description: 'Date of birth of the individual. Format: MM/DD/YYYY'
                  type: string
                email:
                  description: Email address for the contact.
                  type: string
                first_name:
                  description: First name of the contact.
                  type: string
                last_name:
                  description: >
                    Family name of the personal contact or primary person associated with the business contact. For a personal contact type, alphabetic characters and spaces.
                    Required for issuing a card to a personal contact.
                  type: string
                gender:
                  description: 'Gender of the contact. One of the following values:
                    male, female, other, not_applicable'
                  type: string
                house_type:
                  description: 'Description of the type of residency. One of the following
                    values: lease, live_with_family, own, owner, month_to_month, housing_project'
                  type: string
                identification_number:
                  description: ID number as shown by the ID document. Alphanumeric
                    string
                  type: string
                identification_type:
                  description: Type of the identification document
                  type: string
                marital_status:
                  description: 'Marital status of the contact. One of the following
                    values: married, single, divorced, widowed, cohabiting, not_applicable'
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: string
                middle_name:
                  description: Middle name of the personal contact or primary person
                    associated with the business contact.
                  type: string
                mothers_name:
                  description: Name of the contact's mother.
                  type: string
                nationality:
                  description: The citizenship of the contact. Two-letter ISO 3166-1
                    ALPHA-2 code for the country. Uppercase.
                  type: string
                phone_number:
                  description: Phone number of the contact in E.164 format.
                  type: string
                second_last_name:
                  description: Second last name of the contact.
                  type: string
                send_notifications:
                  description: Determines whether Rapyd sends notifications to the
                    contact. Default is false.
                  type: boolean
                contact_reference_id:
                  description: Reference ID for the contact. Limited
                    to 45 characters. Should be unique per merchant per e-wallet.
                  type: string
              type: object
              required:
                - contact_type
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
                    message: 'The request tried to add a contact to a personal wallet, but a personal wallet can have only one contact. The request was rejected. Corrective action: None. Determine why an attempt was made to give a personal wallet two contacts. Consider creating a company wallet.'
                    response_code: ERROR_ADD_CONTACT_TOO_MANY_CONTACTS
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Add Contact to Wallet
      tags:
        - eWallets
  /v1/ewallets/{ewalletId}/contacts/{contactId}:
    delete:
      description: Delete a personal contact from a company wallet or client wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#delete-wallet-contact
      operationId: deleteEwalletContact
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
        - description: ID of the contact. String starting with the prefix cont_.
          explode: false
          in: path
          name: contactId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      delete:
                        description: Flag to indicate whether contact deleted or not
                        example: true
                        type: boolean
                      id:
                        description: Contact id
                        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve a contact for an existing Rapyd Wallet.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
                    message: 'The request tried to delete a contact, but the wallet was a personal wallet. A personal wallet can have only one contact and it cannot be deleted. The request was rejected. Corrective action: None. Determine why an attempt was made to delete the contact.'
                    response_code: ERROR_DELETE_CONTACT_FROM_PERSONAL_EWALLET
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Delete Wallet Contact
      tags:
        - eWallets
    get:
      description: Retrieve a contact for an existing Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#retrieve-wallet-contact
      operationId: getEwalletContact
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
        - description: One of two values. either ID of the contact - String starting with the prefix cont_ or Contact reference ID.
          explode: false
          in: path
          name: contactId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve a contact for an existing Rapyd Wallet.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_EWALLET_CONTACT
                    message: 'The request attempted an operation that requires a wallet contact, but the contact was not found. The request was rejected. Corrective action: In the path, specify the ID of a valid wallet, a string starting with "ewallet", and the ID of a valid contact belonging to that wallet, a string starting with "cont".'
                    response_code: ERROR_GET_EWALLET_CONTACT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Retrieve Wallet Contact.
      tags:
        - eWallets
    post:
      description: Update a contact for a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#update-wallet-contact
      operationId: updateEwalletContact
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
        - description: ID of the contact. String starting with the prefix cont_.
          explode: false
          in: path
          name: contactId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Contact'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve a contact for an existing Rapyd Wallet.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_UPDATE_EWALLET_CONTACT
                    message: 'The request tried to update a business wallet contact, but there was a format error in the business details. The request was rejected. Corrective action: Provide all data in the correct format. See the API reference.'
                    response_code: ERROR_UPDATE_EWALLET_CONTACT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Update Wallet Contact
      tags:
        - eWallets
  /v1/ewallets/{ewalletId}/contacts/{contactId}/compliance_levels:
    get:
      description: Verify the compliance status of a personal contact.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-contact-2#update-wallet-contact
      operationId: getEwalletContactComplianceLevels
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with. String starting with ewallet_.
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: ewalletId
          required: true
          schema:
            type: string
          style: simple
        - description: ID of the contact. String starting with cont_.
          explode: false
          in: path
          name: contactId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      compliance_levels:
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              type: number
                            elements:
                              type: array
                              items:
                                type: object
                                minItems: 0
                                properties:
                                  element_name:
                                    type: string
                                  verified:
                                    type: boolean
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Verify the compliance status of a personal contact.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_COMPLIANCE_LEVELS
                    message: ''
                    response_code: ERROR_GET_COMPLIANCE_LEVELS
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Get the compliance status of a personal contact.
      tags:
        - eWallets
  /v1/hosted/collect/card:
    post:
      description: Create a hosted page for a customer to save card details and manage cards.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-card-token.html
      operationId: generateCardTokenizationPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                billing_address_collect:
                  description: Indicates whether the hosted page displays address fields to fill in. true - The address fields are displayed. false - The address fields are displayed only for country codes US, GB and CA.
                  type: string
                cancel_url:
                  description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                  type: string
                complete_url:
                  description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs
                  type: string
                country:
                  $ref: '#/components/schemas/Country'
                complete_payment_url:
                  description: URL where the customer is redirected after successfully completing an operation on a hosted page. Does not support localhost URLs.
                  type: string
                currency:
                  $ref: '#/components/schemas/Currency'
                customer:
                  description: ID of the customer, a string starting with cus_.
                  type: string
                error_payment_url:
                  description: URL where the customer is redirected if an error occurs during or after an operation on a hosted page. Does not support localhost URLs.
                  type: string
                language:
                  description: Determines the default language of the hosted page. When this parameter is null, the language of the user's browser is used. If the language of the user's browser cannot be determined, the default language is English
                  type: string
                page_expiration:
                  description: End of the time when the customer can use the hosted page, in Unix time. If page_expiration is not set, the hosted page expires 14 days after creation. Range is 1 minute to 30 days.
                  type: number
                payment_method_type:
                  description: Limits the page to a specific type of payment method. For example, dk_visa_card
                  type: string
              required: [country, customer]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HostedPageResponse'
                  status:
                    $ref: '#/components/schemas/Status'
          description: Create Card Token.
      summary: Create a hosted page for a customer to save card details and manage cards.
      tags:
        - Hosted
  /v1/hosted/idv:
    post:
      description: >
        Create a hosted page for verifying the identity of a personal contact for a Rapyd Wallet.
        The customer completes the process by accessing the URL returned in the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-identity-verification-page.html
      operationId: generateIdvPage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reference_id:
                  description: ID of the identity verification request. Must be unique for each request. Defined by the client.
                  type: string
                ewallet:
                  description: ID of the Rapyd Wallet. String starting with ewallet_.
                  type: string
                contact:
                  description: ID of the wallet contact. String starting with cont_.
                  type: string
                country:
                  description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the identification document.
                  type: string
                request_type:
                  description: >
                    Determines the action that is taken on the request. One of the following:
                    store - Store the images on the Rapyd platform.
                    verify - Verify the identity of the person in the images.
                    Default is verify.
                  enum:
                    - store
                    - verify
                  type: string
                document_type:
                  description: Type of identification document. Two-letter code.
                  type: string
                cancel_url:
                  description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                  type: string
                complete_url:
                  description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                  type: string
                language:
                  description: >
                    Determines the default language of the hosted page.
                    When this parameter is null, the language of the user's browser is used.
                    If the language of the user's browser cannot be determined, the default language is English.
                  type: string
                page_expiration:
                  description: >
                    End of the time when the customer can use the hosted page, in Unix time. If page_expiration is not set, the hosted page expires 14 days after creation.
                    Range: 1 minute to 30 days.
                  type: number
                force_camera:
                  description: "Requires the applicant to use the device's camera for a current face image, and prohibits uploading an existing image file. Default is 'false'."
                  type: boolean
              required: [reference_id, ewallet, contact]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    properties:
                      id:
                        description: ID of the Hosted Page Identity Verification object, a string starting with hp_idv_.
                        example: hp_idv_b3dc7b11ff41a67317fd0e2a88ab40de
                        type: string
                      reference_id:
                        description: ID of the identity verification request. Must be unique for each request. Defined by the client.
                        type: string
                      wallet:
                        description: ID of the Rapyd Wallet. String starting with ewallet_.
                        example: ewallet_755b0fd11fd22b33328fff7d30f3ce30
                        type: string
                      contact:
                        description: ID of a wallet contact. String starting with cont_.
                        example: cont_c34bd6bfd9575f6f7b06647999a93126
                        type: string
                      country:
                        description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the identification document.
                        type: string
                      request_type:
                        description: >
                          Determines the action that is taken on the request. One of the following:
                          store - Store the images on the Rapyd platform.
                          verify - Verify the identity of the person in the images.
                        type: string
                        enum:
                          - store
                          - verify
                      force_camera:
                        description: ID of the identity verification request. Must be unique for each request. Defined by the client.
                        type: boolean
                      document_type:
                        description: Type of identification document. Two-letter code.
                        type: string
                      status:
                        $ref: '#/components/schemas/HostedPageStatus'
                      complete_url:
                        description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                        type: string
                      org_id:
                        description: 'ID of the client.'
                        type: string
                      merchant_color:
                        description: Color of the call-to-action (CTA) button on the hosted page.
                        type: string
                      merchant_logo:
                        description: URL for the image of the client's logo.
                        type: string
                      merchant_website:
                        description: The URL where the customer is redirected after exiting the hosted page.
                        x-note: >
                          Relevant when one or both of the following fields is unset:
                          cancel_url
                          complete_url
                        type: string
                      merchant_customer_support:
                        description: 'Contains details of the client’s customer support. To configure these fields, use the Client Portal.'
                        properties:
                          email:
                            description: ''
                            type: string
                          url:
                            description: ''
                            type: string
                          phone_number:
                            description: ''
                            type: string
                        type: object
                      merchant_alias:
                        description: "Client's name. In the sandbox"
                        type: string
                      merchant_terms:
                        description: 'URL for the terms and conditions of the agreement between the client and the client’s customers. To configure this field, use the Client Portal. '
                        type: string
                      merchant_privacy_policy:
                        description: "URL for the client's privacy policy."
                        type: string
                      page_expiration:
                        description: End of the time when the customer can use the hosted page, in Unix time. If page_expiration is not set, the hosted page expires 14 days after creation.
                        type: number
                      redirect_url:
                        description: URL of the hosted page that is shown to the customer.
                        type: string
                      cancel_url:
                        description: URL where the customer is redirected after pressing Back to Website to exit the hosted page.
                        type: string
                      language:
                        description: Determines the default language of the hosted page
                        x-note: >
                          When this parameter is null, the language of the user's browser is used.
                          If the language of the user's browser cannot be determined, the default language is English.
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
          description: Hosted Page Identity Verification object
      summary: Create Identity Verification Page
      tags:
        - Hosted
  /v1/hosted/issuing/card_details/{cardToken}:
    post:
      description: Generate a hosted page that displays details of a virtual issued card directly to the customer. The URL is available for 24 hours after the response is sent, then it expires.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/display-issued-card-details-to-customer.html
      operationId: generateCardIssuingPage
      parameters:
        - description: ID of the Issued Card Details to Customer.
          example: ci_7a9e7ef54d174ff9fe23f66e425145d5
          explode: false
          in: path
          name: cardToken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                card_color:
                  description: >
                    The color of the card, specified by one of the following formats:
                      hexadecimal value
                      CSS color name
                      RGB
                      RGBA
                      black
                  type: string
                language:
                  description: Determines the default language of the hosted page. When this parameter is null, the language of the user's browser is used. If the language of the user's browser cannot be determined, the default language is English
                  type: string
                logo:
                  description: The URL of the logo image that appears on the card. If the logo is not specified, the name of the merchant appears.
                  type: string
                logo_orientation:
                  description: >
                    The orientation of the logo on the card.:
                      landscape
                      square
                      portrait
                        Default value: landscape
                  type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/HostedPageResponse'
                  status:
                    $ref: '#/components/schemas/Status'
          description: Display Issued Card Details to Customer.
      summary: Generate a hosted page that displays details of a virtual issued card directly to the customer.
      tags:
        - Hosted
  /v1/identities:
    post:
      description: Verification of the identity of a personal contact associated with a wallet..
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/identity-verification#verify-identity
      operationId: performIdentityVerification
      requestBody:
        content:
          application/json:
            schema:
              properties:
                back_side_image:
                  description: Base-64-encoded image of the back of the identity document.
                  type: string
                back_side_image_mime_type:
                  description: MIME type of the back side image of the identity document. Default is
                  type: string
                contact:
                  description: ID of a personal contact for a 'person' wallet.
                  type: string
                country:
                  $ref: '#/components/schemas/Country'
                document_type:
                  description: Type of the identification document. Two-letter code.
                  type: string
                ewallet:
                  description: ID of the Rapyd Wallet. String starting with ewallet_.
                  type: string
                face_image:
                  description: Base-64-encoded image of the face.
                  type: string
                face_image_mime_type:
                  description: MIME type of the face image. Default is image/jpeg.
                  type: string
                front_side_image:
                  description: Base-64-encoded image of the front of the identity document.
                  type: string
                front_side_image_mime_type:
                  description: MIME type of the front side image of the identity document. Default is image/jpeg.
                  type: string
                reference_id:
                  description: 'ID of the identity verification request. Must be unique for each request. Defined by the client. Maximum length: 36 characters. In sandbox, to simulate success or failure, the string must contain one of the following values: success, failure For example: 12345678success'
                  type: string
                request_type:
                  description: Determines the action that is taken on the request.
                  type: string
                send_callback:
                  description: Determines whether a webhook is sent with the results of the verification request.
                  type: string
              required:
                [country, document_type, ewallet, face_image, front_side_image, reference_id]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    properties:
                      id:
                        description: ID Verification.
                        type: string
                      reference_id:
                        description: Organization Reference Token.
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'

          description: Retrieve the Rapyd ID and merchant reference ID.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_UPDATE_EWALLET_CONTACT
                    message: 'The request tried to update a business wallet contact, but there was a format error in the business details. The request was rejected. Corrective action: Provide all data in the correct format. See the API reference.'
                    response_code: ERROR_UPDATE_EWALLET_CONTACT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Customer was not found for given ID
      summary: Verify the identity of an individual or a personal contact for a 'person' wallet.
      tags:
        - Verify
  /v1/identities/types:
    get:
      description: Use this method to determine the types of documents to use for identification purposes, and also whether you need the reverse side of the document. You can filter your search results by country with the country query parameter.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/identity-verification#list-official-identification-documents
      operationId: getKycIdVerificationSupportedDocTypes
      parameters:
        - description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
          example: US
          explode: false
          in: query
          name: country
          required: true
          schema:
            $ref: '#/components/schemas/Country'
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      properties:
                        country:
                          description: The two-letter ISO 3166-1 ALPHA-2 code for the country of the identification document.
                          type: string
                        type:
                          description: Type of the identification document. Two-letter code
                          type: string
                        name:
                          description: Name of the identification document. Two-letter code
                          type: string
                        is_back_required:
                          description: Boolean if back image required
                          type: boolean
                        is_address_extractable:
                          description: Boolean if address extractable
                          type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve a list of the types of official identification documents for a country.
      tags:
        - Verify
  /v1/invoices:
    get:
      summary: List Invoices
      tags:
        - Collect
      description: Retrieve the basic data of an invoice, with individual invoice lines.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#list-invoices
      operationId: listInvoices
      parameters:
        - description: ID of the customer. String starting with cus_.
          example: cus_753511a533a727cf28509812b4683edd
          explode: true
          in: query
          name: customer
          schema:
            $ref: '#/components/schemas/Customer'
          style: form
        - description: Date that the invoice was created.
          explode: true
          in: query
          name: date
          schema:
            type: string
          style: form
        - description: The date payment is due on this invoice. This value is calculated from the date the invoice is created, plus the number of days specified in the days_until_due field. Format is in Unix time.
          explode: true
          in: query
          name: due_date
          schema:
            type: string
          style: form
        - description: The ID of the invoice created after the last invoice you want to retrieve.
            card.
          explode: true
          in: query
          name: ending_before
          schema:
            type: string
          style: form
        - description: The maximum number of invoices to return. Range 1-100. Default is 10.
          explode: true
          in: query
          name: limit
          schema:
            type: string
          style: form
        - description: The ID of the invoice created before the first invoice you want to retrieve.
          explode: true
          in: query
          name: starting_after
          schema:
            type: string
          style: form
        - description: ID of the subscription. String starting with sub_.
          explode: true
          in: query
          name: subscription
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/InvoiceResponse'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Invoices Fetched successfully
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  /v1/invoices/{invoiceId}:
    get:
      summary: Retrieve Invoice
      tags:
        - Collect
      description: Retrieve the basic data of an invoice, with individual invoice lines.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#retrieve-invoice
      operationId: retrieveInvoice
      parameters:
        - description: The ID of the invoice that you want to retrieve.
          example: invoice_8a7200327e12b98cf5b038a3fdb2f642
          name: invoiceId
          explode: false
          in: path
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: Invoice Fetched successfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InvoiceResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
    post:
      summary: Update Invoice
      tags:
        - Collect
      description: Change or modify an invoice. You can modify the invoice when its status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#update-invoice
      operationId: updateInvoice
      parameters:
        - description: The ID of the invoice that you want to updated.
          example: invoice_8a7200327e12b98cf5b038a3fdb2f642
          name: invoiceId
          explode: false
          in: path
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                days_until_due:
                  description: The number of days until the due date.
                  type: number
                description:
                  description: Description of the invoice.
                  type: string
                due_date:
                  description: The date payment is due on this invoice. This value is calculated from the date the invoice is created, plus the number of days specified in the days_until_due field. Format is in Unix time.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                payment_fields:
                  description: Object containing additional payment_options fields.
                  type: object
                statement_descriptor:
                  description: Description of the invoice for the customer's credit card statement. Limited to 22 characters.
                  type: string
                tax_percent:
                  description: The tax rate, defined as a percentage.
                  type: number
      responses:
        '200':
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InvoiceResponse'
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
    delete:
      summary: Delete Invoice
      tags:
        - Collect
      description: Delete an invoice. You can delete an invoice when status is draft.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#delete-invoice
      operationId: deleteInvoice
      parameters:
        - description: The ID of the invoice that you want to delete.
          example: invoice_8a7200327e12b98cf5b038a3fdb2f642
          name: invoiceId
          explode: false
          in: path
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: Invoice deleted successfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      deleted:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  /v1/invoices/{invoiceId}/finalize:
    post:
      tags:
        - Collect
      summary: Finalize Invoice
      description: Finalize an invoice.Invoices are initially created with a draft status, and this is the only state in which an invoice can be finalized. When an invoice is ready to be paid, finalize it. This sets its status to open. Subscriptions automatically create draft invoices during each billing cycle, which are then automatically finalized. When an invoice is finalized, it can no longer be deleted and its final status can be one of the following - Paid Uncollectible* Void. An invoice can be finalized only one time.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#finalize-invoice
      operationId: finalizeInvoice
      parameters:
        - description: ID of the invoice you want to pay.
          example: invoice_8a7200327e12b98cf5b038a3fdb2f642
          name: invoiceId
          explode: false
          in: path
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: Finalized Invoice,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/InvoiceResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  /v1/invoices/{invoiceId}/pay:
    post:
      summary: payInvoice
      tags:
        - Collect
      description: Make a payment against an invoice.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/invoice#pay-invoice
      operationId: payInvoice
      parameters:
        - description: ID of the invoice you want to pay.
          example: invoice_8a7200327e12b98cf5b038a3fdb2f642
          name: invoiceId
          explode: false
          in: path
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                payment_method:
                  description: ID of the payment method for paying the invoice. If not included in the body, then the customer's default_payment_method is used.
                  type: string
      responses:
        '200':
          description: The Invoice
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/InvoiceResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
  /v1/virtual_accounts:
    post:
      description: Issue a virtual account number to an existing wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/virtual-account#issue-virtual-account-number-to-wallet
      operationId: createIssuing
      requestBody:
        content:
          application/json:
            schema:
              properties:
                country:
                  description: The country that the account number will be associated
                    with. Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
                  type: string
                currency:
                  description: Currency of the account. Three-letter ISO 4217 code.
                  type: string
                description:
                  description: Description of the account.
                  type: string
                ewallet:
                  description: ID of the wallet the bank account number is issued
                    to. String starting with ewallet_.
                  type: string
                merchant_reference_id:
                  description: ID of this account, as provided by the merchant. Limited
                    to 45 characters.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                requested_currency:
                  description:
                    '*Currency received by the virtual account after conversion. Uppercase. One of the following:
                    AUD - Australian Dollar
                    EUR - Euro
                    GBP - Pound Sterling
                    HKD - Hong Kong Dollar
                    SGD - Singapore Dollar
                    USD - US Dollar
                    When not specified, the funds appear in the wallet’s currency account for the currency of the transaction.*'
                  type: string
              type: object
              required: [country, currency, ewallet]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      bank_account:
                        description: Issuied virtual account.
                        type: object
                      currency:
                        description: Currency of the account. Three-letter ISO 4217
                          code.
                        type: string
                      description:
                        description: Description of the account.
                        type: string
                      ewallet:
                        description: ID of the wallet the bank account number is issued
                          to. String starting with ewallet_.
                        type: string
                      funding_instructions:
                        description: Issuied virtual account funding instructions.
                        type: object
                      id:
                        description: The country that the account number will be associated
                          with. Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
                        type: string
                      merchant_reference_id:
                        description: ID of this account, as provided by the merchant.
                          Limited to 45 characters.
                        type: string
                      metadata:
                        description: A JSON object defined by the client.
                        type: object
                      status:
                        description: Issuied virtual account statuts.
                        type: string
                      transactions:
                        description: Issuied virtual account transactions.
                        items:
                          $ref: '#/components/schemas/CardTransaction'
                        type: array
                      requested_currency:
                        description:
                          '*Currency received by the virtual account after conversion. Uppercase. One of the following:
                          AUD - Australian Dollar
                          EUR - Euro
                          GBP - Pound Sterling
                          HKD - Hong Kong Dollar
                          SGD - Singapore Dollar
                          USD - US Dollar
                          When not specified, the funds appear in the wallet’s currency account for the currency of the transaction.*'
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Virtual Account
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Issue Virtual Account Number to Wallet
      tags:
        - Issuing
  /v1/virtual_accounts/transactions:
    post:
      description: Simulate a deposit to a virtual account number that was issued to
        a wallet. This method is relevant only for testing in the sandbox. The currency
        of the transfer must be supported by the specific virtual account. This method
        triggers the Deposit Completed webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/virtual-account#simulate-a-bank-transfer-to-a-wallet
      operationId: simulateCompleteBankAccountIssuingTransaction
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: The amount of the transaction, in units of the currency
                    defined in currency. Decimal, including the correct number of
                    decimal places for the currency exponent, as defined in ISO 2417:2015.
                    If the amount is a whole number, use an integer and not a decimal.
                  type: string
                currency:
                  description: Currency of the transaction. Three-letter ISO 4217
                    code. Must be the same as the currency of the virtual account.
                  type: string
                issued_bank_account:
                  description: ID of the Virtual Account Number object. String starting
                    with issuing_
                  type: string
              required: [currency, issued_bank_account, amount]
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        description: ID of the issued card transaction object. String starting with
                          cit_.
                        type: string
                      merchant_reference_id:
                        description: ID of this account, as provided by the merchant.
                          Limited to 45 characters.
                        type: string
                      ewallet:
                        description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                        type: string
                      bank_account:
                        description: Issuied virtual account.
                        type: object
                        nullable: true
                      metadata:
                        description: A JSON object defined by the client.
                        type: object
                      status:
                        description: Issuied virtual account statuts.
                        type: string
                      description:
                        description: Description of the account.
                        type: string
                      funding_instructions:
                        description: Issued virtual account funding instructions.
                        type: object
                      currency:
                        description: Currency of the transaction. Three-letter ISO 4217.
                        type: string
                      transactions:
                        description: Issued virtual account transactions.
                        items:
                          type: object
                          properties:
                            id:
                              description: ID of the issued card transaction object. String starting with cit_.
                              type: string
                            ewallet:
                              description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                              type: string
                            account_id:
                              description: ID of the virtual bank account.
                              type: string
                            account_id_type:
                              description: Type of the virtual account number.
                              type: string
                            amount:
                              description: Amount of the transaction.
                              type: number
                            currency:
                              description: Currency of the transaction. Three-letter ISO 4217.
                              type: string
                            created_at:
                              description: Time of creation of the transaction, in Unix time. Response only.
                              type: number
                            original_amount:
                              description: This field will show the initial transaction amount before conversion.
                              type: number
                            original_currency:
                              description:  This field will display the currency in which the transaction was originally made.
                              $ref: "#/components/schemas/Currency"
                            fx_rate:
                              description:  This field will indicate the exchange rate applied for the currency conversion
                              type: number
                        type: array
                      requested_currency:
                        description:
                          '*Currency received by the virtual account after conversion. Uppercase. One of the following:
                          AUD - Australian Dollar
                          EUR - Euro
                          GBP - Pound Sterling
                          HKD - Hong Kong Dollar
                          SGD - Singapore Dollar
                          USD - US Dollar
                          When not specified, the funds appear in the wallet’s currency account for the currency of the transaction.*'
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Simulate a Bank Transfer to a Wallet
      tags:
        - Issuing
  /v1/virtual_accounts/{virtualAccountId}:
    get:
      description: Retrieve a Virtual Account Number object for a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/virtual-account#retrieve-virtual-account-history
      operationId: retrieveIssuingByRapydToken
      parameters:
        - description: ID of the Virtual Account Number object. String starting with
            issuing_.
          example: issuing_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: virtualAccountId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        description: ID of the issued card transaction object. String starting with
                          cit_.
                        type: string
                      merchant_reference_id:
                        description: ID of this account, as provided by the merchant.
                          Limited to 45 characters.
                        type: string
                      ewallet:
                        description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                        type: string
                      bank_account:
                        description: Issuied virtual account.
                        type: object
                        nullable: true
                      metadata:
                        description: A JSON object defined by the client.
                        type: object
                      status:
                        description: Issuied virtual account statuts.
                        type: string
                      description:
                        description: Description of the account.
                        type: string
                      funding_instructions:
                        description: Issuied virtual account funding instructions.
                        type: object
                      currency:
                        description: Currency of the transaction. Three-letter ISO 4217.
                        type: string
                      transactions:
                        description: Issuied virtual account transactions.
                        items:
                          type: object
                          properties:
                            id:
                              description: ID of the issued card transaction object. String starting with cit_.
                              type: string
                            ewallet:
                              description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                              type: string
                            account_id:
                              description: ID of the virtual bank account.
                              type: string
                            account_id_type:
                              description: Type of the virtual account number.
                              type: string
                            amount:
                              description: Amount of the transaction.
                              type: number
                            currency:
                              description: Currency of the transaction. Three-letter ISO 4217.
                              type: string
                            created_at:
                              description: Time of creation of the transaction, in Unix time. Response only.
                              type: number
                            receiving_currency:
                              type: boolean
                            original_currency:
                              description: This field will display the currency in which the transaction was originally made.
                              type: string
                            original_amount:
                              description: This field will show the initial transaction amount before conversion.
                              type: string
                            fx_rate:
                              description: This field will indicate the exchange rate applied for the currency conversion
                              type: string    
                        type: array
                      requested_currency:
                        description:
                          '*Currency received by the virtual account after conversion. Uppercase. One of the following:
                          AUD - Australian Dollar
                          EUR - Euro
                          GBP - Pound Sterling
                          HKD - Hong Kong Dollar
                          SGD - Singapore Dollar
                          USD - US Dollar
                          When not specified, the funds appear in the wallet’s currency account for the currency of the transaction.*'
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Virtual Account,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Virtual Account History
      tags:
        - Issuing
    delete:
      description: Delete a virtual account number of an existing wallet. In order to close a virtual account its status must be ACT.
      externalDocs:
        description: Learn more about details provided by this API
        url: "https://docs.rapyd.net/build-with-rapyd/reference/virtual-account#retrieve-virtual-account-history"
      operationId: closeIssuing
      parameters:
        - description: ID of the virtual account. String starting with issuing_.
          example: issuing_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: virtualAccountId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        description: ID of the account. String starting with issuing_
                        type: string
                      deleted:
                        description: Indicates whether the account has been successfully deleted
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Virtual Account
      summary: Close VA
      tags:
        - Issuing
    post:
      description: Update Receiving Currency
      externalDocs:
        description: Learn more about details provided by this API
        url: TBD
      operationId: updateReceivingCurrency
      parameters:
        - description: ID of the Virtual Account Number object. String starting with
            issuing_.
          example: issuing_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: virtualAccountId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                requesting_currency:
                  $ref: '#/components/schemas/Currency'
                  nullable: true
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        description: ID of the issued card transaction object. String starting with
                          cit_.
                        type: string
                      merchant_reference_id:
                        description: ID of this account, as provided by the merchant.
                          Limited to 45 characters.
                        type: string
                      ewallet:
                        description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                        type: string
                      bank_account:
                        description: Issuied virtual account.
                        type: object
                        nullable: true
                      metadata:
                        description: A JSON object defined by the client.
                        type: object
                      status:
                        description: Issuied virtual account statuts.
                        type: string
                      description:
                        description: Description of the account.
                        type: string
                      funding_instructions:
                        description: Issuied virtual account funding instructions.
                        type: object
                      currency:
                        description: Currency of the transaction. Three-letter ISO 4217.
                        type: string
                      transactions:
                        description: Issuied virtual account transactions.
                        items:
                          type: object
                          properties:
                            id:
                              description: ID of the issued card transaction object. String starting with cit_.
                              type: string
                            ewallet:
                              description: ID of the wallet the bank account number is issued to. String starting with ewallet_.
                              type: string
                            account_id:
                              description: ID of the virtual bank account.
                              type: string
                            account_id_type:
                              description: Type of the virtual account number.
                              type: string
                            amount:
                              description: Amount of the transaction.
                              type: number
                            currency:
                              description: Currency of the transaction. Three-letter ISO 4217.
                              type: string
                            created_at:
                              description: Time of creation of the transaction, in Unix time. Response only.
                              type: number
                            receiving_currency:
                              type: boolean
                        type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
      tags:
        - Issuing
  /v1/virtual_accounts/{virtualAccountId}/transactions/{transactionId}:
    get:
      description: Retrieve a virtual account transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/virtual-account#retrieve-virtual-account-transaction
      operationId: retrieveIssuingTransaction
      parameters:
        - description: ID of the Virtual Account Number object. String starting with
            issuing_.
          example: issuing_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: virtualAccountId
          required: true
          schema:
            type: string
          style: simple
        - description: ID of the transaction, as appears in the array of transactions
            in the response to 'Retrieve Virtual Account History'.
          example: isutran_59599bcba9ab9c79113f88cade1ed655
          explode: false
          in: path
          name: transactionId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/VirtualAccountTransactionResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Virtual Account Transaction
      tags:
        - Issuing
  /v1/issuing/cards:
    post:
      description: Issue a card to a wallet contact.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card#issue-card
      operationId: issueCard
      requestBody:
        content:
          application/json:
            schema:
              properties:
                card_program:
                  description: ID of the card program that the card is issued from.
                    String starting with cardprog_.
                  type: string
                country:
                  description: Two-letter ISO 3166-1 ALPHA-2 code for the country.
                  type: string
                ewallet_contact:
                  description: ID of the wallet contact that the card is assigned
                    to. String starting with cont_.
                  type: string
                expiration_month:
                  description: Expiration month of the card.
                  type: string
                expiration_year:
                  description: Expiration year of the card.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
              type: object
              required:
                - ewallet_contact
                - card_program
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/CardIssuing'
                      - $ref: '#/components/schemas/CardIssuingMasked'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Issue Card
      tags:
        - Issuing
    get:
      tags:
        - Issuing
      summary: List issuing cards.
      description: Retrieve a list of all issuing cards.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-issued-cards.html
      operationId: getCardIssuingList
      parameters:
        - name: contact
          in: query
          description: ID of a wallet contact. String starting with cont_.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: cont_c34bd6bfd9575f6f7b06647999a93126
        - name: page_number
          in: query
          description: Page number to retrieve.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: page_size
          in: query
          description: Number of results per page.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: creation_start_date
          in: query
          description: Start date of card creation.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: creation_end_date
          in: query
          description: End date of card creation.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: activation_start_date
          in: query
          description: Start date of card activation.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: activation_end_date
          in: query
          description: End date of card activation.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: card_program
          in: query
          description: Card program token.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: status
          in: query
          description: Card status.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: allow_deleted
          in: query
          description: Is card allow delete.
          required: false
          style: form
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of cards,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/CardIssuing'
                        - $ref: '#/components/schemas/CardIssuingMasked'
  /v1/issuing/cards/{cardId}:
    get:
      tags:
        - Issuing
      summary: Card details.
      description: Retrieve the details of a card.
      externalDocs:
        description: Learn more about details provided by this API
        url: ''
      operationId: getCardIssuingDetails
      parameters:
        - name: cardId
          in: path
          description: ID of a cardId. String starting with ci_.
          required: true
          schema:
            type: string
          example: card_c34bd6bfd9575f6f7b06647999a93126
      responses:
        '200':
          description: get Card details By card Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    oneOf:
                      - $ref: '#/components/schemas/CardIssuing'
                      - $ref: '#/components/schemas/CardIssuingMasked'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
  /v1/issuing/cards/activate:
    post:
      description: Activate a card that was issued via the Rapyd issuing platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card#activate-issued-card-using-api
      operationId: activateCard
      requestBody:
        content:
          application/json:
            schema:
              properties:
                card:
                  description: The card token, which is a string starting with 'card_'.
                    If the client is PCI-certified, you can use the actual card number.
                  type: string
              required: [card]
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CardIssuing'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Activate Issued Card Using API
      tags:
        - Issuing
  /v1/issuing/cards/personalize:
    post:
      description: Create a connection between an issued card and a wallet contact.
        Relevant to cards that are issued in bulk and not assigned to any specific
        person. This method can be used only once per card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card#personalize-bulk-issued-card
      operationId: modifyCard
      requestBody:
        content:
          application/json:
            schema:
              properties:
                card:
                  description: The card token, which is a string starting with 'card_'.
                    If the client is PCI-certified, you can use the actual card number.
                  type: string
                ewallet_contact:
                  description: ID of the wallet contact that the card is issued to.
                    String starting with cont_.
                  type: string
              required: [ewallet_contact, card]
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CardIssuing'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Personalize Bulk-Issued Card
      tags:
        - Issuing
  /v1/issuing/cards/status:
    post:
      description: Block or unblock a card that was issued via the Rapyd issuing platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card#update-card-status
      operationId: updateCardStatus
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blocked_reason:
                  description: Reason for blocking the card. Relevant when the value
                    of status is block.
                  type: string
                card:
                  description: The card token, which is a string starting with 'card_'.
                    If the client is PCI-certified, you can use the actual card number.
                  type: string
                status:
                  description: Status of the card. One of the following, block/unblock
                  type: string
              required: [card, status]
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CardIssuing'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Card Status
      tags:
        - Issuing
  /v1/issuing/cards/{cardId}/transactions:
    get:
      description: Use the GET method to retrieve a list of transactions for a specific
        issued card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card-transactions#list-issued-card-transactions
      operationId: getCardIssuingTransactions
      parameters:
        - description: ID of the issued card. String starting with card_.
          example: card_5004bc56594a31fb9a48b9b88c2d6f48
          explode: false
          in: path
          name: cardId
          required: true
          schema:
            type: string
          style: simple
        - description: Timestamp of the last transaction or later, in Unix time.
          example: 1608796554
          explode: false
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Transactions greater than a specific amount.
          example: 200
          explode: false
          in: query
          name: min_amount
          required: false
          schema:
            type: string
          style: form
        - description: Transactions smaller than a specific amount.
          example: 1000
          explode: false
          in: query
          name: max_amount
          required: false
          schema:
            type: string
          style: form
        - description: Filters the results to return only transactions that have this
            string as part of the name or location.
          example: Don Joe
          explode: false
          in: query
          name: merchant_name_search
          required: false
          schema:
            type: string
          style: form
        - description: ID of the transaction, as appears in the array of transactions
            in the response to 'Retrieve Virtual Account History'.
          example: 20
          explode: false
          in: query
          name: page_size
          required: true
          schema:
            type: string
          style: form
        - description: Page number to retrieve.
          explode: false
          in: query
          name: page_number
          required: true
          schema:
            type: string
          style: form
        - description: ID of the transaction, as appears in the array of transactions
            in the response to 'Retrieve Virtual Account History'.
          example: 1608796554
          explode: false
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/CardTransaction'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve a list of transactions for a specific issued card.
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Issued Card Transactions
      tags:
        - Issuing
  /v1/issuing/cards/{cardId}/transactions/{transactionId}:
    get:
      description: Use the GET method to retrieve details of a specific transaction
        from a specific issued card.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/issued-card-transactions#retrieve-issued-card-transaction-details
      operationId: getCardIssuingTransaction
      parameters:
        - description: Card id
          example: card_5004bc56594a31fb9a48b9b88c2d6f48
          explode: false
          in: path
          name: cardId
          required: true
          schema:
            type: string
          style: simple
        - description: Card transaction id
          example: cit_8d8a34d280ff02b0bd218ac6ede21931
          explode: false
          in: path
          name: transactionId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/CardTransaction'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Issued Card Transaction Details
      tags:
        - Issuing
  /v1/orders:
    get:
      tags:
        - Collect
      summary: List Orders
      description: Retrieve a list of all orders.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#list-orders
      operationId: listOrder
      parameters:
        - name: limit
          in: query
          description: The maximum number of orders to return. Range - 1-100. Default is 10.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: 10
        - name: ending_before
          in: query
          description: The ID of the order created after the last order you want to retrieve.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: order_d1ce10b16cd4350d12c75232628e49bd
        - name: starting_after
          in: query
          description: The ID of the order created before the first order you want to retrieve.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: order_d1ce10b16cd4350d12c75232628e49bd
      responses:
        '200':
          description: List of orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderResponse'
    post:
      tags:
        - Collect
      summary: Create an Order
      description: Create an order for goods. For services, see Create Subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#create-an-order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon:
                  type: string
                  description: ID of a coupon that is applied against this order. String starting with coupon_. The duration field of the coupon must be set to repeating, and the duration_in_months and discount_duration_in_uses fields must be set to 1.
                customer:
                  type: string
                  description: ID of the customer. String starting with cus_.
                currency:
                  type: string
                  description: Three-letter ISO 4217 code for the currency used in the objects in the 'items' list.
                email:
                  type: string
                  description: Email address of the customer.
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      amount:
                        type: string
                        description: Price of one SKU unit, in the currency defined in currency. Decimal, including the correct number of decimal places for the currency exponent, as defined in ISO 2417:2015.
                      currency:
                        $ref: '#/components/schemas/Currency'
                      description:
                        type: string
                        description: Description of the item.
                      parent:
                        description: ID of the SKU object that represents the product. String starting with sku_. Each SKU can appear in this list only one time, for items of type 'sku'. Required when type is sku. Must be null when type is shipping.
                        type: string
                      type:
                        type: string
                        description: Type of line item.
                        enum:
                          - shipping
                          - sku
                      quantity:
                        description: Quantity of the product in the line item. Integer. Required when type is sku.
                        type: number
                  description: Array of line items.
                metadata:
                  type: object
                  description: A JSON object defined by the client.
                shipping_address:
                  $ref: '#/components/schemas/Address'
                tax_percent:
                  type: number
                  description: Percentage of tax to charge. Decimal.
                upstream_id:
                  type: string
                  description: Merchant-defined ID for the order. If the merchant does not define an ID, Rapyd generates it.
              required:
                - customer
                - currency
                - items
      responses:
        '200':
          description: The created order.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/OrderResponse'
  /v1/orders/{orderId}:
    get:
      description: Retrieve the details of an order.
      summary: Retrieve an Order
      tags:
        - Collect
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#retrieve-an-order
      operationId: retrieveOrder
      parameters:
        - description: ID of the order. String starting with order_.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
    post:
      description: Change or modify an order.
      summary: Update an Order
      tags:
        - Collect
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#update-an-order
      operationId: updateOrder
      parameters:
        - description: ID of the order. String starting with order_.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                coupon:
                  type: string
                  description: ID of a coupon that is applied against this order. String starting with coupon_. The duration field of the coupon must be set to repeating, and the duration_in_months and discount_duration_in_uses fields must be set to 1.
                metadata:
                  type: object
                  description: A JSON object defined by the client.
                tax_percent:
                  type: number
                  description: Percentage of tax to charge. Decimal.
                status:
                  type: string
                  description: Indicates the status of the order. Can be changed when status is pending, paid or fulfilled
                  enum:
                    - paid
                    - pending
                    - canceled
                    - fulfilled
                    - returned
                    - partial
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
  /v1/orders/{orderId}/returns:
    post:
      description: Make a return against an order. The maximum amount of the return is the amount of the order
      summary: Create a Return Against an Order
      tags:
        - Collect
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/return#create-a-return-against-an-order
      operationId: returnsOrder
      parameters:
        - description: ID of the order. String starting with order_.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                      parent:
                        type: string
                      type:
                        type: string
                        enum:
                          - sku
                          - shipping
                          - tax
                      quantity:
                        type: number
                      currency:
                        type: string
                      amount:
                        type: number
                      order_id:
                        type: string
              required: [items]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderReturnedResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
  /v1/orders/{orderId}/pay:
    post:
      description: Pay an order.
      summary: Pay an order.
      tags:
        - Collect
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#pay-an-order
      operationId: payOrder
      parameters:
        - description: ID of the order. String starting with order_.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  type: object
                  description: A JSON object defined by the client.
                payment_method:
                  type: string
                  description: ID of the payment method. String starting with card_ or other_. If not specified, the payment method is the default_payment_method of the customer.
                customer:
                  type: string
                  description: ID of a customer. String starting with cus_. The order is paid with the customer's default payment method.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
  /v1/order_returns:
    get:
      tags:
        - Collect
      summary: List Returns
      description: Retrieve a list of all order returns.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#list-orders
      operationId: listOrderReturn
      parameters:
        - name: limit
          in: query
          description: The maximum number of returns to list. Range - 1-100. Default is 10.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: 10
        - name: ending_before
          in: query
          description: The ID of the order created after the last order you want to retrieve a return from.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: orre_d1ce10b16cd4350d12c75232628e49bd
        - name: starting_after
          in: query
          description: The ID of the order created before the first order you want to retrieve a return from.
          required: false
          style: form
          explode: false
          schema:
            type: string
          example: orre_d1ce10b16cd4350d12c75232628e49bd
        - name: tokens
          in: query
          description: Filters the list for orders related to the specified order.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: List of orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderReturnedResponse'
  /v1/order_returns/{orderReturnsId}:
    get:
      description: Retrieve the details of a return.
      summary: Retrieve a Return
      tags:
        - Collect
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/order#retrieve-an-order
      operationId: retrieveOrderReturn
      parameters:
        - description: ID of the return. String starting with orre_.
          in: path
          name: orderReturnsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/OrderReturnedResponse'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
  /v1/payment_methods/countries/{countryId}:
    get:
      description: You can filter the results by specifying the currency query parameter
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment-method-type#list-payment-methods-by-country
      operationId: getPaymentMethodsTypesByCountry
      parameters:
        - description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
          in: path
          name: countryId
          required: true
          schema:
            $ref: '#/components/schemas/Country'
        - description: currency
          in: query
          name: currency
          required: false
          schema:
            $ref: '#/components/schemas/Currency'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethodType'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
      summary: Retrieve a list of all payment methods available for a country
      tags:
        - Collect
  /v1/payment_methods/{pmtId}/required_fields:
    get:
      description: The fields are returned as a list of objects. The name of each
        field appears in the name field of the response
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/en/get-payment-method-required-fields.html
      operationId: getPaymentMethodTypeRequiredFields
      parameters:
        - description: The type of the payment method.
          in: path
          name: pmtId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethodTypeRequiredFields'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: SUCCESS
      summary: Retrieve the required fields for a payment method
      tags:
        - Collect
  /v1/payments:
    get:
      description: Retrieve a list of all payments that you have created. You can
        filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment#list-payments
      operationId: listPayments
      parameters:
        - description: The ID of the payment created before the first payment you want
            to retrieve. String starting with payment_.
          explode: true
          in: query
          name: created_after
          schema:
            type: string
          style: form
        - description: The ID of the payment created after the last payment you want
            to retrieve. String starting with payment_.
          explode: true
          in: query
          name: created_before
          schema:
            type: string
          style: form
        - description: Filters the list for payments related to the specified customer.
          example: cus_753511a533a727cf28509812b4683edd
          explode: true
          in: query
          name: customer
          schema:
            $ref: '#/components/schemas/Customer'
          style: form
        - description: Filters the list for payments related to the specified destination
            card.
          explode: true
          in: query
          name: destination_card
          schema:
            type: string
          style: form
        - description: The ID of the payment created after the last payment you want
            to retrieve. String starting with payment_. Deprecated.
          explode: true
          in: query
          name: ending_before
          schema:
            type: string
          style: form
        - description: Filters the list for payments related to the specified wallet.
          example: ewallet_61be0e6ad9f57121cff47a63902282ac
          explode: true
          in: query
          name: ewallet
          schema:
            type: string
          style: form
        - description: When true, includes only group payments in the response. When
            false, excludes group payments from the response. Default is false.
          explode: true
          in: query
          name: group
          schema:
            type: boolean
          style: form
        - description: Filters according to the invoice. String starting with invoice_.
          explode: true
          in: query
          name: invoice
          schema:
            type: string
          style: form
        - description: The maximum number of payments to return. Range, 1-100. Default is 10.
          example: '2'
          explode: true
          in: query
          name: limit
          schema:
            type: string
          style: form
        - description: Filters the list for payments related to the specified payment
            method.
          example: us_mastercard_card
          explode: true
          in: query
          name: payment_method
          schema:
            type: string
          style: form
        - description: Filters the list for payments related to the specified order.
          explode: true
          in: query
          name: order
          schema:
            type: string
          style: form
        - description: The ID of a payment in the list. The list begins with the payment
            that was created next after the payment with this ID. Use this filter to
            get the next page of results. Relevant when ending_before is not used. String
            starting with payment_.
          explode: true
          in: query
          name: starting_after
          schema:
            type: string
          style: form
        - description: Filters the list for payments related to the specified subscription.
          explode: true
          in: query
          name: subscription
          schema:
            type: string
          style: form
        - description: Merchant-defined ID.
          explode: true
          in: query
          name: merchant_reference_id
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Payment'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Payments Fetched successfully
      summary: List Payments
      tags:
        - Collect
    post:
      description: Create a payment
      externalDocs:
        description: Learn more about customer operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment#create-payment
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - allOf:
                    - $ref: "#/components/schemas/PaymentRequest"
                    - required: [ amount, currency, payment_method ]
                - allOf:
                    - $ref: "#/components/schemas/PaymentRequest"
                    - required: [ amount, currency, customer ]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Payment was created
        '400':
          description: bad input parameter
      summary: Create a payment
      tags:
        - Collect
  /v1/payments/{paymentId}:
    delete:
      description: 'Cancel a payment where the status of the payment is ACT. Relevant
        to payment methods where is_cancelable = true in the response to List Payment
        Methods by Country. This method triggers the Payment Canceled webhook. This
        webhook contains the same information as the response. NOTE: If the status
        is CLO, use the Create Refund method.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment#cancel-payment
      operationId: cancelPayment
      parameters:
        - description: ID of the payment. String starting with payment_.
          example: payment_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: paymentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payment canceled successfully
      summary: Cancel Payment
      tags:
        - Collect
    get:
      description: Retrieve details of a payment
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment#retrieve-payment
      operationId: retrievePayment
      parameters:
        - description: ID of the payment. String starting with 'payment_'.
          example: payment_bebddc4b4139d5a0f13cdcd4046cf2c1
          explode: true
          in: path
          name: paymentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Payment object
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_PAYMENT
                    message: 'The request tried to retrieve a payment, but the payment
                      was not found. The request was rejected. Corrective action:
                      Use a valid payment ID.'
                    operation_id: 889e9472-922c-40a2-861d-19977c396db5
                    response_code: ERROR_GET_PAYMENT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Payment not found for given ID
      summary: Retrieve Payment
      tags:
        - Collect
    post:
      description: Change or modify a payment when the status of the payment is ACT
        (active). You can update additional fields if they are listed under payment_options
        in the response from Get Payment Method Required Fields and is_updateable
        is set to true
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payment#update-payment
      operationId: updatePayment
      parameters:
        - description: ID of the payment. String starting with payment_.
          example: payment_36724a4ea01b438fd24ac3ab00b29150
          explode: true
          in: path
          name: paymentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  $ref: '#/components/schemas/Address'
                description:
                  description: Description of the payment.
                  type: string
                escrow:
                  description: To release escrow funds immediately, set to false.
                    If there are multiple sellers, the funds are released to all of
                    them. Relevant to payments with escrow.
                  type: boolean
                escrow_release_days:
                  description: Defines the number of days after the creation of the
                    payment that the funds are automatically released. Relevant when
                    escrow is true.
                  pattern: /[1-90]/
                  type: integer
                initiation_type:
                  description: Category of transaction initiation type.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                receipt_email:
                  description: Email address that the receipt for this transaction
                    is sent to.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payment'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payment updated successfully
      summary: Update Payment
      tags:
        - Collect
  /v1/payments/subscriptions:
    get:
      description: Retrieve a list of subscriptions. You can filter the list with
        query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#list-subscriptions
      operationId: getSubscriptionList
      parameters:
        - description: Method of billing. One of the following, pay_automatically, send_invoice.
          example: pay_automatically
          explode: false
          in: query
          name: billing
          required: false
          schema:
            type: string
          style: form
        - description: ID of the customer. String starting with cus_
          example: cus_494eae8b99f697107d7384
          explode: false
          in: query
          name: customer
          required: false
          schema:
            type: string
          style: form
        - description: Status of the subscription. One of the following, active, canceled,
            trialing
          example: 10
          explode: false
          in: query
          name: status
          required: false
          schema:
            type: string
          style: form
        - description: ID of a 'product' object. The product must have type set to service.
            String starting with product_. Filter for one product at a time.
          example: product_494eae8b99f697107d738
          explode: false
          in: query
          name: product
          required: false
          schema:
            type: string
          style: form
        - description: The ID of a record in the list. The list begins with the record
            that was created next after the record with this ID. Use this filter to
            get the next page of results. Relevant when ending_before is not used.
          example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
          explode: false
          in: query
          name: starting_after
          required: true
          schema:
            type: string
        - description: The ID of a record in the list. The list ends with the last record
            that was created before the record with this ID. Use this filter to get
            the previous page of results.
          example: sub_8cc8c5a385732bb8bdd3e7b8e87985a0
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: string
          style: form
        - description: The maximum number of subscriptions to return. Range, 1-100.
            Default is 10.
          example: 23
          explode: false
          in: query
          name: limit
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Subscription'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List of subscriptions,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Subscriptions
      tags:
        - Collect
    post:
      description: Create a subscription for regular, automatic payments.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#create-subscription
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              properties:
                billing:
                  description: Determines the method of billing. Set to pay_automatically.
                  type: string
                billing_cycle_anchor:
                  description: Determines the start of the next billing cycle, as
                    defined in the plan described in the 'items'. Value must be timestamp
                    in Unix time.
                  type: number
                cancel_at_period_end:
                  description: Terminates the subscription at the end of the current
                    billing period.
                  type: boolean
                coupon:
                  description: The ID of a discount coupon that applies to all subscription
                    items associated with this subscription. If the coupon defines
                    a fixed monetary discount, it must use the same currency as the
                    subscription's plan.
                  type: string
                customer:
                  description: ID of the customer who pays for this subscription.
                    String starting with cus_.
                  type: string
                days_until_due:
                  description: Number of days from the invoice date for customer to
                    complete the payment.
                  type: number
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                payment_fields:
                  $ref: '#/components/schemas/Payment'
                payment_method:
                  description: Payment Method object or ID.
                  oneOf:
                    - type: string
                    - $ref: '#/components/schemas/PaymentMethodType'
                simultaneous_invoice:
                  description: Determines whether each upcoming subscription invoice
                    is issued immediately. When true, the invoice is issued when the
                    subscription is created. When false (the default), the invoice
                    is issued an hour after the subscription is created.
                  type: boolean
                subscription_items:
                  description: Array of subscription items. Each item contains a plan
                    (required) and a quantity
                  items:
                    type: object
                    properties:
                      plan:
                        type: string
                        description: ID of the plan assigned to this subscription item.
                      quantity:
                        type: number
                  type: array
                tax_percent:
                  description: The percentage of tax that is applied to the entire
                    amount of the invoice.
                  type: number
                trial_end:
                  description: The time of the end of the customer's free trial period.
                    If trial_from_plan is set, leave this parameter unset.
                  type: number
                trial_from_plan:
                  description: Determines whether a free trial period can be defined
                    in a 'plan' object attached to the subscription. If trial_end
                    is set, leave this parameter unset.
                  type: boolean
                trial_period_days:
                  description: The number of days in the customer's free trial period.
                  type: number
              required:
                - customer
                - subscription_items
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Subscription
      tags:
        - Collect
  /v1/payments/subscriptions/{subscriptionId}:
    delete:
      description: Cancel a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#cancel-subscription
      operationId: cancelSubscription
      parameters:
        - description: ID of the subscription. String starting with sub_.
          example: sub_494eae8b99f697107d738
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
        - description: < Determines when the subscription is canceled.
                        true - Cancels the subscription at the end of the current period.
                        false - Cancels the subscription immediately.
          example: true
          in: query
          name: cancel_at_period_end
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The canceled subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Cancel Subscription
      tags:
        - Collect
    get:
      description: Retrieve the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#retrieve-subscription
      operationId: getSubscription
      parameters:
        - description: ID of the subscription. String starting with sub_.
          example: sub_494eae8b99f697107d738
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Subscription
      tags:
        - Collect
    post:
      description: Update the details of a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#update-subscription-item
      operationId: updateSubscription
      parameters:
        - description: ID of the subscription. String starting with sub_.
          example: sub_494eae8b99f697107d738
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                billing:
                  description: Determines the method of billing. Set to pay_automatically.
                  type: string
                billing_cycle_anchor:
                  description: Determines the start of the next billing cycle, as
                    defined in the plan described in the 'items'. Value must be timestamp
                    in Unix time.
                  type: string
                cancel_at_period_end:
                  description: Terminates the subscription at the end of the current
                    billing period.
                  type: boolean
                coupon:
                  description: The ID of a discount coupon that applies to all subscription
                    items associated with this subscription. If the coupon defines
                    a fixed monetary discount, it must use the same currency as the
                    subscription's plan.
                  type: string
                days_until_due:
                  description: Number of days from the invoice date for customer to
                    complete the payment.
                  type: number
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                payment_fields:
                  $ref: '#/components/schemas/PaymentFields'
                payment_method:
                  description: Payment Method object or ID.
                  oneOf:
                    - type: string
                    - $ref: '#/components/schemas/PaymentMethodType'
                simultaneous_invoice:
                  description: Determines whether each upcoming subscription invoice
                    is issued immediately. When true, the invoice is issued when the
                    subscription is created. When false (the default), the invoice
                    is issued an hour after the subscription is created.
                  type: boolean
                subscription_items:
                  description: Array of subscription items. Each item contains a plan
                    (required) and a quantity
                  items:
                    type: string
                  type: array
                tax_percent:
                  description: The percentage of tax that is applied to the entire
                    amount of the invoice.
                  type: number
                trial_end:
                  description: The time of the end of the customer's free trial period.
                    If trial_from_plan is set, leave this parameter unset.
                  type: number
                trial_from_plan:
                  description: Determines whether a free trial period can be defined
                    in a 'plan' object attached to the subscription. If trial_end
                    is set, leave this parameter unset.
                  type: boolean
                trial_period_days:
                  description: The number of days in the customer's free trial period.
                  type: number
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The subscription after updated,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Subscription
      tags:
        - Collect
  /v1/payments/subscriptions/{subscriptionId}/discount:
    delete:
      description: Delete the discount that was assigned to a subscription. This method does not affect the coupon that the discount was derived from.
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription#delete-discount-from-subscription
      operationId: deleteSubscriptionDiscount
      parameters:
        - description: ID of the subscription. String starting with sub_
          example: sub_494eae8b99f697107d738
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      summary: Delete Discount from Subscription
      tags:
        - Collect
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        description: discount id
                        type: string
                      deleted:
                        type: boolean
                  status:
                    $ref: '#/components/schemas/Status'
          description: discount was deleted
  /v1/payout_methods/{pomt}/required_fields:
    get:
      description: "Retrieve the fields required to use a payout method type. The\
        \ fields are returned as an array of objects. The name of each field appears\
        \ in the name field of each object. Use this information for Create Payout,\
        \ Create Beneficiary and Create Sender.\n Note: The fields returned by this\
        \ method are required when you create a payout. If you create a payout with\
        \ a sender or beneficiary that was created previously, you are responsible\
        \ for choosing a sender and beneficiary that have all the fields required\
        \ by the payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout-method-type#payout-options-object
      operationId: getPayoutMethodTypesDetails
      parameters:
        - description: The type of the payout method. Set to the name of a payout method
            listed in the response to List Payout Method Types. The two-letter prefix
            must match the beneficiary country code.
          example: us_visa_card
          explode: true
          in: path
          name: pomt
          required: true
          schema:
            type: string
        - description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
            Uppercase.
          example: US
          explode: true
          in: query
          name: beneficiary_country
          required: true
          schema:
            type: string
          style: form
        - description: Type of entity for the beneficiary. One of the following, individual, company
          example: company
          explode: true
          in: query
          name: beneficiary_entity_type
          required: true
          schema:
            type: string
          style: form
        - description: Amount of the payout, in units of the currency that the beneficiary
            is receiving. Decimal.
          explode: true
          in: query
          name: payout_amount
          required: true
          schema:
            type: number
          style: form
        - description: Currency received by the beneficiary. Three-letter ISO 4217 code.
            Uppercase.
          example: USD
          explode: true
          in: query
          name: payout_currency
          required: true
          schema:
            type: string
          style: form
        - description: Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Uppercase.
          example: US
          explode: true
          in: query
          name: sender_country
          required: true
          schema:
            type: string
          style: form
        - description: Currency that the sender is paying with. Three-letter ISO 4217
            code. Uppercase.
          example: USD
          explode: true
          in: query
          name: sender_currency
          required: true
          schema:
            type: string
          style: form
        - description: 'Type of entity for the sender. One of the following: individual, company'
          example: company
          explode: true
          in: query
          name: sender_entity_type
          required: true
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/PayoutMethodTypeDetails'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payout method types details fetched successfuly
        '500':
          description: Internal server error.
      summary: Get Payout Required Fields
      tags:
        - Disburse
  /v1/payouts:
    get:
      description: Retrieve a list of payouts that you created.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#list-payouts
      operationId: listPayouts
      parameters:
        - description: Filters according to the beneficiary ID. String starting with
            beneficiary_.
          example: beneficiary_504f2e8d5618dfaa4a6e73c632f3029b
          explode: true
          in: query
          name: beneficiary
          schema:
            type: string
          style: form
        - description: The ID of the payout created before the first payout you want
            to retrieve. String starting with payout_.
          example: ''
          explode: true
          in: query
          name: created_after
          schema:
            type: string
          style: form
        - description: The ID of the payout created after the last payout you want to
            retrieve. String starting with payout_.
          example: ''
          explode: true
          in: query
          name: created_before
          schema:
            type: string
          style: form
        - description: The ID of a payout in the list. The list ends with the payout
            that was created before the payout with this ID. Use this filter to get
            the previous page of results. String starting with payout_. Deprecated.
          example: ''
          explode: true
          in: query
          name: ending_before
          schema:
            type: string
          style: form
        - description: Filters according to the wallet ID. String starting with ewallet_.
          example: ewallet_61be0e6ad9f57121cff47a63902282ac
          explode: true
          in: query
          name: ewallet
          schema:
            type: string
          style: form
        - description: 'The maximum number of payouts to return. Range: 1-100. Default is 10.'
          example: '2'
          explode: true
          in: query
          name: limit
          schema:
            type: string
          style: form
        - description: Filters according to the merchant reference ID.
          example: ''
          explode: true
          in: query
          name: merchant_reference_id
          schema:
            type: string
          style: form
        - description: Filters according to the type of payout method. The two-letter
            prefix must match the beneficiary country code.
          example: ph_cebuana_lhuillier_cash
          explode: true
          in: query
          name: payout_method_type
          schema:
            type: string
          style: form
        - description: Filters according to the sender ID. String starting with sender_.
          example: sender_ba47352b13411b7fc9d6654b953de832
          explode: true
          in: query
          name: sender
          schema:
            type: string
          style: form
        - description: Filters according to the country of the sender. Two-letter ISO
            3166-1 ALPHA-2 code.
          example: PH
          explode: true
          in: query
          name: sender_country
          schema:
            $ref: '#/components/schemas/Country'
          style: form
        - description: Filters according to the currency that the sender is paying with.
            Three-letter ISO 4217 code.
          example: PHP
          explode: true
          in: query
          name: sender_currency
          schema:
            $ref: '#/components/schemas/Currency'
          style: form
        - description: The ID of a payout in the list. The list begins with the payout
            that was created next after the payout with this ID. Use this filter to
            get the next page of results. Relevant when ending_before is not used. String
            starting with payout_. Deprecated
          example: ''
          explode: true
          in: query
          name: starting_after
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Payout'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Payouts Fetched Successfuly
        '500':
          description: Internal server error
      summary: List Payouts
      tags:
        - Disburse
    post:
      description: 'Create a payout (disbursement).

        This method triggers the Payout Created webhook. This webhook contains the
        same information as the response. If the action of a third party is not required,
        the Payout Completed webhook is also triggered.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#create-payout
      operationId: createPayout
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - allOf:
                    - $ref: "#/components/schemas/PayoutRequest"
                    - required: [ payout_method_type ]
                - allOf:
                    - $ref: "#/components/schemas/PayoutRequest"
                    - required: [ default_payout_method_type ]
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payout created successfuly
        '500':
          description: Internal server error
      summary: Create Payout
      tags:
        - Disburse
  /v1/payouts/beneficiary:
    post:
      description: 'Create a beneficiary for use in payouts.

        The response provides a unique beneficiary ID, which you can use in place
        of the Beneficiary object for Create Payout.

        This method triggers the Beneficiary Created webhook. This webhook contains
        the same information as the response.

        Note: In addition to the required fields documented below, you must include
        all other beneficiary fields listed in the response to Get Payout Required
        Fields, and you must conform to the regex provided.

        To create a beneficiary that you can use with multiple payout methods, include
        all fields that are required by each payout method.

        The client is responsible for including all required fields.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/beneficiary#create-beneficiary
      operationId: createBeneficiary
      requestBody:
        content:
          application/json:
            schema:
              properties:
                category:
                  $ref: '#/components/schemas/Category'
                company_name:
                  description: Name of the beneficiary company. Relevant when entity_type
                    is company.
                  example: ABC
                  type: string
                country:
                  $ref: '#/components/schemas/Country'
                currency:
                  $ref: '#/components/schemas/Currency'
                default_payout_method_type:
                  description: The type of payout method for the beneficiary. The
                    two-letter prefix must match the beneficiary country code.
                  example: us_general_bank
                  type: string
                entity_type:
                  $ref: '#/components/schemas/EntityType'
                first_name:
                  description: First name of the beneficiary. Relevant when entity_type
                    is individual.
                  example: John
                  type: string
                identification_type:
                  description: Type of identification document for the beneficiary.
                  example: drivers_license
                  type: string
                identification_value:
                  description: Identification number on the document mentioned in
                    identification_type.
                  example: ABNHDLK354665
                  type: string
                last_name:
                  description: Family name of the beneficiary. Relevant when entity_type
                    is individual.
                  example: John
                  type: string
                merchant_reference_id:
                  description: ID defined by the client.
                  example: GHY-0YU-HUJ-POI
                  type: string
              required:
                - category
                - country
                - currency
                - entity_type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Beneficiary'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Beneficiary Created Successfully
        '500':
          description: Internal server error
      summary: Create Beneficiary
      tags:
        - Disburse
  /v1/payouts/beneficiary/validate:
    post:
      description: "Validate the format of the details for a payout beneficiary. You\
        \ can validate a beneficiary multiple times for different payout methods.\
        \ You can enter a Beneficiary object or a previously created beneficiary ID.\
        \ \n Note: In addition to the required fields for Create Beneficiary, the\
        \ Beneficiary object must include all required fields for the beneficiary\
        \ listed in the response to Get Payout Required Fields. The examples include\
        \ additional fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/beneficiary#validate-beneficiary
      operationId: validateBeneficiary
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: Maximum payout amount to validate, in units of the
                    currency defined in sender_currency. Decimal.
                  type: number
                beneficiary:
                  description: String starting with beneficiary_ or the object describing
                    the beneficiary.
                  example: beneficiary_d895d90d276869efe1e359386a1fb3e3
                  oneOf:
                    - type: string
                    - $ref: '#/components/schemas/Beneficiary'
                identifier_type:
                  description: Identifier type of beneficiary
                  type: string
                identifier_value:
                  description: Identifier value to filter with
                  type: string
                payout_method_type:
                  description: The type of the payout method. Set to a value included
                    in the response to List Payout Method Types. The two-letter prefix
                    must match the beneficiary country code.
                  example: us_general_bank
                  type: string
                sender_country:
                  $ref: '#/components/schemas/Country'
                sender_currency:
                  $ref: '#/components/schemas/Currency'
                sender_entity_type:
                  $ref: '#/components/schemas/EntityType'
              required:
                - amount
                - beneficiary
                - payout_method_type
                - sender_country
                - sender_currency
                - sender_entity_type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      beneficiary:
                        $ref: '#/components/schemas/Beneficiary'
                      validated:
                        description: validation status
                        example: true
                        type: boolean
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Beneficiary validated successfuly
        '500':
          description: Internal server error.
      summary: Validate Beneficiary
      tags:
        - Disburse
  /v1/payouts/beneficiary/{beneficiaryId}:
    delete:
      description: Delete a payout beneficiary from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/beneficiary#delete-beneficiary
      operationId: deleteBeneficiary
      parameters:
        - description: ID of the 'beneficiary' object. String starting with beneficiary_.
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
          explode: true
          in: path
          name: beneficiaryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      deleted:
                        description: Flag to indicate whether beneficiary deleted
                          or not
                        example: true
                        type: boolean
                      id:
                        description: Beneficiary token
                        example: beneficiary_008d839a9d5726ba014c3ccb21c59920
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Beneficiary deleted successfuly
        '500':
          description: Internal server error.
      summary: Delete Beneficiary
      tags:
        - Disburse
    get:
      description: "Retrieve details of a payout beneficiary. \n Note: The 'Retrieve\
        \ Beneficiary - individual' response includes additional fields for the 'ca_general_bank'\
        \ payout method. The 'Retrieve Beneficiary - company' response includes additional\
        \ fields for the 'us_ach_bank' payout method."
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/beneficiary#retrieve-beneficiary
      operationId: getBeneficiary
      parameters:
        - description: ID of the 'beneficiary' object. String starting with beneficiary_.
          example: beneficiary_008d839a9d5726ba014c3ccb21c59920
          explode: true
          in: path
          name: beneficiaryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Beneficiary'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Beneficiary retrieved successfuly
        '500':
          description: Internal server error.
      summary: Retrieve Beneficiary
      tags:
        - Disburse
  /v1/payouts/complete/{payoutToken}/{amount}:
    post:
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#complete-payout
      operationId: simulateCompletePayout
      parameters:
        - description: ID of the payout. String starting with 'payout_'.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: payoutToken
          required: true
          schema:
            type: string
        - description: The payout amount. Decimal, including the correct number of decimal places for the currency exponent, as defined in ISO 2417:2015.
          example: 10
          explode: true
          in: path
          name: amount
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The 'Retrieve Sender - individual' response includes additional
            fields for the 'ca_general_bank' payout method. The 'Retrieve Sender -
            company' response includes an additional field for the 'us_ach_bank' payout
            method.
        '500':
          description: Internal server error.
      summary: Complete the Payout
      tags:
        - Disburse
  /v1/payouts/confirm/{payoutToken}:
    post:
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#confirm-payout-with-fx
      operationId: confirmPayout
      parameters:
        - description: ID of the payout. String starting with 'payout_'.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: payoutToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The 'Retrieve Sender - individual' response includes additional
            fields for the 'ca_general_bank' payout method. The 'Retrieve Sender -
            company' response includes an additional field for the 'us_ach_bank' payout
            method.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_UPDATE_PAYOUT
                    message: "The request tried to update a payout, but the payout
                      was not found. The request was rejected. Corrective action:
                      For the 'payout' path parameter, use the ID of a valid payout,
                      a string starting with 'payout_'."
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_UPDATE_PAYOUT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Payout not found for given ID
        '500':
          description: Internal server error.
      summary: Confirm Payout that involves foreign exchange
      tags:
        - Disburse
  /v1/payouts/sender:
    post:
      description: 'Create a sender for use in payouts.

        The response provides a unique sender ID, which you can use in place of the
        sender object for Create Payout.

        Note: In addition to the required fields documented below, you must include
        all other sender fields listed in the response to Get Payout Required Fields,
        and you must conform to the regex provided.

        To create a sender that you can use with multiple payout methods, include
        all fields that are required by each payout method.

        The client is responsible for including all required fields.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sender#create-sender
      operationId: createSender
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company_name:
                  description: Name of the sender company. Relevant when entity_type
                    is company.
                  example: ABC
                  type: string
                country:
                  $ref: '#/components/schemas/Country'
                currency:
                  $ref: '#/components/schemas/Currency'
                entity_type:
                  $ref: '#/components/schemas/EntityType'
                first_name:
                  description: First name of the sebder. Relevant when entity_type
                    is individual.
                  example: Scott
                  type: string
                identification_type:
                  description: Type of identification document for the sender.
                  example: drivers_license
                  type: string
                identification_value:
                  description: Identification number on the document mentioned in
                    identification_type.
                  example: ANDSFS8974562
                  type: string
                last_name:
                  description: Last name of the sender. Relevant when entity_type
                    is individual.
                  example: Williams
                  type: string
              required:
                - country
                - currency
                - entity_type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Sender'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Sender Created Successfully.
        '500':
          description: Internal server error
      summary: Create Sender
      tags:
        - Disburse
  /v1/payouts/sender/{senderId}:
    delete:
      description: Delete a payout sender from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sender#delete-sender
      operationId: deletePayer
      parameters:
        - description: ID of the 'sender' object. String starting with sender_.
          example: sender_b9342620e3eb13164286485bbff9eb7b
          explode: true
          in: path
          name: senderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      deleted:
                        description: Flag to indicate whether sender deleted or not
                        example: true
                        type: boolean
                      id:
                        description: Sender token
                        example: sender_b9342620e3eb13164286485bbff9eb7b
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Sender deleted successfuly
        '500':
          description: Internal server error.
      summary: Delete Sender
      tags:
        - Disburse
    get:
      description: 'Note: The Retrieve Sender - individual response includes additional
        fields for the ca_general_bank payout method. The Retrieve Sender -
        company response includes an additional field for the us_ach_bank payout
        method.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sender#retrieve-sender
      operationId: getPayer
      parameters:
        - description: ID of the Sender object. String starting with 'sender_'.
          example: sender_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: senderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Sender'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The 'Retrieve Sender - individual' response includes additional
            fields for the 'ca_general_bank' payout method. The 'Retrieve Sender -
            company' response includes an additional field for the 'us_ach_bank' payout
            method.
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_SENDER
                    message: 'The request attempted an operation that requires a payout
                      sender, but the sender was not found. The request was rejected.
                      Corrective action: Use the ID of a valid sender.'
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_GET_SENDER
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Sender not found for given ID
        '500':
          description: Internal server error.
      summary: Retrieve details of a payout sender.
      tags:
        - Disburse
  /v1/payout_methods:
    get:
      description: Retrieve a list of payout method types that you can use when creating
        a payout. The response contains a list of objects. Each object includes a
        payout method type and its attributes.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-payout-method-types.html
      operationId: getPayoutMethodTypes
      parameters:
        - description: 'Filters the type of entity for the payer. One of the following: individual, company'
          example: company
          explode: true
          in: query
          name: sender_entity_type
          required: false
          schema:
            type: string
          style: form
        - description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2 code.
          example: US
          explode: true
          in: query
          name: beneficiary_country
          required: false
          schema:
            type: string
          style: form
        - description: Currency received by the beneficiary. Three-letter ISO 4217 code.
          example: USD
          explode: true
          in: query
          name: payout_currency
          required: false
          schema:
            type: string
          style: form
        - description: Currency that the sender is paying with. Three-letter ISO 4217
            code.
          example: USD
          explode: true
          in: query
          name: sender_currency
          required: false
          schema:
            type: string
          style: form
        - description: 'Country of the sender. Two-letter ISO 3166-1 ALPHA-2 code. Note: This field does not appear in the response.'
          example: US
          explode: true
          in: query
          name: sender_country
          required: false
          schema:
            type: string
          style: form
        - description: 'Filters the type of entity for the beneficiary. One of the following: individual, company'
          example: individual
          explode: true
          in: query
          name: beneficiary_entity_type
          required: false
          schema:
            type: string
          style: form
        - description: 'The category of payout method. One of the following: bank, card, cash, rapyd_ewallet, ewallet'
          example: bank
          explode: true
          in: query
          name: category
          required: false
          schema:
            type: string
          style: form
        - description: Indicates whether the payout can be canceled. Relevant when category
            is cash.
          explode: true
          in: query
          name: is_cancelable
          required: false
          schema:
            type: boolean
          style: form
        - description: Indicates whether the payout must be made at a specific physical
            location. Relevant when category is cash.
          explode: true
          in: query
          name: is_location_specific
          required: false
          schema:
            type: boolean
          style: form
        - description: Indicates whether the payout expires if not completed. Relevant
            when category is cash.
          explode: true
          in: query
          name: is_expirable
          required: false
          schema:
            type: boolean
          style: form
        - description:
            The name of a payout method in the list. The list begins with the record that was created next after the record with this payout method.
            Use this filter to get the next page of results. Relevant when ending_before
            is not used.
          explode: true
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
        - description: The name of a payout method in the list. The list ends with
            the last record that was created before the record with this payout method.
            Use this filter to get the previous page of results.
          explode: true
          in: query
          name: ending_before
          required: false
          schema:
            type: string
          style: form
        - description: 'The maximum number of payout methods to return. Range: 1-100. Default is 10.'
          example: 5
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/PayoutMethodType'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payout method types fetched successfuly
        '500':
          description: Internal server error.
      summary: List Payout Method Types
      tags:
        - Disburse
  /v1/payouts/{payoutId}:
    delete:
      description: 'The payout can be canceled unless its status is confirmation or
        completed.

        This method triggers the Payout Canceled webhook. This webhook contains the
        same information as the response.'
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#cancel-payout
      operationId: cancelPayout
      parameters:
        - description: ID of the payout. String starting with payout_.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: payoutId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payout canceled successfuly
        '500':
          description: Internal server error.
      summary: Cancel Payout
      tags:
        - Disburse
    get:
      description: Retrieve the details of a payout.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#retrieve-payout
      operationId: getPayout
      parameters:
        - description: ID of the payout. String starting with 'payout_'.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: payoutId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Payout object
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: ERROR_GET_PAYOUT
                    message: 'The request tried to retrieve a payout, but the payout
                      was not found. The request was rejected. Corrective action:
                      Use the ID of a valid payout.'
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: ERROR_GET_PAYOUT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request. Payout not found for given ID
        '500':
          description: Internal server error.
      summary: Retrieve Payout
      tags:
        - Disburse
    post:
      description: Change or modify a payout. This method triggers the Payout Updated
        webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/payout#update-payout
      operationId: updatePayout
      parameters:
        - description: ID of the payout. String starting with payout_.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          explode: true
          in: path
          name: payoutId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the payout.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Payout'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: payout updated successfuly
        '500':
          description: Internal server error.
      summary: Update Payout
      tags:
        - Disburse
  /v1/plans:
    get:
      description: Retrieve a list of all plans. Use the optional query parameters
        to filter the results. You can filter the results further by specifying one
        or more Plan fields as additional query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/plan#list-plans
      operationId: listPlans
      parameters:
        - description: The ID of the plan created after the last plan you want to retrieve.
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: number
          style: form
        - description: The maximum number of plans to return. Range 1-100. Default is
            10.
          example: 15
          explode: false
          in: query
          name: limit
          required: false
          schema:
            type: number
          style: form
        - description: The ID of the plan created before the first plan you want to
            retrieve.
          example: 10
          explode: false
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Plan'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List of plans,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Plans
      tags:
        - Collect
    post:
      description: Create a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/plan#create-plan
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              properties:
                aggregate_usage:
                  description: Determines which quantity is used to calculate the
                    pricing. Relevant when usage_type is metered. Default is sum.
                  type: string
                amount:
                  description: The amount to charge in the billing cycle. For a free
                    service, use 0. Relevant when billing_scheme is set to per_unit.
                    When the billing_scheme is set to tiered, set the amount in the
                    tiers array.
                  type: number
                billing_scheme:
                  description: Describes how to compute the price per billing period.
                    One of the following values - per_unit, tiered
                  type: string
                currency:
                  description: Three-letter ISO 4217 code for the currency used in
                    fields that represent monetary amounts. Uppercase.
                  type: string
                id:
                  description: Unique ID for this payment plan. English alphanumeric
                    characters and underscore. Limited to 44 characters. If the merchant
                    does not define an ID, Rapyd generates a string starting with
                    plan_.
                  type: string
                interval:
                  description: Specifies the units used in defining the billing cycle.
                  type: string
                interval_count:
                  description: Number of intervals in the billing cycle. Default is
                    1.
                  type: number
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                nickname:
                  description: Brief description of the pricing plan.
                  type: string
                product:
                  description: ID of the 'product' object that this plan is for. The
                    product must have type set to service.
                  type: string
                tiers:
                  description: Defines a tiered pricing structure. Array of objects.
                    Must be null when billing_scheme is set to per_unit.
                  type: string
                tiers_mode:
                  description: Determines the mode for calculating the total tiered
                    charge.
                  type: string
                transform_usage:
                  description: Defines the transformation that is applied to the reported
                    usage before the billed price is computed.
                  type: object
                trial_period_days:
                  description: Specifies the number of days before charges begin to
                    accrue. Use this parameter to define a free trial period for a
                    service.
                  type: number
                usage_type:
                  description: Determines whether the customer is billed when the
                    service is not actually used. One of the following values - metered,
                    licensed
                  type: string
              type: object
              required:
                - currency
                - product
                - interval
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Plan'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created plan,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Plan Item
      tags:
        - Collect
  /v1/plans/{plan_id}:
    delete:
      description: Delete a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/plan#delete-plan
      operationId: deletePlan
      parameters:
        - description: ID of the plan.
          example: plan_494eae8b99f697107d738
          in: path
          name: plan_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      deleted:
                        type: boolean
                      id:
                        description: ID of the plan
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Rapyd response with operation result, and plan id
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Delete Plan
      tags:
        - Collect
    get:
      description: Retrieve the details of a pricing plan for services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/plan#retrieve-plan
      operationId: retrievePlan
      parameters:
        - description: ID of the plan.
          example: plan_494eae8b99f697107d738
          in: path
          name: plan_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Plan'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The Plan,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve plan
      tags:
        - Collect
    post:
      description: Change or modify a pricing plan for services. You can update a
        plan's nickname or metadata.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/plan#update-plan
      operationId: updatePlan
      parameters:
        - description: ID of the plan.
          example: plan_494eae8b99f697107d738
          in: path
          name: plan_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                nickname:
                  description: Brief description of the pricing plan.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Plan'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The Plan after updated,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Plan
      tags:
        - Collect
  /v1/products:
    get:
      description: Retrieve a list of all products.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/product#list-products
      operationId: getProductsList
      parameters:
        - description: The ID of the products created after the last product you want
            to retrieve.
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: number
          style: form
        - description: The maximum number of products to return. Range 1-100. Default
            is 10.
          example: 15
          explode: false
          in: query
          name: limit
          required: false
          schema:
            type: number
          style: form
        - description: The ID of the product created before the first products you want
            to retrieve.
          example: 10
          explode: false
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Product'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List of products,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Products
      tags:
        - Collect
    post:
      description: Create goods or services.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/product#create-product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  description: Indicates whether the product is currently available
                    for purchase. Default is true.
                  type: boolean
                attributes:
                  description: Array of up to 5 alphanumeric strings defined by the
                    merchant. Each string defines the key in a key-value pair in the
                    'attributes' object in the corresponding 'sku' objects.
                  items:
                    type: string
                  type: array
                description:
                  description: Full text description of the product.
                  type: string
                id:
                  description: Unique string for identification of the product. Legal
                    input includes all the English alphanumeric characters and the
                    underscore (_) character. If the merchant does not define an ID,
                    Rapyd generates it with a string that starts with product_
                  type: string
                images:
                  description: An array of images. Each image is a string in Base64
                    encoding.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                name:
                  description: The name of the product or service that is displayed
                    to the customer.
                  type: string
                package_dimensions:
                  description: Describes the physical size and weight of the product.
                    Relevant when type is goods.
                  properties:
                    height:
                      type: number
                    length:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
                  type: object
                shippable:
                  description: Indicates whether the product is physically shipped
                    to the customer. Relevant when type is goods. Default is false.
                  type: boolean
                  example: false
                statement_descriptor:
                  description: A text description that appears in the customer's invoice.
                    Limited to 22 characters. Relevant when type is service.
                  type: string
                type:
                  description: One of the following - services, goods
                  enum:
                    - services
                    - goods
                  type: string
                unit_label:
                  description: A label that represents units of this product, such as seats, on customers’ invoices. Relevant when type is service.
                  type: string
              required:
                - name
                - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created Product,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Product
      tags:
        - Collect
  /v1/products/{products_id}:
    delete:
      description: Delete a product or service from the Rapyd platform. This action
        also deletes all associated plans.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/product#delete-product
      operationId: deleteProduct
      parameters:
        - description: ID of the product.
          example: product_0d9dc6be69c769560fe913f3b086d8ca
          in: path
          name: products_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      deleted:
                        type: boolean
                      id:
                        description: ID of the plan
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Rapyd response with operation result, and product id
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Delete Product
      tags:
        - Collect
    get:
      description: Retrieve details of a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/product#retrieve-product
      operationId: getProduct
      parameters:
        - description: ID of the product.
          example: product_0d9dc6be69c769560fe913f3b086d8ca
          in: path
          name: products_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The Product
        '400':
          content:
            application/json:
              schema:
                example:
                  status:
                    error_code: INVALID_PRODUCT
                    message: 'The request tried to perform an operation that requires a product, but the product was not found. The request was rejected. Corrective action: Use a valid product ID.'
                    operation_id: fbc7054e-4493-4f01-b62e-788f189f9c0f
                    response_code: INVALID_PRODUCT
                    status: ERROR
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Bad Request.
        '500':
          description: Internal server error.
      summary: Retrieve Product
      tags:
        - Collect
    post:
      description: Change or modify a product or service.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/product#update-product
      operationId: updateProduct
      parameters:
        - description: ID of the product.
          example: product_0d9dc6be69c769560fe913f3b086d8ca
          in: path
          name: products_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  description: Indicates whether the product is currently available
                    for purchase. Default is true.
                  type: boolean
                attributes:
                  description: Array of up to 5 alphanumeric strings defined by the
                    merchant. Each string defines the key in a key-value pair in the
                    'attributes' object in the corresponding 'sku' objects.
                  items:
                    type: string
                  type: array
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                name:
                  description: The name of the product or service that is displayed
                    to the customer.
                  type: string
                package_dimensions:
                  description: Describes the physical size and weight of the product.
                    Relevant when type is goods.
                  properties:
                    height:
                      type: number
                    length:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
                  type: object
                statement_descriptor:
                  description: A text description that appears in the customer's invoice.
                    Limited to 22 characters. Relevant when type is service.
                  type: string
                unit_label:
                  description: "A label that represents units of this product, such\
                    \ as seats, on customers\xE2\u20AC\u2122"
                  type: string
              required:
                - name
                - type
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created Product,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Product
      tags:
        - Collect
  /v1/rates/daily:
    get:
      description: Retrieve a daily rate for conversion of currencies in payments
        and payouts. Rapyd uses a snapshot of daily foreign exchange rates fetched
        at 9 PM UTC. The rate returned includes the FX markup fees.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/daily-rates#daily-rate-object
      operationId: getDailyRate
      parameters:
        - description: Determines the type of transaction that the currency exchange
            applies to. One of the following - payment, payout
          explode: true
          in: query
          name: action_type
          required: true
          schema:
            type: string
          style: form
        - description: Amount of the currency exchange transaction, in units of the
            fixed-side currency in Decimal.
          explode: true
          in: query
          name: amount
          required: false
          schema:
            format: decimal
            type: number
          style: form
        - description: Defines the currency purchased in the currency exchange transaction.
            Three-letter ISO 4217 code in Uppercase.
          explode: true
          in: query
          name: buy_currency
          required: true
          schema:
            type: string
          style: form
        - description: The date when the rate is applicable. Today or earlier. Format
            YYYY-MM-DD
          explode: true
          in: query
          name: date
          required: false
          schema:
            format: date
            type: string
          style: form
        - description: Indicates whether the rate is fixed for the currency defined
            by buy_currency or sell_currency. One of the following - buy, sell.
          explode: true
          in: query
          name: fixed_side
          required: false
          schema:
            type: string
          style: form
        - description: Defines the currency sold in the currency exchange transaction.
            Three-letter ISO 4217 code in Uppercase.
          explode: true
          in: query
          name: sell_currency
          required: true
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/DailyRate'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve fixed daily rate
      summary: Resource Methods
      tags:
        - General.Resources
  /v1/refunds:
    get:
      description: Retrieve a list of all refunds.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/refund#list-refunds
      operationId: allRefunds
      parameters:
        - description: The ID of the refund created after the last refund you want to
            retrieve. String starting with refund_.
          example: refund_dabd1608796554
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: string
          style: form
        - description: The maximum number of refunds to return. Range, 1-100. Default
            is 10.
          example: 12
          explode: false
          in: query
          name: limit
          required: false
          schema:
            type: string
          style: form
        - description: The ID of the refund created before the first refund you want
            to retrieve. String starting with refund_.
          example: refund_dabd1608796554
          explode: false
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Refund'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Refunds
      tags:
        - Collect
    post:
      description: Refund of a payment. The refund is credited against a specific
        payment. The money is returned to the payment method that was used for the
        payment, and the currency is the same as what was used in the payment. If
        the action of a third party is not required, this method triggers the Refund
        Completed webhook. This webhook contains the same information as the response.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/refund#create-refund
      operationId: requestTotal_createRefund
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: The amount of the refund. Decimal.
                  type: number
                currency:
                  description: The currency of the amount received by the original
                    payment source. Three-letter ISO 4217 code.
                  type: string
                ewallets:
                  description: ID of the wallet contact that the card is assigned
                    to. String starting with cont_.
                  items:
                    type: string
                  type: array
                merchant_reference_id:
                  description: ID defined by the client. Limited to 255 characters.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                payment:
                  description: ID of the Payment object that the refund is charged
                    against. String starting with payment_.
                  type: string
                reason:
                  description: Description of the reason for the refund.
                  type: string
              type: object
              required:
                - payment
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Refund
      tags:
        - Collect
  /v1/refunds/complete:
    post:
      description: Simulate the action of a third party that is required for completing
        the refund process. Relevant to sandbox. Use this method when a payment was
        made with a payment method such as cash, bank redirect or bank transfer, and
        the payment was completed by an action taken by the customer.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/refund#complete-refund
      operationId: simulateCompleteRefund
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: ID of the refund. String starting with refund_.
                  type: string
              required:
                - token
              type: object

      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Complete Refund
      tags:
        - Collect
  /v1/refunds/group_payments:
    post:
      description: Refund a group payment when the status of the group payment is
        closed. The refund is credited against a specific group payment. The money
        is returned to the payment methods that were used for the payment. If the
        action of a third party is not required, this method triggers the Refund Completed
        webhook for each payment method.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/group-payment#create-group-refund
      operationId: refundGroupPayment
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: The amount of the refund, in the currency of the group
                    payment. Decimal. If this parameter is omitted, the entire group
                    payment is refunded.
                  type: number
                group_payment:
                  description: ID of the group payment that the refund is charged
                    against. String starting with gp_.
                  type: string
              required:
                - group_payment
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      amount:
                        description: Amount of the group payment, in units defined
                          by currency. Decimal, including the correct number of decimal
                          places for the currency exponent, as defined in ISO 2417:2015.
                          If the amount is a whole number, use an integer and not
                          a decimal.
                        type: number
                      amount_to_replace:
                        description: Indicates the total amount of failed payments
                          that have not been replaced. Response only.
                        type: number
                      cancel_reason:
                        description: Reason for cancellation of the group payment.
                          Response only.
                        type: string
                      country:
                        description: Country where the payment methods are supported.
                          Two-letter ISO 3166-1 ALPHA-2 code. Response only.
                        type: string
                      currency:
                        description: Currency of the payments. Three-letter ISO 4217
                          code.
                        type: string
                      description:
                        description: Description of the group payment.
                        type: string
                      expiration:
                        description: End of the time allowed for customers to make
                          this payment, in Unix time. Response only.
                        type: number
                      id:
                        description: ID of the Group Payment object. String starting
                          with gp_.
                        type: string
                      merchant_reference_id:
                        description: Merchant-defined ID. Limited to 255 characters.
                        type: string
                      metadata:
                        description: A JSON object defined by the client.
                        type: object
                      payments:
                        items:
                          $ref: '#/components/schemas/Payment'
                        type: array
                      status:
                        description: Indicates the status of the group payment operation
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Group Refund
      tags:
        - Collect
  /v1/refunds/{refundId}:
    get:
      description: Retrieve the details of a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/refund#retrieve-refund
      operationId: refundByToken
      parameters:
        - description: ID of the 'refund' object you want to retrieve. String starting
            with refund_.
          example: refund_a09a2e16352f56a27f5937f87d0b8705
          explode: false
          in: path
          name: refundId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Refund
      tags:
        - Collect
    post:
      description: Change or modify the metadata in a refund object.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/refund#update-refund
      operationId: updateRefund
      parameters:
        - description: ID of the 'refund' object you want to retrieve. String starting
            with refund_.
          example: refund_a09a2e16352f56a27f5937f87d0b8705
          explode: false
          in: path
          name: refundId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  description: A JSON object defined by the client.
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Refund'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Refund
      tags:
        - Collect
  /v1/subscription_items:
    get:
      description: Retrieve a list of all subscription items for a subscription.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#list-subscription-items
      operationId: listSubscriptionItem
      parameters:
        - description: The ID of the subscription item created after the last subscription
            item you want to retrieve.
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: number
          style: form
        - description: The maximum number of subscription items to return. Range 1-100.
            Default is 10.
          example: 15
          explode: false
          in: query
          name: limit
          required: false
          schema:
            type: number
          style: form
        - description: The ID of the subscription item created before the first subscription
            item you want to retrieve.
          example: 10
          explode: false
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
        - description: ID of the subscription.
          example: sub_0de9c79c1e2beee09499dc8220493d59
          explode: false
          in: query
          name: subscription
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionItem'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List of subscriptions,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Subscription Items
      tags:
        - Collect
    post:
      description: Create a subscription item and add it to an existing subscription
        for recurring payment.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#create-subscription-item
      operationId: createSubscriptionItem
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                plan:
                  description: ID of the plan assigned to this subscription item.
                    Cannot be a plan that is already part of the subscription.
                  type: string
                prorate:
                  description: Determines whether the charge is prorated when a subscription
                    item is switched from one subscription to another in a billing
                    cycle.
                  type: boolean
                proration_date:
                  description: Indicates the date in the middle of the billing period
                    that is the start of the prorated charges.
                  type: number
                quantity:
                  description: The number of units of the service defined in the plan.
                  type: number
                subscription:
                  description: ID of the subscription that this item belongs to. String
                    starting with sub_.
                  type: string
              required:
                - plan
                - subscription
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SubscriptionItem'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Subscription Item
      tags:
        - Collect
  /v1/subscription_items/{subscriptionItemId}:
    delete:
      description: Delete a subscription item from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#delete-subscription-item
      operationId: deleteSubscriptionItem
      parameters:
        - description: ID of the subscription item. String starting with subi_.
          in: path
          name: subscriptionItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      deleted:
                        description: true if the item deleted successfully, else false.
                        type: boolean
                      id:
                        description: ID of the subscription item.
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Delete Subscription Item
      tags:
        - Collect
    get:
      description: Retrieve the details of a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#retrieve-subscription-item
      operationId: retrieveSubscriptionItem
      parameters:
        - description: ID of the subscription item. String starting with subi_.
          in: path
          name: subscriptionItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SubscriptionItem'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Subscription Item
      tags:
        - Collect
    post:
      description: Change or modify a subscription item.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/subscription-item#update-subscription-item
      operationId: updateSubscriptionItem
      parameters:
        - description: ID of the subscription item. String starting with subi_.
          in: path
          name: subscriptionItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                prorate:
                  description: Determines whether the charge is prorated when a subscription
                    item is switched from one subscription to another in a billing
                    cycle.
                  type: boolean
                proration_date:
                  description: Indicates the date in the middle of the billing period
                    that is the start of the prorated charges.
                  type: number
                quantity:
                  description: The number of units of the service defined in the plan.
                  type: number
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SubscriptionItem'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The created subscription,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Subscription Item
      tags:
        - Collect
  /v1/subscription_items/{subscriptionItemId}/usage_record_summaries:
    get:
      description: Retrieve a list of usage records for a subscription item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/usage-record#list-usage-records
      operationId: usageRecordSummaries
      parameters:
        - description: ID of the subscription item. String starting with subi_.
          example: subi_3682d7bce9339f7b7c9e4185c7d1486f
          in: path
          name: subscriptionItemId
          required: true
          schema:
            type: string
        - description: The maximum number of usage records that are returned. Range
            is 1-100. Default is 10.
          example: 15
          in: query
          name: limit
          required: false
          schema:
            type: number
          style: form
        - description: The latest date and time of the returned usage records. Format
            is in Unix time.
          in: query
          name: ending_before
          required: false
          schema:
            type: number
        - description: The earliest date and time of the returned usage records. Format
            is in Unix time.
          in: query
          name: starting_after
          required: false
          schema:
            type: number
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        id:
                          type: string
                        quantity:
                          description: The usage quantity for the specified date and
                            time (timestamp).
                          type: number
                        subscription_item:
                          description: ID of the subscription item.
                          type: string
                        timestamp:
                          description: Timestamp for the usage record in Unix time.
                          type: string
                      type: object
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The subscription after updated,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Usage Record
      tags:
        - Collect
  /v1/subscription_items/{subscriptionItemId}/usage_records:
    post:
      description: Create a usage record or update an existing usage record where
        its unique identifier is composed of timestamp and subscription_item
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/usage-record#create-usage-record
      operationId: createSubscriptionItemUsageRecord
      parameters:
        - description: ID of the subscription item. String starting with subi_.
          example: subi_3682d7bce9339f7b7c9e4185c7d1486f
          in: path
          name: subscriptionItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Determines how the quantity is defined in the usage
                    record.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                quantity:
                  description: The usage quantity for the specified date and time
                    (timestamp).
                  type: number
                timestamp:
                  description: Timestamp for the usage record in Unix time.
                  type: number
              required:
                - quantity
                - timestamp
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      id:
                        type: string
                      quantity:
                        description: The usage quantity for the specified date and
                          time (timestamp).
                        type: number
                      subscription_item:
                        description: ID of the subscription item.
                        type: string
                      timestamp:
                        description: Timestamp for the usage record in Unix time.
                        type: string
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: The subscription after updated,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Usage Record
      tags:
        - Collect
  /v1/subscriptions/discount/{discountId}:
    get:
      description: 'Retrieve a discount

        '
      externalDocs:
        description: Learn more about discount operations provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/discounts#retrieve-discount-subscription
      operationId: getSubscriptionDiscountById
      parameters:
        - description: discount Id
          in: path
          name: discountId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/SubscriptionDiscount'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: get Discount details By Discount Id
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve an discount
      tags:
        - Collect
  /v1/skus/{skuId}:
    get:
      tags:
        - Collect
      summary: Retrieve SKU.
      description: Retrieve the details of an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sku#retrieve-sku
      operationId: retrieveSKU
      parameters:
        - name: skuId
          in: path
          description: ID of the 'sku' object. String starting with sku_.
          required: true
          schema:
            type: string
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        '200':
          description: The requested SKU object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/Sku'
    post:
      tags:
        - Collect
      summary: Retrieve SKU.
      description: Change or modify an SKU.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sku#update-sku
      operationId: updateSKU
      parameters:
        - name: skuId
          in: path
          description: ID of the 'sku' object. String starting with sku_.
          required: true
          schema:
            type: string
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  $ref: '#/components/schemas/Currency'
                inventory:
                  type: object
                  description: inventory object {quantity, type, value}
                  properties:
                    type:
                      type: string
                      enum:
                        - finite
                        - infinite
                        - bucket
                    quantity:
                      type: integer
                    value:
                      type: string
                      enum:
                        - in_stock
                        - limited
                        - out_of_stock
                price:
                  description: The amount of the price. Decimal.
                  type: number
                product:
                  description: ID of the product that this SKU relates to. The type field of the product must be set to goods.
                  type: string
                active:
                  description: Indicates whether the product is currently available for purchase.
                  type: boolean
                attributes:
                  description: Array of alphanumeric key-value pairs defined by the merchant. Each key must match a string in the "attributes" list of the corresponding "product" object.
                  type: array
                  items:
                    type: string
                image:
                  description: URL of image associated with the product.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                package_dimensions:
                  description: Physical attributes of the SKU item. Object containing the following fields - height, length, weight, width
                  type: object
                  properties:
                    length:
                      type: number
                    height:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
      responses:
        '200':
          description: The requested SKU object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/Sku'
    delete:
      tags:
        - Collect
      summary: Delete SKU.
      description: Delete an SKU from the Rapyd platform.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sku#delete-sku
      operationId: deleteSKU
      parameters:
        - name: skuId
          in: path
          description: ID of the 'sku' object. String starting with sku_.
          required: true
          schema:
            type: string
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
      responses:
        '200':
          description: The SKU deletion result
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      deleted:
                        type: boolean
  /v1/skus:
    get:
      tags:
        - Collect
      summary: List SKUs.
      description: Retrieve a list of all SKUs.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sku#list-skus
      operationId: listSKU
      parameters:
        - name: active
          in: query
          description: Determines whether the query returns active SKUs or inactive SKUs. Default is true.
          required: false
          style: form
          explode: false
          schema:
            type: boolean
          example: true
        - name: starting_after
          in: query
          description: The ID of the SKU created before the first SKU you want to retrieve.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: ending_before
          in: query
          description: The ID of the SKU created after the last SKU you want to retrieve.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: limit
          in: query
          description: The maximum number of SKUs to return. Range 1-100. Default is 10.
          required: false
          style: form
          explode: false
          schema:
            type: number
          example: 50
      responses:
        '200':
          description: List of SKUs,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sku'
    post:
      tags:
        - Collect
      summary: Create SKU
      description: Create an SKU and attach it to a product.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/sku#create-sku
      operationId: createSKU
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [currency, inventory, price, product]
              properties:
                currency:
                  $ref: '#/components/schemas/Currency'
                inventory:
                  type: object
                  description: inventory object {quantity, type, value}
                  properties:
                    type:
                      type: string
                      enum:
                        - finite
                        - infinite
                        - bucket
                    quantity:
                      type: integer
                    value:
                      type: string
                      enum:
                        - in_stock
                        - limited
                        - out_of_stock
                price:
                  description: The amount of the price. Decimal.
                  type: number
                product:
                  description: ID of the product that this SKU relates to. The type field of the product must be set to goods.
                  type: string
                active:
                  description: Indicates whether the product is currently available for purchase.
                  type: boolean
                attributes:
                  description: Array of alphanumeric key-value pairs defined by the merchant. Each key must match a string in the "attributes" list of the corresponding "product" object.
                  type: array
                  items:
                    type: string
                image:
                  description: URL of image associated with the product.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                package_dimensions:
                  description: Physical attributes of the SKU item. Object containing the following fields - height, length, weight, width
                  type: object
                  properties:
                    length:
                      type: number
                    height:
                      type: number
                    weight:
                      type: number
                    width:
                      type: number
      responses:
        '200':
          description: Created SKU,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    $ref: '#/components/schemas/Sku'
  /v1/ewallets:
    post:
      description: Create a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-wallet.html
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Contact'
                    total_count:
                      type: number
                    has_more:
                      type: boolean
                    url:
                      type: string
                ewallet_reference_id:
                  description: Rapyd Wallet ID defined by the customer or end user.
                    Must be unique.
                  type: string
                first_name:
                  description: First name of the Rapyd Wallet owner.
                  type: string
                last_name:
                  description: Last name of the Rapyd Wallet owner.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                type:
                  description: Type of wallet, company or person. Default is person.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Ewallet'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Created Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Create Wallet
      tags:
        - eWallets
    get:
      tags:
        - eWallets
      summary: List eWallets.
      description: Retrieve a list of Rapyd Wallets.
        You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallets.html
      operationId: getUsers
      parameters:
        - name: phone_number
          in: query
          description: Phone number of the Rapyd Wallet in E.164 format.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: email
          in: query
          description: Email address of the wallet owner.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: ewallet_reference_id
          in: query
          description: Wallet ID defined by the customer or end user.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: page_number
          in: query
          description: Page number to retrieve. If page_number is not specified, page 1 is retrieved.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: page_size
          in: query
          description: Number of results per page.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: type
          in: query
          description: Type of wallet - company, person, client.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: min_balance
          in: query
          description: ''
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: currency
          in: query
          description: ''
          required: false
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: List of eWallets,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ewallet'
        '400':
          description: bad input parameter
  /v1/ewallets/{ewalletToken}:
    post:
      description: Change or modify a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/update-wallet.html
      operationId: updatedUser
      parameters:
        - description: ID of the wallet. String starting with ewallet_.
          in: path
          name: ewalletToken
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ewallet_reference_id:
                  description: Rapyd Wallet ID defined by the customer or end user.
                    Must be unique.
                  type: string
                first_name:
                  description: First name of the Rapyd Wallet owner.
                  type: string
                last_name:
                  description: Last name of the Rapyd Wallet owner.
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Ewallet'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Created Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Update Wallet
      tags:
        - eWallets
    delete:
      description: Delete a Rapyd Wallet.
        Use this method when the wallet has never been used.
        This method triggers the Wallet Deleted webhook. This webhook contains the same information as the response.
      operationId: deleteUser
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/delete-wallet.html
      parameters:
        - description: ID of the wallet. String starting with ewallet_.
          in: path
          name: ewalletToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Wallet was deleted.
        '400':
          description: bad input parameter
      summary: Delete a Wallet.
      tags:
        - eWallets
    get:
      description: Retrieve the details of a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet.html
      operationId: getUser
      parameters:
        - description: ID of the wallet. String starting with ewallet_.
          example: ewallet_95feaa629caa5ef64c49e5c24b29171d
          explode: false
          in: path
          name: ewalletToken
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Ewallet'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve the details of a Rapyd Wallet.
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Wallet
      tags:
        - eWallets
  /v1/ewallets/{ewalletToken}/statuses/{status}:
    post:
      description: Change Wallet Status
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet
      operationId: updateEwalletStatus
      parameters:
        - description: ID of the Rapyd Wallet. String starting with ewallet_. Required when phone number is not used.
          in: path
          name: ewalletToken
          required: true
          schema:
            type: string
        - description: >
            Status of the wallet. One of the following: enable, disable, close.
            disable - Change to disabled status (DIS).
            close - Close the wallet. Changes the status to closed (CLO).
            enable - Change to active status (ACT).
          in: path
          name: status
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
              - close
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Operations status
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Change Wallet status
      tags:
        - eWallets
  /v1/ewallets/{walletId}/account/limits:
    post:
      description: Set the maximum balance limit or the minimum balance threshold
        for an existing wallet account.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/build-with-rapyd/reference/wallet-transaction#set-wallet-account-limit
      operationId: setAccountLimit
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: walletId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account_id:
                  description: The ID of the account within the wallet.
                  type: string
                amount:
                  description: The amount of the limit.
                  type: string
                currency:
                  description: Three-letter ISO 4217 code for the currency of an existing
                    account.
                  type: string
                type:
                  description: The limit type.
                  type: string
              type: object
              required:
                - currency
                - type
                - amount
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Account'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List Contacts for a Rapyd Wallet Accounts,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Set Wallet Account Limit
      tags:
        - eWallets
    delete:
      description: Delete a limit on a wallet account.
      operationId: removeAccountLimit
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: walletId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account_id:
                  description: The ID of the account within the wallet.
                  type: string
                currency:
                  description: Three-letter ISO 4217 code for the currency of an existing
                    account.
                  type: string
                type:
                  description: The limit type.
                  type: string
              type: object
              required:
                - type
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                type: object
          description: coupon was deleted
        400:
          description: bad input parameter
        500:
          description: Internal server error.
      summary: Delete a coupon from the Rapyd platform
      tags:
        - Collect
  /v1/verify/applications/types/country/{country}:
    get:
      summary: List Rapyd Verify Application Types.
      description: Retrieve a List types of identity verification applications by country.
        You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-rapyd-verify-application-types.html
      operationId: getApplicationTypesByCountry
      parameters:
        - name: country
          in: path
          description: Two-letter ISO 3166-1 ALPHA-2 code for the country. Uppercase.
          required: true
          schema:
            $ref: '#/components/schemas/Country'
      responses:
        '200':
          description: List types of identity verification applications by country.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      properties:
                        application_type:
                          description: Code for the type of application. String starting with typ_.
                          type: string
                        country:
                          description: The country where the company is domiciled. Two-letter ISO 3166-1 ALPHA-2 code. The hosted application displays the country as the default setting.
                          $ref: '#/components/schemas/Country'
                        entity_type:
                          description: Type of business entity.
                          $ref: '#/components/schemas/EntityTypeVerify'
      tags:
        - Verify
  /v1/verify/applications/status/{application}:
    get:
      summary: Retrieve Status of Rapyd Verify Application
      description: Retrieve the status of an application for verification of identity.
        You can filter the list with query parameters.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-status-of-rapyd-verify-application.html
      operationId: getApplicationStatus
      parameters:
        - name: application
          in: path
          description: ID of the application. String starting with app_.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List types of identity verification applications by country.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - NEW
                          - DON
                          - EXP
      tags:
        - Verify
  /v1/ewallets/{walletId}/accounts:
    get:
      description: Retrieve details of the balances in a Rapyd Wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-wallet-balances.html
      operationId: getUserAccounts
      parameters:
        - description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_
          example: ewallet_16feaaa27c852f30214dd7b3b359e88c
          explode: false
          in: path
          name: walletId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Account'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List accounts related to the Rapyd Wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Retrieve Wallet Balances
      tags:
        - eWallets
  /v1/ewallets/{walletId}/transactions:
    get:
      description: Retrieve a list of all transactions related to a wallet.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-wallet-transactions.html
      operationId: getUserTransactions
      parameters:
        - description: ID of the wallet. String starting with ewallet_.
          example: ewallet_95feaa629caa5ef64c49e5c24b29171d
          explode: false
          in: path
          name: walletId
          required: true
          schema:
            type: string
          style: simple
        - description: The updated wallet balance after successful completion of the
            transaction.
          example: 3422
          explode: false
          in: query
          name: balance
          required: false
          schema:
            type: number
          style: form
        - description: Three-letter ISO 4217 code for the currency of the transactions.
            Uppercase.
          example: 1608796554
          explode: false
          in: query
          name: currency
          required: false
          schema:
            type: string
          style: form
        - description: Timestamp of the last transaction or later, in Unix time.
          example: 1000
          explode: false
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: The ID of the wallet transaction created after the last wallet
            transaction you want to retrieve. String starting with wt_.
          example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
          explode: false
          in: query
          name: ending_before
          required: false
          schema:
            type: string
          style: form
        - description: Page number to retrieve.
          example: 23
          explode: false
          in: query
          name: page_number
          required: false
          schema:
            type: string
          style: form
        - description: Number of results per page.
          example: 20
          explode: false
          in: query
          name: page_size
          required: false
          schema:
            type: string
          style: form
        - description: Timestamp of the first transaction or earlier, in Unix time.
          example: 1608796554
          explode: false
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: The ID of the wallet transaction created before the first wallet
            transaction you want to retrieve. String starting with wt_
          example: wt_dc03d2d4d73bbdfb30cc0def279d9ed9
          explode: false
          in: query
          name: starting_after
          required: false
          schema:
            type: string
          style: form
        - description: Type of transaction.
          example: payout_funds_in
          explode: false
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/EwalletTransactionDetails'
                    type: array
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: List of all transactions related to a wallet,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: List Wallet Transactions
      tags:
        - eWallets
  /v1/ewallets/{walletId}/transactions/{transactionId}:
    get:
      description: Retrieve the details of a wallet transaction.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/get-details-of-wallet-transaction.html
      operationId: getUserTransactionDetails
      parameters:
        - description: ID of the wallet. String starting with ewallet_.
          example: ewallet_95feaa629caa5ef64c49e5c24b29171d
          explode: false
          in: path
          name: walletId
          required: true
          schema:
            type: string
          style: simple
        - description: ID of the transaction, from the response to List Wallet Transactions.
            String starting with wt_.
          example: wt_8029af385b9614ac6e70f44aea3383b8
          explode: false
          in: path
          name: transactionId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/EwalletTransactionDetails'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve the details of a wallet transaction,
        '400':
          description: bad input parameter
        '500':
          description: Internal server error.
      summary: Get Details of Wallet Transaction
      tags:
        - eWallets
  /v1/verify/applications/hosted:
    post:
      description: >
        Create an application for Rapyd Verify where the client (applicant) provides information directly to Rapyd.
        After the applicant submits the application on the hosted page, Rapyd verifies the information. When the status of the application changes, Rapyd sends you a webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/create-rapyd-verify-application.html
      operationId: createHostedApplicationToken
      requestBody:
        content:
          application/json:
            schema:
              properties:
                application_type:
                  description: Code for the type of application.
                  type: string
                  x-note: If you do not specify application_type, the application is not created until the applicant selects an application type and saves it.
                country:
                  description: The country where the company is domiciled. Two-letter ISO 3166-1 ALPHA-2 code. The hosted application displays the country as the default setting.
                  type: string
                rapyd_entity_token:
                  description: The ID of the Rapyd wallet of the company. String starting with ewallet_.
                  type: string
                  example: ewallet_ef84c580177dbfc4293b1cf73c73fc77
                phone_number:
                  description: The phone number of the applicant. This is the phone number where an authentication code is sent. Must have a leading plus sign (+).
                  type: string
                metadata:
                  description: A JSON object defined by the client.
                  type: object
                client_reference_id:
                  description: ID defined by the client. Limited to 255 characters.
                  type: string
                cancel_url:
                  description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                  type: string
                complete_url:
                  description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
                  type: string
              type: object
              required:
                - country
                - phone_number
                - rapyd_entity_token
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/VerifyHostedAppResponse"
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Hosted application details.
      summary: Create Rapyd Verify Application
      tags:
        - Verify
  /v1/verify/applications/hosted/{verifyAppId}:
    get:
      description: Retrieve Rapyd Verify Application
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-rapyd-verify-application.html
      operationId: getHostedApplicationByToken
      parameters:
        - description: ID of the Rapyd Verify application. String starting with happ_.
          in: path
          name: verifyAppId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      token:
                        description: ''
                        example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
                        type: string
                      application_token:
                        description: ''
                        type: string
                      country:
                        description: ''
                        type: string
                      rapyd_entity_token:
                        description: ''
                        type: string
                      client_reference_id:
                        description: ''
                        type: string
                      cancel_url:
                        description: ''
                        type: string
                      complete_url:
                        description: ''
                        type: string
                      phone_number:
                        description: ''
                        type: string
                      application_level:
                        description: ''
                        type: number
                        enum:
                          - 1
                          - 2
                      sell_type:
                        description: ''
                        type: string
                      business_industry:
                        description: ''
                        type: string
                      application_type:
                        description: ''
                        properties:
                          application_type:
                            description: ''
                            type: string
                          entity_type:
                            description: ''
                            type: string
                          country:
                            description: ''
                            type: string
                        type: object
                      organization_details:
                        description: ''
                        properties:
                          merchant_color:
                            description: ''
                            type: string
                          merchant_website:
                            description: ''
                            type: string
                          merchant_logo:
                            description: ''
                            type: string
                          merchant_design:
                            description: ''
                            type: string
                          merchant_language:
                            description: ''
                            type: string
                          merchant_alias:
                            description: ''
                            type: string
                          merchant_customer_support:
                            description: ''
                            properties:
                              url:
                                description: ''
                                type: string
                              email:
                                description: ''
                                type: string
                              phone_number:
                                description: ''
                                type: string
                            type: object
                        type: object
                      renew_result:
                        description: ''
                        properties:
                          redirect_to_app_type_page:
                            description: ''
                            type: boolean
                          need_to_renew:
                            description: ''
                            type: boolean
                        type: object
                    type: object
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Hosted application details.
      summary: Create Rapyd Verify Application
      tags:
        - Verify
  /v1/webhooks:
    get:
      tags:
        - General.Resources
      summary: List Webhooks.
      description: Retrieve a list of all webhooks that were sent
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/list-webhooks.html
      operationId: getWebhooks
      parameters:
        - name: from_created_at
          in: query
          description: The earliest date and time when the object was created, in Unix time (seconds).
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: limit
          in: query
          description: 'The maximum number of objects to return. Range: 1-1000.'
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          style: form
          explode: false
          schema:
            type: number
        - name: status
          in: query
          description: 'The status of the webhook. One of the following values: *NEW - The webhook was created and has not yet been sent successfully. *RET - The webhook was resent. *CLO - The webhook was sent successfully. *ERR - Attempts were made to send the webhook, but the maximum number of retries was reached. The automatic retry process failed. The webhook was not sent.'
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: type
          in: query
          description: The type of webhook.
          required: false
          style: form
          explode: false
          schema:
            type: string
        - name: to_created_at
          in: query
          description: The latest date and time when the object was created, in Unix time (seconds).
          required: false
          style: form
          explode: false
          schema:
            type: number
      responses:
        '200':
          description: List of Webhooks,
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
  /v1/webhooks/{webhookId}:
    post:
      description: Resend a webhook that was not sent successfully.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/resend-webhook.html
      operationId: resendWebhookByToken
      parameters:
        - description: The webhook ID. String starting with wh_.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Resend a webhook that was not sent successfully.
      summary: Use List Webhooks to find the IDs of webhooks. You can resend a webhook that is in status ERR.
      tags:
        - General.Resources
    get:
      description: Retrieve the details of a Webhook.
      externalDocs:
        description: Learn more about details provided by this API
        url: https://docs.rapyd.net/en/retrieve-webhook.html
      operationId: getWebhookByToken
      parameters:
        - description: ID of the webhook. String starting with wh_.
          example: wh_e8385a164607ed0867e93f1a786f806b
          explode: false
          in: path
          name: webhookId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Webhook'
                  status:
                    $ref: '#/components/schemas/Status'
                type: object
          description: Retrieve a webhook.
      summary: Use List Webhooks to find the IDs of webhooks.
      tags:
        - General.Resources
components:
  schemas:
    Account:
      properties:
        alias:
          description: Three-letter ISO 4217 code for the currency of the account.
          type: string
        balance:
          description: Available funds in the account.
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          description: ID of the account. UUID
          type: string
        limit:
          type: string
        limits:
          items:
            $ref: '#/components/schemas/Limit'
          type: array
        on_hold_balance:
          description: Amount in the on-hold balance of the account.
          type: number
        received_balance:
          description: Amount of escrow funds in the account.
          type: number
        reserve_balance:
          description: Amount in the reserve balance of the account.
          type: number
      type: object
    Address:
      description: address associated with this specific Rapyd entity Payment/Customer
        etc...
      properties:
        canton:
          description: Name of the canton administrative subdivision, as used in banking
          type: string
        city:
          description: City name portion of the address. Required for issuance of
            a card to an eWallet contact
          type: string
        country:
          $ref: '#/components/schemas/Country'
        created_at:
          description: Time of creation of the payment, in Unix time. Response only.
          type: number
        district:
          description: Name of the district administrative subdivision, as used in
            banking
          type: string
        id:
          description: ID of the Address object. String starting with address_
          type: string
        line_1:
          description: Line 1 of the address, such as a building number and street
            name
          type: string
        line_2:
          description: Line 2 of the address, such as a suite or apartment number,
            or the name of a named building
          type: string
        line_3:
          description: Line 3 of the address
          type: string
        metadata:
          description: A JSON object defined by the client
          type: object
        name:
          description: The name of a contact person or an "in care of" person at this
            address
          type: string
        phone_number:
          description: Phone number associated with this specific address in E.164
            format. Must be unique
          type: string
        state:
          type: string
        zip:
          description: Postal code portion of the address
          type: string
    AddressRequest:
      properties:
        canton:
          description: Name of the canton administrative subdivision, as used in banking
          type: string
        city:
          description: City name portion of the address. Required for issuance of
            a card to an eWallet contact
          type: string
        country:
          $ref: '#/components/schemas/Country'
        district:
          description: Name of the district administrative subdivision, as used in
            banking
          type: string
        line_1:
          description: Line 1 of the address, such as a building number and street
            name
          type: string
        line_2:
          description: Line 2 of the address, such as a suite or apartment number,
            or the name of a named building
          type: string
        line_3:
          description: Line 3 of the address
          type: string
        metadata:
          description: A JSON object defined by the client
          type: object
        name:
          description: The name of a contact person or an "in care of" person at this
            address
          type: string
        phone_number:
          description: Phone number associated with this specific address in E.164
            format. Must be unique
          type: string
        state:
          type: string
        zip:
          description: Postal code portion of the address
          type: string
    AttemptItem:
      properties:
        error:
          description: Error message received from the configured webhook destination.
          type: string
        http_status_code:
          description: HTTP status code returned by the configured webhook destination.
          type: number
        http_response_body:
          description: Body of the HTTP response from the configured webhook destination.
          type: string
        http_response_headers:
          description: Headers of the HTTP response from the configured webhook destination, with the value received.
          type: object
      type: object
    PaymentAmountRangePerCurrency:
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      type: array
      items:
        properties:
          maximum_amount:
            description: Maximum amount supported by this payout method for the indicated
              currency. Decimal number.
            type: number
          minimum_amount:
            description: Minimum amount supported by this payout method for the indicated
              currency. Decimal number.
            type: number
          currency:
            $ref: '#/components/schemas/Currency'
    PayoutAmountRangePerCurrency:
      description: Indicates the amount range for the payment method's currencies.
        Each object contains the following fields:* currency - Three-letter ISO 4217
        format of currency* maximum_amount - The maximum payment amount* minimum_amount
        - The minimum payment amount
      type: array
      items:
        properties:
          maximum_amount:
            description: Maximum amount supported by this payout method for the indicated
              currency. Decimal number.
            type: number
          minimum_amount:
            description: Minimum amount supported by this payout method for the indicated
              currency. Decimal number.
            type: number
          payout_currency:
            $ref: '#/components/schemas/Currency'
    BinDetails:
      description: Bank Identification Number (BIN) details. Read-only. Object containing
        the following fields - * bin_number - BIN number * country - The two-letter
        ISO 3166-1 ALPHA-2 code for the country. Uppercase. * funding - Type of card
        funding. One of the following [credit, debit, prepaid, unknown] * bank - Name
        of the issuing bank. Relevant to cards
      properties:
        brand:
          type: string
        bin_number:
          type: string
        type:
          type: string
        issuer:
          type: string
        country:
          $ref: '#/components/schemas/Country'
        level:
          type: string
      type: object
    Beneficiary:
      type: object
      properties:
        aba:
          description: American Bankers Association routing transit number. United States.
          type: string
        account_number:
          description: The person's account number.
          type: string
        ach_code:
          description: Automated Clearing House (ACH) code.
          type: string
        additional_data:
          description: Additional data required by the payout method. Object..
          type: object
        additional_last_name:
          description: The person's second last name.
          type: string
        address:
          description: Street and number portion of the person's address.
          example: 23 NY, US
          type: string
        bank_account_holder_name:
          description: Name of the account holder.
          type: string
        bank_account_type:
          description: Type of bank account, such as checking or savings.
          type: string
        bank_address:
          description: Street and number portion of the bank's address.
          type: string
        bank_branch_code:
          description: Identifier for the bank branch.
          type: string
        bank_branch_name:
          description: Name of the bank branch.
          type: string
        bank_city:
          description: City portion of the bank's address.
          type: string
        bank_code:
          description: Domestic identifier of the bank.
          example: CNFC120452
          type: string
        bank_country:
          description: Two-letter ISO 3166-1 ALPHA-2 code for the bank's country.
          type: string
        bank_name:
          description: Name of the bank.
          example: Central Bank
          type: string
        bank_province:
          description: State or province portion of the bank's address.
          type: string
        beneficiary_bic_local:
          description: NA.
          type: string
        beneficiary_relationship:
          description: Relationship between the sender and the beneficiary.
          example: Friend
          type: string
        bic_swift:
          description: BIC (SWIFT) code for the bank account.
          example: 12345678XXX
          type: string
        bsb_code:
          description: Bank State Branch code for Australia.
          type: string
        card_expiration_month:
          description: "The card\xE2\u20AC\u2122s expiration month."
          type: string
        card_expiration_year:
          description: "The card\xE2\u20AC\u2122s expiration year."
          type: string
        card_number:
          description: The card number.
          type: string
        category:
          $ref: '#/components/schemas/Category'
        city:
          description: City portion of the address.
          example: New York
          type: string
        clabe:
          description: Standardized bank code for Mexico.
          type: string
        cnaps:
          description: China National Advanced Payments System (CNAPS) code number.
          type: string
        company_name:
          description: Name of the beneficiary company. Relevant when entity_type
            is company.
          example: Rapyd
          type: string
        confirmation_required:
          description: Indicates whether the beneficiary must respond to accept or
            decline a payout. Default is false. Relevant to the rapyd_ewallet payout
            method type
          type: boolean
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        date_of_birth:
          description: The person's date of birth.
          type: string
        date_of_incorporation:
          description: Date of incorporation of the corporation.
          type: string
        default_payout_method_type:
          description: The type of payout method for the beneficiary. The two-letter
            prefix must match the beneficiary country code.
          type: string
        email:
          description: The person's email address.
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        ewallet:
          description: ID of the wallet that the money is transferred to. String starting
            with ewallet_. Relevant to payout to Rapyd Wallet.
          type: string
        first_name:
          description: First name of the beneficiary. Relevant when entity_type is
            individual.
          example: John
          type: string
        iban:
          description: International Bank Account Number.
          example: 12873045315519
          type: string
        id:
          description: ID of the 'beneficiary' object. String starting with beneficiary_.
            Response only.
          example: beneficiary_8ba699483c80b7fb9f7e658be3275703
          type: string
        id_date_of_issue:
          description: The date of issuance of the person's identification document.
          example: 27/10/2019
          type: string
        id_issue_authority:
          description: The government agency that issued the person's identification
            document.
          example: Indian Government
          type: string
        id_issue_location:
          description: The location where the person's identification document was
            issued.
          example: INDIA
          type: string
        identification_type:
          description: 'Type of identification document for the beneficiary. When
            entity_type is company, this field must be company_registered_number.

            When entity_type is individual, one of the following values: * drivers_license
            * identification_id * international_passport * residence_permit* social_security
            * work_permit

            '
          example: drivers_license
          type: string
        identification_value:
          description: identification number on the document mentioned in identification_type.
          example: AYKI86547930
          type: string
        ifsc:
          description: Indian Financial System Code for a bank branch.
          type: string
        issuer_code:
          description: NA.
          type: string
        last_name:
          description: Last name of the beneficiary. Relevant when entity_type is
            individual.
          example: Doe
          type: string
        merchant_reference_id:
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
          example: GHY-0YU-HUJ-POI
          type: string
        middle_name:
          description: The person's middle name.
          type: string
        mobile_number:
          description: Mobile phone number in E.164 format.
          type: string
        name:
          description: The person's full name.
          example: John Doe
          type: string
        nationality:
          description: The person's nationality.
          example: Indian
          type: string
        payment_type:
          description: 'Additional classification of the type of payment, as required
            by the bank. Possible values: priority , regular'
          type: string
        phone_country_code:
          description: The country code of the person's phone.
          example: 1
          type: string
        phone_number:
          description: Phone number in E.164 format.
          type: string
        postcode:
          description: Postal code portion of the address.
          example: 110004
          type: string
        province:
          description: Province portion of the address.
          type: string
        purpose_code:
          description: Purpose of the transaction.
          type: string
        routing_code_type_1:
          description: NA.
          type: string
        routing_code_type_2:
          description: NA.
          type: string
        routing_code_type_3:
          description: NA.
          type: string
        routing_code_value_1:
          description: NA.
          type: string
        routing_code_value_2:
          description: NA.
          type: string
        routing_code_value_3:
          description: NA.
          type: string
        sort_code:
          description: Routing number for the UK.
          type: string
        state:
          description: State portion of the address.
          example: New York
          type: string
        statement_narrative:
          description: Additional description suitable for a customer transaction
            statement.
          type: string
        suburb:
          description: District of the sender's or beneficiary's city.
          type: string
        tax_id:
          description: Tax identification number.
          example: AIYPK06263
          type: string
        vpa:
          description: Virtual Payment Address.
          type: string
    Category:
      enum:
        - bank
        - card
        - cash
        - ewallet
        - rapyd_ewallet
        - bank_redirect
        - bank_transfer
      type: string
    CardIssuing:
      type: object
      properties:
        activated_at:
          description: Time that the card was activated, in Unix time. Response only.
          type: number
        assigned_at:
          description: Time that the card was assigned to a cardholder, in Unix time.
            Response only.
          type: number
        blocked_reason:
          description: Reason for blocking the card.
          type: string
        card_id:
          description: ID of the card. String starting with card_.
          type: string
        card_program:
          description: ID of the card program that the card is issued from. String starting with cardprog_.
          type: string
        country_iso_alpha_2:
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code. Response only.
          type: string
        created_at:
          description: Time of creation of the issued card object, in Unix time. Response
            only.
          type: number
        ewallet_contact:
          $ref: '#/components/schemas/Contact'
        id:
          description: ID of the Issued Card object. String starting with ci_.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        public_details:
          description: Details of the issued card.
          type: object
        status:
          description: Status of the card
          type: string
        card_tracking_id:
          description: Reserved
          type: string
    CardIssuingMasked:
      type: object
      properties:
        activated_at:
          description: Time that the card was activated, in Unix time. Response only.
          type: number
        assigned_at:
          description: Time that the card was assigned to a cardholder, in Unix time.
            Response only.
          type: number
        blocked_reason:
          description: Reason for blocking the card.
          type: string
        card_id:
          description: ID of the card. String starting with card_.
          type: string
        card_program:
          description: ID of the card program that the card is issued from. String starting with cardprog_.
          type: string
        configuration:
          description: Reserved. Webhook only.
          type: string
        country_iso_alpha_2:
          description: The country where the card is issued. Two-letter ISO 3166-1
            ALPHA-2 code. Response only.
          type: string
        created_at:
          description: Time of creation of the issued card object, in Unix time. Response
            only.
          type: number
        ewallet_contact:
          $ref: '#/components/schemas/Contact'
        id:
          description: ID of the Issued Card object. String starting with ci_.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        public_details:
          description: Details of the issued card.
          type: object
        status:
          description: Status of the card
          type: string
        card_tracking_id:
          description: Reserved
          type: string
        card_number:
          description: Actual card number
          type: string
        cvv:
          description: Card security code
          type: string
        expiration_month:
          description: Expiration month of the card. Two digits. Relevant when the card issuer supports it for the country.
          type: string
        expiration_year:
          description: Expiration year of the card. Two digits. Relevant when the card issuer supports it for the country.
          type: string
        bin:
          description: Bank Identifier Number for the institution issuing the card.
            Response only.
          type: string
        sub_bin:
          description: Two-digit code.
          type: string
    CardDetailsResponse:
      properties:
        card:
          properties:
            name:
              description: The name of the person that the card is issued to.
              type: string
            network:
              description: The card network of the issued card.
              type: string
          type: object
        card_color:
          description: >
            The color of the card, specified by one of the following formats:
              hexadecimal value
              CSS color name
              RGB
              RGBA
              black
          type: string
        expiration:
          description: Time when the hosted page URL expires, in Unix time. 24 hours after creation of the page
          type: number
        id:
          description: The ID of the hosted page. String starting with hp_issued_.
          type: string
        logo:
          description: The URL of the logo image that appears on the card. If the logo is not specified, the name of the merchant appears.
          type: string
        logo_orientation:
          description: >
            The orientation of the logo on the card.:
              landscape
              square
              portrait
                Default value: landscape
          type: string
      type: object
    CardTokenResponse:
      properties:
        billing_address_collect:
          description: Indicates whether the hosted page displays address fields to fill in. true - The address fields are displayed. false - The address fields are displayed only for country codes US, GB and CA.
          type: boolean
        cancel_url:
          description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string
        category:
          description: Category of payment method.
          type: string
        complete_url:
          description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs
          type: string
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        customer:
          description: ID of the customer, a string starting with cus_.
          type: string
        id:
          description: ID of the card token hosted page, a string starting with hp_card_
          type: string
        page_expiration:
          description: End of the time when the customer can use the hosted page, in Unix time. If page_expiration is not set, the hosted page expires 14 days after creation. Range is 1 minute to 30 days.
          type: number
        payment_method_type:
          description: Limits the page to a specific type of payment method. For example, dk_visa_card
          type: string
        payment_params:
          $ref: '#/components/schemas/PaymentParams'
        customer_card_payment_methods:
          $ref: '#/components/schemas/CustomerPaymentMethod'
      type: object
    CardTransaction:
      properties:
        amount:
          description: Amount of the transaction, in units defined in currency. Decimal,
            including the correct number of decimal places for the currency exponent,
            as defined in ISO 2417:2015. Response only.
          type: number
        auth_code:
          description: Authorization code sent to the merchant. Relevant to authorizations
            approved by Rapyd. Response only.
          type: string
        authorization_approved_by:
          description: Approver of the transaction when remote authorization is used.
            See Remote Authorization.
          type: string
        bin:
          description: The first 6 digits of the card number. Response only.
          type: string
        card_authorization:
          type: string
        card_id:
          description: ID of the card. String starting with card_. Response only.
          type: string
        card_program:
          description: ID of the card program that the card is issued from. String
            starting with cardprog_. Response only.
          type: string
        created_at:
          description: Time of creation of the transaction object, in Unix time. Response
            only.
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        fx_rate:
          description: The exchange rate. Response only.
          type: number
        id:
          description: ID of the issued card transaction object. String starting with
            cit_.
          type: string
        issuing_txn_type:
          description: Type of the transaction.
          type: string
        last4:
          description: The last 4 digits of the card number. Response only.
          type: string
        merchant_category_code:
          description: Four-digit merchant category code (MCC) of the initiator of
            the transaction, as defined in ISO 18245. Response only.
          type: string
        merchant_name_location:
          description: Name and location of the merchant. Maximum 40 characters. Response
            only.
          type: string
        original_transaction_id:
          description: ID of the original card transaction. Response only.
          type: string
        original_txn_amount:
          description: Original amount for FX transactions, when currency is different
            from original_txn_currency. Response only.
          type: number
        original_txn_currency:
          description: Original currency in FX transaction. Three-letter ISO 4217
            code. Response only.
          type: string
        pos_entry_mode:
          description: The mode of the POS entry. One of the following
          enum:
            - magstripe
            - manual_entered
            - emv
            - emv_standin
            - nfc
            - network_token
            - ecommerce
            - 3ds_ecommerce
            - adjustment
          type: string
        retrieval_reference_number:
          description: Reserved.
          type: string
        systems_trace_audit_number:
          description: Reserved
          type: string
        wallet_transaction_id:
          description: ID of the wallet transaction. String starting with wt_. Response
            only.
          type: string
      type: object
    ClientDetailsObject:
      description: Describes the fields in the client_details object in REST messages
        for payments. The client_details object describes the browser that the customer
        is using. The client collects this information and sends it as part of the
        Create Payment request. This information is used for processing the 3DS version
        2 authentication of the customer. Note that Client Details information is
        not returned in the API response and it does not appear in any webhooks.
      properties:
        ip_address:
          description: IP address of the customer.
          type: string
        java_enabled:
          description: Indicates whether the browser is enabled for Java.
          type: boolean
        java_script_enabled:
          description: Indicates whether the browser is enabled for JavaScript.
          type: boolean
        language:
          description: The language the browser is configured for, as defined in IETF
            BCP 47.
          type: string
        screen_color_depth:
          description: Indicates the screen color depth of the customer's browser,
            in bits.
          enum:
            - 1
            - 4
            - 8
            - 15
            - 16
            - 24
            - 32
            - 48
          type: integer
        screen_height:
          description: Height of the customer's screen, in pixels. 1-6 digits.
          type: integer
        screen_width:
          description: Width of the customer's screen, in pixels. 1-6 digits.
          type: integer
        time_zone_offset:
          description: Difference in minutes between UTC and the customer's time zone.
            Positive or negative integer.
          type: integer
      type: object
    Condition:
      properties:
        description:
          description: Description of the condition
          type: string
        element_name:
          description: The name of a field, including the path. The field is the first
            operand of the condition. The path starts with one of the following -
            * payment - The field is a Create Payment body parameter. Not relevant
            to the payment_method and payment_method_options objects. * payment.payment_method_type
            - The field appears in the current Get Payment Method Required Fields
            response under fields or payment_method_options. * organization - The
            field relates to your organization, such as your merchant type category.
            Your organization specifies the field when activating your account. See
            Activating Your Account (KYB)
          type: string
        operator:
          description: A symbol representing the operator of the condition. String
            starting with $. The operator determines the relationship between the
            operands See documentation - https://docs.rapyd.net/build-with-rapyd/reference/payment-method-types#operators-for-conditions
          type: string
        threshold_value:
          description: One or more possible values of the element_name field. The
            second operand of the condition https://docs.rapyd.net/build-with-rapyd/reference/payment-method-types#operators-for-conditions
          oneOf:
            - type: string
            - type: integer
      type: object
    Contact:
      properties:
        address:
          $ref: '#/components/schemas/Address'
        business_details:
          $ref: '#/components/schemas/ContactBusiness'
        compliance_profile:
          description: Indicates the degree to which this contact can use the wallet.
          type: number
        contact_type:
          description: Type of contact.
          enum:
            - personal
            - business
          type: string
        country:
          $ref: '#/components/schemas/Country'
        created_at:
          type: number
        date_of_birth:
          description: Date of birth of the individua
          type: string
        email:
          description: Email address of the contact
          pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
          type: string
        ewallet:
          description: ID of the Rapyd Wallet that this contact is associated with.
            String starting with ewallet_.
          type: string
        first_name:
          description: First name of the personal contact or primary person associated
            with the business contact.
          type: string
        gender:
          description: Gender of the personal contact or primary person associated
            with the business contact
          enum:
            - male
            - female
            - other
            - not_applicable
          type: string
        house_type:
          description: Description of the type of residency at the contact's residence.
          enum:
            - lease
            - live_with_family
            - own
            - owner
            - month_to_month
            - housing_project
          type: string
        id:
          description: ID of the contact object. String starting with cont_.
          type: string
        identification_number:
          description: ID number as shown by the ID document.
          type: string
        identification_type:
          description: Type of the identification document associated with the contact.
            Uppercase.
          type: string
        issued_card_data:
          description: Describes additional information about the business contact
            for a company wallet.
          type: object
        last_name:
          description: Family name of the personal contact or primary person associated
            with the business contact. Required for issuing a card to a personal contact.
          type: string
        marital_status:
          description: Marital status of the personal contact or primary person associated
            with the business contact.
          enum:
            - married
            - single
            - divorced
            - widowed
            - cohabiting
            - not_applicable
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        middle_name:
          description: Middle name of the personal contact or primary person associated
            with the business contact.
          type: string
        mothers_name:
          description: Name of the contact's mother
          type: string
        nationality:
          $ref: '#/components/schemas/Country'
        phone_number:
          description: Phone number of the contact in E.164 format.
          type: string
        second_last_name:
          description: Second last name of the personal contact or primary person
            associated with the business contact.
          type: string
        send_notifications:
          default: false
          description: Determines whether Rapyd sends notifications to the contact.
            Default is false.
          type: boolean
        verification_status:
          description: Result of the verification check.
          enum:
            - not verified
            - KYCd
          type: string
        contact_reference_id:
          description: Reference ID for the contact. Limited
            to 45 characters. Should be unique per merchant per e-wallet.
          type: string
      type: object
    ContactBusiness:
      properties:
        address:
          $ref: '#/components/schemas/Address'
        annual_revenue:
          description: Annual revenue of the business in US dollars. Maximum value
            100000000000000. Decimal.
          type: number
        cnae_code:
          description: "Business activity code of the business, according to the Classifica\xC3\
            \xA7\xC3\xA3o Nacional de Atividades Econ\xC3\xB4micas of Brazil. Alphanumeric\
            \ string. Maximum 7 characters."
          type: string
        created_at:
          description: Time of creation of the business_details object, in Unix time.
            Response only.
          type: number
        entity_type:
          description: Type of business entity
          enum:
            - sole_prop
            - partnership
            - company
            - government
            - charity
            - NPO
            - association
            - trust
          type: string
        establishment_date:
          description: Date that the business was established. Format YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
        id:
          description: ID of the business_details object. String starting with busi_.
          type: string
        industry_category:
          description: Name of the industry that this business belongs to. Required.
            Alphanumeric string with no special characters.
          pattern: ^[a-zA-Z0-9]+$
          type: string
        industry_sub_category:
          description: Subcategory of the industry that this business belongs to.
          type: string
        legal_entity_type:
          description: Type of legal entity. Alphanumeric string.
          type: string
        name:
          description: Business name.
          type: string
        registration_number:
          description: Registration number.
          type: string
      type: object
    Country:
      pattern: ^(A(D|E|F|G|I|L|M|N|O|R|S|T|Q|U|W|X|Z)|B(A|B|D|E|F|G|H|I|J|L|M|N|O|R|S|T|V|W|Y|Z)|C(A|C|D|F|G|H|I|K|L|M|N|O|R|U|V|X|Y|Z)|D(E|J|K|M|O|Z)|E(C|E|G|H|R|S|T)|F(I|J|K|M|O|R)|G(A|B|D|E|F|G|H|I|L|M|N|P|Q|R|S|T|U|W|Y)|H(K|M|N|R|T|U)|I(D|E|Q|L|M|N|O|R|S|T)|J(E|M|O|P)|K(E|G|H|I|M|N|P|R|W|Y|Z)|L(A|B|C|I|K|R|S|T|U|V|Y)|M(A|C|D|E|F|G|H|K|L|M|N|O|Q|P|R|S|T|U|V|W|X|Y|Z)|N(A|C|E|F|G|I|L|O|P|R|U|Z)|OM|P(A|E|F|G|H|K|L|M|N|R|S|T|W|Y)|QA|R(E|O|S|U|W)|S(A|B|C|D|E|G|H|I|J|K|L|M|N|O|R|T|V|Y|Z)|T(C|D|F|G|H|J|K|L|M|N|O|R|T|V|W|Z)|U(A|G|M|S|Y|Z)|V(A|C|E|G|I|N|U)|W(F|S)|Y(E|T)|Z(A|M|W))$
      type: string
    CountryObject:
      description: The Country object is a read-only resource that you can query for
        information needed in a method request.
      properties:
        currency_code:
          description: Three-letter ISO 4217 code for the official currency used in
            the country.
          type: string
        currency_name:
          description: Name of the currency in English.
          type: string
        currency_sign:
          description: Unicode symbol for the currency. If there is no official Unicode
            symbol, this field contains the string undefined.
          type: string
        id:
          description: ID of the Country object.
          type: number
        iso_alpha2:
          description: The two-letter ISO 3166-1 ALPHA-2 code for the country.
          type: string
        iso_alpha3:
          description: The three-letter ISO 3166-1 ALPHA-3 code for the country.
          type: string
        name:
          description: The name of the country in English.
          type: string
        phone_code:
          description: International phone prefix. Numeric. 1-3 digits.
          type: string
      type: object
    Coupon:
      description: The coupon can be applied to the following objects - * Subscription
        - All charges in the subscription are subject to the discount described in
        the coupon. To add a coupon to a subscription, first use Create Coupon. Then
        add the coupon ID to the coupon field of the subscription with Create Subscription
        or Update Subscription. * Customer - The discount applies to all charges to
        the customer. To add a coupon to a customer, first use Create Coupon. Then
        add the coupon ID to the coupon field of the customer with Create Customer
        or Update Customer. * Order - The discount applies to a single order. To add
        a coupon to an order, first use Create Coupon. The duration field of the coupon
        must be set to repeating, and the duration_in_months and discount_duration_in_uses
        fields must be set to 1. Then add the coupon ID to the coupon field of the
        order with Create an Order or Update Order. A coupon can be applied to one
        or more customers or subscriptions. However, a subscription can have only
        one coupon, and the only way to assign two or more coupons to a customer is
        to assign them to separate subscriptions. If there is a coupon for the customer
        and another coupon for the customer's subscription, the subscription coupon
        takes precedence.
      type: object
      properties:
        amount_off:
          description: 'The amount of money to subtract from the payment. Decimal.
            Range: Positive decimal number, including the correct number of decimal
            places for the currency exponent, as defined in ISO 2417:2015.'
          example: 0
          type: number
        created:
          description: When the coupon was created, in Unix time. Response only.
          example: 1671697165
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          description: Description of the coupon.
          example: Sample Coupon 1
          type: string
        discount_duration_in_uses:
          description: The number of times that the coupon can be redeemed by a specific
            customer or subscription. Relevant when duration is repeating and redeem_by
            is not set.
          example: 2
          type: number
        discount_valid_until:
          description: The final date that a discount can be used, in Unix time. Relevant
            when discount_validity_in_months is not set.
          example: 0
          type: number
        discount_validity_in_months:
          description: The number of months after the discount is created that it
            can be used. Relevant when discount_valid_until is not set.
          example: 2
          type: number
        duration:
          description: "Determines how long the discount remains in effect. One of\
            \ the following: \n* forever \n* repeating\n"
          enum:
            - forever
            - repeating
          example: forever
          type: string
        duration_in_months:
          description: Determines the number of months that the coupon remains in
            effect after its creation. Integer. Required when duration is repeating.
          example: 3
          type: number
        id:
          description: Unique ID for this coupon. English alphanumeric characters
            with no special characters except underscore. If the merchant does not
            define an ID, Rapyd generates a string starting with coupon_.
          example: coupon_c1194a18a9972ca7f9804826f00c9eb8
          type: string
        max_redemptions:
          description: Determines the number of times the coupon can be redeemed.
            The number of customers, subscriptions or orders that the coupon is applied
            to cannot exceed this number. Integer.
          example: 2
          type: number
        metadata:
          description: A JSON object defined by the client.
          type: object
        percent_off:
          description: 'Determines the size of the discount, measured in percent.
            Integer. Range: 1-100.'
          example: 10
          pattern: ([1-9]|[1-9]\d|100)
          type: number
        redeem_by:
          description: The last time at which the coupon can be redeemed, in Unix
            time. After the redeem_by date, the coupon can no longer be applied to
            new customers. 'redeem_by' takes precedence over the setting of discount_duration_in_uses
            and duration_in_months.
          example: 0
          type: number
        times_redeemed:
          description: Indicates the number of times the coupon has been applied to
            a customer, subscription or invoice. If the discount has been used more
            than one time by a customer, subscription or invoice, the number of redemptions
            after the first is also added to this value. Integer. When this value
            equals max_redemptions, the coupon becomes no longer valid. Response only.
          example: 0
          type: number
        valid:
          description: Indicates whether the coupon can be redeemed.
          example: true
          type: boolean
    Currency:
      pattern: /^AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYR|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD$/
      type: string
    CurrencyObject:
      description: The Currency object is a read-only resource that you can query
        for information needed in a method request.
      properties:
        code:
          description: Three-letter alphabetic ISO 4217 code for the official currency
            used in the country.
          type: string
        digits_after_decimal_separator:
          description: Number of digits for the minor unit of the currency.
          type: number
        name:
          description: Name of the currency in English.
          type: string
        numeric_code:
          description: Three-letter ISO numeric 4217 code for the currency.
          type: string
        symbol:
          description: Unicode symbol for the currency. If there is no official Unicode
            symbol, this field contains the string undefined.
          type: string
      type: object
    Customer:
      description: customer
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        business_vat_id:
          description: The tax ID number of the customer. Relevant when the customer
            is a business
          type: string
        created_at:
          description: Time of creation of this customer, in Unix time. Response only
          type: integer
        default_payment_method:
          description: The payment method that is used when the 'payment' object or
            subscription does not specify a payment method. The value must also appear
            in the payment_methods list. The payment method is referenced by its name
            field.
          type: string
        delinquent:
          description: Indicates whether there is currently a failure of an automatic
            payment that is part of a subscription, or an invoice that was not paid
            when due. Response only. true - The account is delinquent false - The
            account is current
          type: boolean
        description:
          description: A text description of the customer
          type: string
        discount:
          $ref: '#/components/schemas/CustomerDiscount'
        email:
          description: Customer's email address. Maximum 512 characters
          type: string
        ewallet:
          description: ID of the wallet that is linked to the customer. String starting
            with ewallet_. Each wallet can be associated with only one customer
          type: string
        id:
          description: ID of the Customer object. String starting with cus_
          type: string
        invoice_prefix:
          description: A custom string that is prefixed to all invoices for this customer.
            For more information see Invoice Object at https://docs.rapyd.net/build-with-rapyd/reference/invoices#invoice-object
          type: string
        metadata:
          description: A JSON object defined by the client
          type: object
        name:
          description: The name of the customer
          type: string
        payment_methods:
          description: An object containing the following fields - * data - A list
            of up to three payment methods. For more information, see Customer Payment
            Method Object. * has_more - Indicates whether there are more than three
            payment methods for this customer. * total_count - Total number of payment
            methods for this customer. * url - URL for requesting all of the payment
            methods for this customer..
          properties:
            data:
              items:
                $ref: '#/components/schemas/CustomerPaymentMethod'
              type: array
            has_more:
              type: boolean
            total_count:
              type: integer
            url:
              type: string
          type: object
        phone_number:
          description: Customer's primary phone number in E.164 format. The merchant
            is responsible for verifying that the number is correct. One method of
            verifying could be to send an activation code to the phone by SMS, with
            a limited time for response.
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
      required:
        - name
    CustomerDetailsPMT:
      description: customer
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/Address'
          type: array
        business_vat_id:
          description: The tax ID number of the customer. Relevant when the customer
            is a business
          type: string
        created_at:
          description: Time of creation of this customer, in Unix time. Response only
          type: integer
        default_payment_method:
          description: The payment method that is used when the 'payment' object or
            subscription does not specify a payment method. The value must also appear
            in the payment_methods list. The payment method is referenced by its name
            field.
          type: string
        delinquent:
          description: Indicates whether there is currently a failure of an automatic
            payment that is part of a subscription, or an invoice that was not paid
            when due. Response only. true - The account is delinquent false - The
            account is current
          type: boolean
        description:
          description: A text description of the customer
          type: string
        discount:
          $ref: '#/components/schemas/CustomerDiscount'
        email:
          description: Customer's email address. Maximum 512 characters
          type: string
        ewallet:
          description: ID of the wallet that is linked to the customer. String starting
            with ewallet_. Each wallet can be associated with only one customer
          type: string
        id:
          description: ID of the Customer object. String starting with cus_
          type: string
        invoice_prefix:
          description: A custom string that is prefixed to all invoices for this customer.
            For more information see Invoice Object at https://docs.rapyd.net/build-with-rapyd/reference/invoices#invoice-object
          type: string
        metadata:
          description: A JSON object defined by the client
          type: object
        name:
          description: The name of the customer
          type: string
        payment_methods:
          description: An object containing the following fields - * data - A list
            of up to three payment methods. For more information, see Customer Payment
            Method Object. * has_more - Indicates whether there are more than three
            payment methods for this customer. * total_count - Total number of payment
            methods for this customer. * url - URL for requesting all of the payment
            methods for this customer..
          properties:
            data:
              items:
                $ref: '#/components/schemas/CustomerPaymentMethod'
              type: array
            has_more:
              type: boolean
            total_count:
              type: integer
            url:
              type: string
          type: object
        phone_number:
          description: Customer's primary phone number in E.164 format. The merchant
            is responsible for verifying that the number is correct. One method of
            verifying could be to send an activation code to the phone by SMS, with
            a limited time for response.
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        network_reference_id:
          description: When you specify card payment method fields for a payment, you can use a network reference ID instead of the CVV.
          type: string
        complete_payment_url:
          description: URL where the customer is redirected for final steps in completing
            the operation. Provided by the clientRelevant to bank redirect payment
            methods
          type: string
        error_payment_url:
          description: URL where the customer is redirected in case of an error in
            the operation. Provided by the client.Relevant to bank redirect payment
            methods
          type: string
      required:
        - name
      type: object
    CustomerPaymentMethod:
      description: Describes the fields contained in REST messages and webhooks for
        payment methods saved to a customer profile
      allOf:
        - properties:
            id:
              description: ID of the Payment Method object. String starting with card_
                or other_
              type: string
            type:
              description: Name of the payment method type. For example, us_mastercard_card.
                To get a list of payment methods for a country, use List Payment Methods
                by Country.
              type: string
            category:
              $ref: '#/components/schemas/Category'
            metadata:
              description: A JSON object defined by the client
              type: object
            image:
              description: A URL to the image of the icon for the type of payment method.
                Response only
              type: string
            webhook_url:
              description: Reserved. Response only
              type: string
            supporting_documentation:
              description: Reserved. Response only.
              type: string
            next_action:
              $ref: '#/components/schemas/NextAction'
          type: object
          description: Fields relevant to all payment methods
        - oneOf:
            - properties:
                bic_swift:
                  description: BIC (SWIFT) code for the bank account.
                  example: 12345678XXX
                  type: string
                account_last4:
                  description: Last four digits of the bank account number or IBAN (International Bank Account Number).
                  type: string
              type: object
              description: Fields relevant to ban and local ewallet payment methods
            - properties:
                last_name:
                  description: Customer's last name.
                  type: string
                first_name:
                  description: Customer's first name.
                  type: string
              type: object
              description: Fields relevant to cash payment methods
            - properties:
                last4:
                  description: Last four digits of the card or IBAN (International Bank Account Number).
                  type: string
                acs_check:
                  description: 'Results of the Access Control Server (ACS) check. Possible values: * pass *fail * unavailable *unchecked * Relevant to cards.'
                  type: string
                cvv_check:
                  description: 'Verification of the card’s CVV. Valid values: * pass * fail * unavailable *  unchecked'
                  type: string
                bin_details:
                  $ref: '#/components/schemas/BinDetails'
                expiration_year:
                  description: Year of expiration.
                  type: string
                expiration_month:
                  description: Month of expiration.
                  type: string
                fingerprint_token:
                  description: Hash of the card number, expiration date and CVV.
                  type: string
              type: object
              description: Fields relevant to card payment methods
    CustomerRequest:
      properties:
        addresses:
          description: Array of address objects associated with this customer.
            For more information
          items:
            $ref: '#/components/schemas/Address'
          type: array
        business_vat_id:
          description: The tax ID number of the customer
          type: string
        coupon:
          description: The ID of a coupon that is assigned to this customer
          type: string
        default_payment_method:
          description: The payment method that is used when the transaction
            does not specify a payment method. String starting with card_
            or other_.
          type: string
        description:
          description: A text description of the customer
          type: string
        email:
          description: Customer's email address
          type: string
        ewallet:
          description: ID of the wallet that is linked to the customer. String
            starting with ewallet_
          type: string
        invoice_prefix:
          description: A custom string that is prefixed to all invoices for
            this customer
          type: string
        metadata:
          description: A JSON object defined by the Rapyd partner
          type: object
        name:
          description: The name of the individual customer or the business
            name
          type: string
        phone_number:
          description: Customer's primary phone number in E.164 format
          type: string
        payment_method:
          description: Payment Method object or ID.
          oneOf:
            - type: string
            - properties:
                type:
                  type: string
                fields:
                  type: object
                  x-isDynamicObject: true
    DailyRate:
      description: 'Describes currency conversion for payments and payouts. Rapyd
        uses a snapshot of daily foreign exchange rates fetched at 9 PM UTC. The rate returned includes the FX markup fees.'
      properties:
        action_type:
          description: The type of transaction that the currency exchange applies
            to. One of the following - payment, payout
          type: string
        buy_amount:
          description: If fixed_side is buy, the value of amount. If fixed_side is
            sell, the value of buy_currency following the currency exchange transaction.
            Relevant when amount and fixed_side are specified.
          type: number
        buy_currency:
          description: The currency purchased in the currency exchange transaction.
            Three-letter ISO 4217 code. Uppercase.
          type: string
        date:
          description: The date when the rate is applicable. Today or earlier. Format
            is YYYY-MM-DD. Default is today.
          format: date
          type: string
        fixed_side:
          description: 'Indicates which currency the rate is fixed for. One of the
            following : * buy - The currency defined by buy_currency. * sell : The
            currency defined by sell_currency.'
          type: string
        rate:
          description: The exchange rate. Includes FX markup fees.
          type: number
        sell_amount:
          description: If fixed_side is sell, the value of amount. If fixed_side is
            buy, the value of sell_currency following the currency exchange transaction.
            Relevant when amount and fixed_side are specified.
          format: float
          type: number
        sell_currency:
          description: Selling currency
          type: string
      type: object
    CustomerDiscount:
      description: Describes the fields relating to discounts in REST messages and
        webhooks for customer profiles and subscriptions Contains information about
        the coupon that applies to the customer. Read-only field. Adding a discount
        is a 2-step process - 1. Create Coupon, which returns a coupon ID. 2. Add
        the coupon ID to the coupon field of the customer with Create Customer or
        Update Customer.
      nullable: true
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon'
        customer:
          description: ID of the Customer object that the discount applies to. String
            starting with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
          type: string
        end:
          description: The final time that a discount can be used, in Unix time. When
            the value is -1, the discount never expires. Response only.
          example: 1679473563
          type: number
        id:
          description: ID of the Discount object. String starting with dis_. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
          type: string
        number_of_uses:
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
          type: number
        start:
          description: The time that a discount was created, in Unix time. Response
            only.
          example: 1679473563
          type: number
        subscription:
          description: ID of the Subscription object that the discount applies to.
            String starting with sub_. Response only.
          example: 'sub_199e8c92ec0ec2bcbe56740042639d6e'
          type: string
        valid:
          description: Indicates whether the discount can be used. Response only.
          example: true
          type: boolean
      type: object
    SubscriptionDiscount:
      description: Describes the fields relating to discounts in REST messages and
        webhooks for customer profiles and subscriptions Contains information about
        the coupon that applies to the customer. Read-only field. Adding a discount
        is a 2-step process - 1. Create Coupon, which returns a coupon ID. 2. Add
        the coupon ID to the coupon field of the customer with Create Customer or
        Update Customer.
      nullable: true
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon'
        end:
          description: The final time that a discount can be used, in Unix time. When
            the value is -1, the discount never expires. Response only.
          example: 1679473563
          type: number
        id:
          description: ID of the Discount object. String starting with dis_. Response
            only.
          example: dis_ab0445dee00fdcdd83811760ffe90e3b
          type: string
        number_of_uses:
          description: The number of times that the discount was used for a specific
            customer or subscription. The initial value is 0. The value is incremented
            by 1 each time that the discount is used. Response only.
          example: 0
          type: number
        start:
          description: The time that a discount was created, in Unix time. Response
            only.
          example: 1679473563
          type: number
        subscription:
          description: ID of the Subscription object that the discount applies to.
            String starting with sub_. Response only.
          example: 'sub_199e8c92ec0ec2bcbe56740042639d6e'
          type: string
        valid:
          description: Indicates whether the discount can be used. Response only.
          example: true
          type: boolean
      type: object
    Dispute:
      description: Describes the fields contained in REST messages and webhooks for disputes of payments.
      properties:
        id:
          description: Reserved.
          type: string
        token:
          description: ID of the dispute. String starting with dispute_.
          type: string
          example: dispute_6bd95ecec6bee6a505d39b56dbded2ec
        status:
          description: >
            Indicates the status of the dispute operation. One of the following values:
            * ACT (Active) - The dispute was initiated and is awaiting action by the merchant.
            * RVW (Review) - Rapyd is reviewing the merchant's evidence contesting the dispute.
            * PRA (Pre-Arbitration) - Rapyd is reviewing the merchant's evidence contesting a previously contested dispute.
            * ARB (Arbitration) - The merchant rejected a pre-arbitration outcome. Rapyd is awaiting a ruling by an arbitration committee from the card schemes.
            * LOS (Lose) - The merchant lost the dispute. Funds were deducted from the merchant wallet. Final status.
            * WIN (Win) - The merchant won the dispute. Funds were credited to the merchant wallet. Final status.
            * REV (Reverse) - The card issuer reversed the dispute. Funds were credited to the merchant wallet. Final status.
          enum:
            - ACT
            - RVW
            - PRA
            - ARB
            - LOS
            - WIN
            - REV
          type: string
          example: ACT
        amount:
          description: Amount that Rapyd deducted from the merchant due to the dispute.
          type: number
        currency:
          description: Three-letter ISO 4217 code for the currency used in the amount field.
          type: string
        dispute_category:
          description: The category of dispute that was provided by the card network.
          type: string
        dispute_reason_description:
          description: A short description of the reason for the dispute.
          type: string
        original_transaction_currency:
          $ref: '#/components/schemas/Currency'
          description: Currency of the original_transaction_amount.
        original_transaction_amount:
          description: Amount of the original payment.
          type: number
        original_dispute_amount:
          description: Amount of the dispute, as reported to Rapyd.
          type: number
        original_dispute_currency:
          $ref: '#/components/schemas/Currency'
          description: Currency of the disputed payment.
        original_transaction_id:
          description: ID of the payment that the dispute is charged against. String starting with payment_.
          type: string
          example: payment_ce936f36d93bc9307a3db9ebfd3deaaa
        ewallet_id:
          description: ID of the wallet that the money is paid into. String starting with ewallet_. Relevant when the request includes a single wallet. Response only.
          type: string
        central_processing_date:
          description: The date the transaction was processed by the card network.
          type: number
        created_at:
          description: Time of creation of the dispute, in Unix time. Response only.
          type: number
        updated_at:
          description: Time that the dispute was last updated, in Unix time. Response only.
          type: number
        due_date:
          description: The latest date for the dispute to be contested in Unix time. Response only.
          type: number
        payment_method:
          description: ID of the payment method. String starting with card_.
          type: string
          example: card_39d8aee398dfa5492fc2a0ea2822958f"
        payment_method_data:
          description: Details of the payment method that was used for the payment. See Payment Method Data Object. Response only.
          type: object
        rate:
          description: FX rate. Relevant to FX payments.
          type: number
        evidence:
          description: Reserved.
          type: string
        evidence_reason_code:
          description: Reserved.
          type: string
        pre_dispute:
          description: When true, indicates that the disputed payment was automatically refunded based on pre-determined criteria. Response only.
          type: boolean
        arn:
          description: >
            An Acquirer Reference Number (ARN) is a unique number assigned to a credit card transaction as it moves through the payment flow. Banks can use it to help trace the payment/ refund if it appears to be missing. An ARN will be available for Visa and Mastercard charges.
          type: string
      type: object
    EntityType:
      enum:
        - company
        - individual
      type: string
    EntityTypeVerify:
      enum:
        - Partnership
        - Sole Proprietor
        - Private Limited Company
        - Charity or NPO
        - Individual
      type: string
    EwalletTransactionDetails:
      oneOf:    
        - allOf:
            - $ref: '#/components/schemas/EwalletTransaction'
            - $ref: '#/components/schemas/EwalletTransactionP2PAdditionlData'
        - $ref: '#/components/schemas/EwalletTransaction'
    EwalletTransaction:
      properties:
        metadata:
          type: object
        amount:
          description: Amount of the transaction, in units of the currency defined
            in currency. Decimal, including the correct number of decimal places for
            the currency exponent, as defined in ISO 4217:2015.
          type: number
        balance:
          description: The updated wallet balance after successful completion of the
            transaction.
          type: number
        balance_type:
          description: Balance type affected by the transaction. One of the following
          enum:
            - available_balance
            - on_hold_balance
            - received_balance
            - reserve_balance
          type: string
        created_at:
          description: Time the transaction was made, in Unix time.
          type: number
        currency:
          description: Three-letter ISO 4217 code for the currency used in the amount
            field.
          type: string
        destination_balance_type:
          description: The destination balance type when funds are transferred from
            one balance to another within the wallet
          enum:
            - available_balance
            - on_hold_balance
            - received_balance
            - reserve_balance
          type: string
          nullable: true
        ewallet_id:
          description: ID of the wallet. String starting with ewallet_.
          type: string
        id:
          description: ID of the transaction. String starting with wt_ or UUID.
          type: string
        reason:
          description: Unique identifier of the wallet object. String starting with
            ewallet_.
          type: string
        source_balance_type:
          description: The source balance type when funds are transferred from one
            balance to another within the wallet
          enum:
            - available_balance
            - on_hold_balance
            - received_balance
            - reserve_balance
          type: string
          nullable: true
        status:
          description: Status of the transaction.
          type: string
        type:
          description: Type of transaction
          type: string
        subtype:
          description: Subtype of the transaction.
          type: number  
        action_data:
          type: object
      type: object
    EwalletTransactionP2PAdditionlData:
      properties:
        source_ewallet_id:
          description: ID of the wallet sending the money. String starting with ewallet_.
          type: string
          nullable: true
        destination_ewallet_id:
          description: ID of the wallet receiving the money. String starting with
            ewallet_. Response only.
          type: string
          nullable: true  
      type: object
    Ewallet:
      properties:
        accounts:
          description: ''
          items:
            $ref: '#/components/schemas/Account'
          type: array
        category:
          description: Indicates the type of client wallet
          enum:
            - collect
            - disburse
            - card_authorization
            - general
          type: string
        contacts:
          type: object
          properties:
            data:
              items:
                $ref: '#/components/schemas/Contact'
              type: array
            has_more:
              type: boolean
            total_count:
              type: integer
            url:
              type: string
        email:
          description: Email address of the wallet owner. Response only. Deprecated.
          type: string
        ewallet_reference_id:
          description: Wallet ID defined by the customer or end user. Must be unique.
          type: string
        first_name:
          description: First name of the wallet owner.
          type: string
        id:
          description: Unique identifier of the wallet object. String starting with
            ewallet_.
          type: string
        last_name:
          description: Last name of the wallet owner.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        phone_number:
          description: Phone number of the wallet owner in E.164 format. Response
            only. Deprecated.
          type: string
        status:
          description: Status of the wallet
          enum:
            - ACT
            - DIS
          type: string
        type:
          description: Type of wallet.
          enum:
            - company
            - person
            - client
          type: string
        verification_status:
          description: Result of the verification check.
          type: string
      type: object
    HostedPageStatus:
      description: >
        Status of the hosted page. One of the following:
        NEW - The hosted page was created.
        DON - Done. The card was added to the customer profile.
        EXP - The hosted page expired.
      enum:
        - NEW
        - DON
        - EXP
      type: string
    HostedPageStatusBaseResponse:
      properties:
        language:
          description: Determines the default language of the hosted page. When this parameter is null, the language of the user's browser is used. If the language of the user's browser cannot be determined, the default language is English
          type: string
        merchant_alias:
          description: Reserved, the default language is Rapyd
          type: string
        merchant_color:
          description: Color of the call-to-action (CTA) button on the hosted page. To configure this field, use the Client Portal
          type: string
        merchant_customer_support:
          $ref: '#/components/schemas/MerchantCustomerSupport'
        merchant_logo:
          description: URL for the image of the client's logo. To configure this field, use the Client Portal
          type: string
        merchant_website:
          description: The URL where the customer is redirected after exiting the hosted page. Relevant when cancel_url or complete_url or both fields is unset. To configure this field, use the Client Portal
          type: string
        redirect_url:
          description: URL of the hosted page that is shown to the customer.
          type: string
        merchant_terms:
          description: URL for the client's terms and conditions. To configure this field, use the Client Porta
          type: string
        merchant_privacy_policy:
          description: URL for the terms and conditions of the agreement between the client and the client’s customers. To configure this field, use the Client Portal.
          type: string    
        page_expiration:
          description: Length of time for the payment to be completed after it is created, measured in seconds. When both expiration and payment_expiration are set, the payment expires at the earlier time.
          type: number                
        status:
          $ref: '#/components/schemas/HostedPageStatus'
    HostedPageAdditionalResponse:
      properties:
        account_funding_transaction:
          description: Details of an account funding transaction (AFT), which transfers funds from a card to a cardholder's wallet.
          type: object
        amount:
          description: The amount of the payment, in units of the currency defined in currency. Decimal, including the correct number of decimal places for the currency exponent, as defined in ISO 2417:2015. If the amount is a whole number, use an integer and not a decimal.
          type: number
        cart_items:
          description: Describes the cart items that the customer is purchasing. These items are displayed at the checkout page.
          properties:
            amount:
              description: The price of the item in the currency defined in currency.
              type: number
            name:
              description: The name of the item.
              type: string
            quantity:
              description: The quantity of the item.
              type: number
            image:
              description: The image that appears in the checkout page for this item.
              type: string
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        customer:
          description: Description of the payment transaction. To display the description, set display_description to true in custom_elements.
          type: string
        escrow:
          description: Determines whether the payment is held in escrow for later release.
          type: boolean
        escrow_release_days:
          description: 'Determines the number of days after creation of the payment that funds are released from escrow. Funds are released at 5:00 pm GMT on the day indicated. Integer, range: 1-90.'
          type: number
        id:
          description: ID of the Rapyd checkout page. String starting with checkout_.
          type: string
        merchant_main_button:
          description: 'A string that represents the text on the main Call to Action (CTA) button. One of the following:* place_your_order - Place Your Order.* pay - Pay.* pay_now - Pay Now.* make_payment - Make Payment.* purchase - Purchase.* buy - Buy.* donate - Donate.* place_your_order To configure this button, use the Client Portal.'
          type: string
        merchant_privacy_policy:
          description: URL for the terms and conditions of the agreement between the client and the client’s customers. To configure this field, use the Client Portal.
          type: string
        merchant_terms:
          description: URL for the client's terms and conditions. To configure this field, use the Client Porta
          type: string
        merchant_website:
          description: 'The URL where the customer is redirected after exiting the hosted page. Relevant when one or both of the following fields is unset: * cancel_url* complete_url. To configure this field, use the Client Portal'
          type: string
        custom_elements:
          description: 'Description of the payment transaction.'
          type: object
          properties:
            save_card_default:
              type: boolean
            payment_fees_display:
              type: boolean
            billing_address_collect:
              type: boolean
            display_description:
              type: boolean
            merchant_currency_only:
              type: boolean
            cardholder_name:
              type: string
            cardholder_preferred_currency:
              type: string
            dynamic_currency_conversion:
              type: boolean
          required:
            - cardholder_name
            - merchant_currency_only
            - display_description
            - billing_address_collect
            - save_card_default
            - payment_fees_display
        page_expiration:
          description: Length of time for the payment to be completed after it is created, measured in seconds. When both expiration and payment_expiration are set, the payment expires at the earlier time.
          type: number
        payment:
          $ref: '#/components/schemas/Payment'
        payment_expiration:
          description: Length of time for the payment to be completed after it is created, measured in seconds. When both expiration and payment_expiration are set, the payment expires at the earlier time.
          type: number
        payment_method_type:
          description: The type of the payment method. For example, it_visa_card
          type: string
        payment_method_type_categories:
          description: A list of the categories of payment method that are supported on the checkout page. The categories appear on the page in the order provided
          type: array
          items:
            type: string
        payment_method_types_exclude:
          description: List of payment methods that are excluded from display on the checkout page.
          type: array
          items:
            type: string
        payment_method_types_include:
          description: List of payment methods that are displayed on the checkout page. The payment methods appear on the page in the order provided.
          type: array
          items:
            type: string
        timestamp:
          description: Time of creation of the checkout page, in Unix time.
          type: number
    CheckoutPageResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/HostedPageStatusBaseResponse'
        - $ref: '#/components/schemas/HostedPageAdditionalResponse'
        - $ref: '#/components/schemas/CheckoutUrlResponse'
    HostedPageResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/HostedPageStatusBaseResponse'
        - $ref: '#/components/schemas/HostedUrlResponse'
        - oneOf:
          - $ref: '#/components/schemas/CardTokenResponse'
          - $ref: '#/components/schemas/CardDetailsResponse'
    CheckoutUrlResponse:
      type: object
      properties:
        complete_checkout_url:
          description: URL where the customer is redirected after pressing Finish to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string
        cancel_checkout_url:
          description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string      
    HostedUrlResponse:
      type: object
      properties:
        complete_url:
          description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string
        cancel_url:
          description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string      
    VerifyHostedAppResponse:
      type: object
      properties:
        token:
          description: Identifier of the hosted application. String starting with happ_.
          example: happ_327bc354-2b6f-41d9-90e3-74aa7fed3287
          type: string
        rapyd_entity_token:
          description: The ID of the Rapyd wallet of the company. String starting with ewallet_. Must be a company type wallet.
          type: string
        cancel_url:
          description: URL where the customer is redirected after pressing Back to Website to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string
        complete_url:
          description: URL where the customer is redirected after pressing Close to exit the hosted page. This URL overrides the merchant_website URL. Does not support localhost URLs.
          type: string
        client_reference_id:
          description: ID defined by the client. Limited to 255 characters.
          type: string
        application_token:
          description: Identifier of the application. String starting with app_.
          type: string
        phone_number:
          description: The phone number of the applicant. This is the phone number where an authentication code is sent. Must have a leading plus sign (+).
          type: string
        merchant_details:
          description: Object containing information about the merchant.
          properties:
            merchant_alias:
              description: The name that appears on the hosted page when merchant_logo is not specified. To change this value, contact Client Support. Response only.
              type: string
            merchant_language:
              description: >
                Determines the default language of the application page. 
                The values are documented in List Hosted Page Supported Languages.
              x-note: When this parameter is null, the language of the user's browser is used. * If the language of the user's browser cannot be determined, the default language is English. Response only.
              type: string
            merchant_logo:
              description: URL for the image of the client's logo. Response only. To configure this feature, use the Client Portal.
              type: string
            merchant_website:
              description: The URL where the customer is redirected after exiting the hosted page.
              type: string
            merchant_color:
              description: ""
              type: string
            merchant_design:
              description: ""
              type: string
            merchant_customer_support:
              description: ""
              properties:
                email:
                  type: string
                  description: ""
                url:
                  type: string
                  description: ""
                phone_number:
                  type: string
                  description: ""
              type: object
            merchant_terms:
              description: ""
              type: string
            merchant_privacy_policy:
              description: ""
              type: string
          type: object
        redirect_url:
          description: URL of the hosted page that is shown to the customer.
          x-note: >
            The redirect_url value in the response provides the link to the hosted application.
            When the customer browses to the URL, Rapyd sends an authentication code to the applicant's phone. For the sandbox, the authentication code is 111111.
          type: string
        metadata:
          description: A JSON object defined by the client
          type: object
        authorized_user_email:
          description: ""
          type: string
    InvoiceItem:
      description: Invoice item
      type: object
      properties:
        id:
          type: string
          description: line item id
        amount:
          type: number
          description: amount
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          type: string
          description: item description
        discountable:
          type: boolean
        invoice_item:
          type: string
          description: invoice item id
        metadata:
          type: object
          description: A JSON object defined by the client.
        period:
          type: object
          properties:
            start:
              description: First date in the period covered by the invoice, in Unix time. Response only.
              type: string
            end:
              description: Last date in the period covered by the invoice, in Unix time. Response only.
              type: string
        proration:
          type: boolean
        quantity:
          type: number
        plan:
          $ref: '#/components/schemas/Plan'
        subscription:
          type: string
          description: ID of the subscription that generates charges to this customer. String starting with sub_.
        subscription_item:
          type: string
          description: ID of the subscription item that generates charges to this customer.
        type:
          type: string
    InvoiceResponse:
      description: Invoice
      type: object
      properties:
        id:
          type: string
        attempt_count:
          type: number
        billing:
          description: Determines the method of collection, pay_automatically or send_invoice. Default is pay_automatically
          type: string
        billing_reason:
          type: string
          description: The reason for billing
        created_at:
          type: number
          description: The time the invoice was created, in Unix time. Response only.
        discount:
          $ref: '#/components/schemas/SubscriptionDiscount'
        currency:
          $ref: '#/components/schemas/Currency'
        customer:
          description: ID of the customer. String starting with cus_.
          type: string
        days_until_due:
          description: The number of days until the due date.
          type: number
        description:
          description: Description of the invoice.
          type: string
        due_date:
          description: The date payment is due on this invoice. This value is calculated from the date the invoice is created, plus the number of days specified in the days_until_due field. Format is in Unix time.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        payment_fields:
          description: Object containing additional payment_options fields.
          type: object
        payment_method:
          description: Payment method for the invoice.
          type: string
          nullable: true
        statement_descriptor:
          description: Description of the invoice for the customer's credit card statement. Limited to 22 characters.
          type: string
        subscription:
          description: ID of the subscription that is the basis for this invoice.
          type: string
        tax_percent:
          description: The tax rate, defined as a percentage.
          type: number
        payment:
          $ref: '#/components/schemas/Payment'
        payout:
          $ref: '#/components/schemas/Payout'
        period_end:
          description: Last date in the period covered by the invoice, in Unix time. Response only.
          type: number
        period_start:
          description: First date in the period covered by the invoice, in Unix time. Response only.
          type: number
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        subtotal:
          type: number
          description: Total of all line items before discount and before tax. Decimal. Response only.
        tax:
          description: The amount of tax charged. Decimal
          type: number
        number:
          type: string
        total:
          description: Total after discount and tax. Decimal.
          type: number
        status:
          description: An invoice moves through a series of statuses. See status table below.
          type: string
        payout_fields:
          description: Reserved
          type: object
        type:
          enum:
            - payment
            - payout
          type: string
    InvoiceLineResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          type: string
        discountable:
          type: boolean
        invoice_item:
          type: string
        metadata:
          type: object
        period:
          type: object
          properties:
            start:
              type: number
            end:
              type: number
        proration:
          type: boolean
        quantity:
          type: integer
        subscription:
          type: string
        subscription_item:
          type: string
        type:
          type: string
        plan:
          oneOf:
            - $ref: '#/components/schemas/Plan'
            - type: string
    Field:
      description: Field Object
      properties:
        code:
          description: Three-letter alphabetic ISO 4217 code for the official currency
            used in the country.
          type: string
        is_required:
          description: Whether the field is always required for using the payment
            method
          type: boolean
        is_updatable:
          description: Indicates whether the field can be updated with Update Payment
            Method
          type: boolean
        instructions:
          type: string
        name:
          description: Name of the currency in English.
          type: string
        numeric_code:
          description: Three-letter ISO numeric 4217 code for the currency.
          type: string
        required_fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
        type:
          enum:
            - boolean
            - number
            - string
            - object
          type: string
        regex:
          type: string
          description: A regular expression that defines the format when type is string.
        conditions:
          description: Defines specific conditions when a field is required for a payment method. When the conditions defined by conditions are met, the field is required even though the value of is_required is false.
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: Description of the condition.
              element_name:
                type: string
                description: The name of a field, including the path. The field is the first operand of the condition.
              operator:
                type: string
                description: A symbol representing the operator of the condition. String starting with $. The operator determines the relationship between the operands.
              threshold_value:
                oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: des One or more possible values of the element_name field. The second operand of the condition.
        description:
          description: Description of the field.
          type: string
      type: object
    FxFee:
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
      properties:
        calc_type:
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
          type: string
        value:
          description: The amount of the fee. Percentage.
          example: 2.5
          type: number
      type: object      
    VirtualAccountTransactionResponse:
      description:  virtual account transaction.
      allOf:
       - $ref: '#/components/schemas/IssuingTransactionFxData'
       - properties:
          account_id:
            description: ID of the virtual bank account.
            type: string
          account_id_type:
            description: Type of the virtual account number.
            type: string
          amount:
            description: Amount of the transaction, in units defined in
              currency.
            type: number
          created_at:
            description: Timestamp for the transaction, in Unix time
            type: integer
          currency:
            description: Currency of the account. Three-letter ISO 4217
              code.
            type: string
          ewallet:
            description: ID of the Rapyd Wallet that is attached to the
              virtual account. String starting with ewallet_.
            type: string
          id:
            description: ID of the transaction. String starting with isutran_.
            type: string
      type: object
    IssuingTransactionFxData:
      description: Describes the fees for processing the currency exchange. Relevant
        to payouts with FX.
      properties:
        original_amount:
          description: The amount sent by the sender to the virtual account, in units of the currency defined in original_currency.
          type: number
        original_currency:
          $ref: '#/components/schemas/Currency'
          description: The currency sent by the sender to the virtual account.
        fx_rate:
          description: Currency conversion rate for the transaction.
          type: number
      type: object
    Last4:
      description: last4 - Last four digits of the card number. Read-only. Relevant
        to cards
      pattern: ^\d{4}$
      type: string
    Limit:
      properties:
        amount:
          description: The amount of the limit.
          type: number
        currency:
          description: Three-letter ISO 4217 code for the currency of an existing
            account.
          type: string
        type:
          description: The limit type.
          type: string
        updated_at:
          type: integer
      type: object
    MerchantCustomerSupport:
      properties:
        email:
          description: Email address.
          type: string
        url:
          description: URL for the client's customer support service.
          type: string
        phone_number:
          description: Phone number for contacting the client's customer support service.
          type: string
        merchant_logo:
          description: URL for the image of the client's logo. To configure this field, use the Client Portal.
          type: string
      type: object
    NextAction:
      description: Indicates the next action for completing the payment. Response
        only. One of the following values are - * 3d_verification - The next action
        is 3DS authentication. To simulate 3DS authentication in the sandbox, see
        Simulating 3DS Authentication. Relevant only to card payments. * pending_capture
        - The next action is pending the capture of the amount. Relevant only to card
        payments when the amount is not zero. * pending_confirmation - The next action
        is pending the confirmation for the payment. Relevant to all payment methods
        excluding card payment. * not_applicable - The payment has completed or the
        next action is not relevant.
      enum:
        - 3d_verification
        - pending_capture
        - pending_confirmation
        - not_applicable
      type: string
    OrderItem:
      type: object
      properties:
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          type: string
        parent:
          type: string
        quantity:
          type: number
        type:
          type: string
          enum:
            - discount
            - shipping
            - sku
            - tax
    OrderItemResponse:
      type: object
      properties:
        amount:
          description: Price of one SKU unit, in the currency defined in currency. Decimal, including the correct number of decimal places for the currency exponent, as defined in ISO 2417:2015.
          type: number
        currency:
          description: Must be the same as the currency of the order and the currency of the customer's payment method.
          $ref: '#/components/schemas/Currency'
        description:
          description: Description of the item.
          type: string
        parent:
          description: >
            ID of the SKU object that represents the product. One of the following:
            ID of the SKU object. String starting with sku_
            ID of the coupon. If generated by Rapyd, a string starting with coupon_.
          type: string
        quantity:
          description: Quantity of the product in the line item. Integer. Required when type is sku.
          type: number
        type:
          description: Type of line item.
          type: string
    OrderResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        amount_returned:
          type: number
        payment:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/Payment'
        created:
          type: integer
        customer:
          type: string
        currency:
          type: string
        email:
          type: string
        external_coupon_code:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
        metadata:
          type: object
        returns:
          description: A list of the returns charged against this order.
          items:
            $ref: '#/components/schemas/OrderReturnedItemResponse'
          type: array
        shipping_address:
          type: object
        status:
          type: string
        status_transitions:
          description: Indicates the last time in Unix time that the order transitioned to one of the following statuses. A zero value for a status indicates that the order has never transitioned to it.
          properties:
            canceled:
              type: number
            fulfilled:
              type: number
            paid:
              type: number
            returned:
              type: number
            pending:
              type: number
            partial:
              type: number
          type: object
        updated:
          type: integer
        upstream_id:
          type: string
        tax_percent:
          type: number
    OrderReturnedResponse:
      properties:
        id:
          type: string
        amount:
          type: number
        created:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderReturnedItemResponse'
        order:
          type: string
        refund:
          type: string
    OrderReturnedItemResponse:
      properties:
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          type: string
        parent:
          type: number
        quantity:
          type: number
        type:
          type: string
    Outcome:
      description: The outcome object describes the outcome of the Rapyd Protect risk
        assessment
      properties:
        network_status:
          enum:
            - approved_by_network
            - declined_by_network
            - not_sent_to_network
            - reversed_after_approval
          type: string
        payment_flow_type:
          type: string
          enum:
            - direct
            - eWallet
            - ewallet_payout
            - card
            - redirect_url
        payment_options:
          $ref: '#/components/schemas/PaymentFields'
        status:
          description: Indicates the status of the payment method. One of the following
            value is 1 means the payment_method_type is Valid
          type: string
        risk_level:
          enum:
            - normal
            - elevated
            - highest
            - not_assessed
          type: string
        seller_message:
          description: Message to the merchant
          type: string
      type: object
    Payment:
      description: Collects money from a payment method and deposits it into one or
        more Rapyd Wallets
      properties:
        address:
          $ref: '#/components/schemas/Address'
        amount:
          default: 0.0
          description: The amount received by the recipient, in units of the currency
            defined in currency. Decimal, including the correct number of decimal
            places for the currency exponent, as defined in ISO 2417:2015. To verify
            a card, set to 0.
          type: number
        auth_code:
          description: Indicates that the card payment was authorized by the card
            network.
          type: string
        cancel_reason:
          description: Reason for cancellation or reversal of a payment. Response
            only.
          type: string
        captured:
          default: true
          description: Indicates whether the payment has been successfully captured.
            Response only.
          type: boolean
        complete_payment_url:
          description: URL where the customer is redirected for final steps in completing
            the operation. Provided by the clientRelevant to bank redirect payment
            methods
          type: string
        country_code:
          $ref: '#/components/schemas/Country'
        created_at:
          description: Time of creation of the payment, in Unix time. Response only.
          type: integer
        currency_code:
          $ref: '#/components/schemas/Currency'
        customer_token:
          description: ID of the customer who is making the payment. String starting
            with cus_. When a payment is created without an existing customer, the
            platform creates an anonymous customer with no payment methods. Response
            only.
          type: string
        description:
          description: Description of the payment
          type: string
        dispute:
          $ref: '#/components/schemas/Dispute'
        error_code:
          description: Relevant error message (with an underscore between words) and
            ID number of the error. Response only.
          type: string
        error_payment_url:
          description: URL where the customer is redirected in case of an error in
            the operation. Provided by the client.Relevant to bank redirect payment
            methods
          type: string
        escrow:
          description: Describes the escrow. Relevant when the payment is created
            with escrow set to true. Response only.
          type: object
        ewallet_id:
          description: ID of the wallet that the money is paid into. String starting
            with ewallet_. Relevant when the request includes a single wallet. Response
            only.
          type: string
        ewallets:
          description: Specifies the wallets that the money is collected into. If
            this is left blank, the money goes into the oldest 'collection'-type client
            wallet. If there is no 'collection' client wallet, the money goes into
            the oldest 'general'-type client wallet.
          items:
            properties:
              ewallet_id:
                type: string
              amount:
                type: number
              percent:
                type: number
              refunded_amount:
                type: number
          type: array
        expiration:
          default: 0
          description: End of the time allowed for customer to make this payment,
            in Unix time. Must be after the current time
          type: number
        failure_code:
          description: Error code explaining the reason for failure of the payment.
            Response only.
          type: string
        failure_message:
          description: Message to the merchant, explaining the reason for failure
            of the payment. Response only.
          type: string
        fixed_side:
          description: Indicates whether the FX rate is fixed for the buy side (seller)
            or for the sell side (buyer). * buy - The currency that the Rapyd Wallet
            receives for goods or services. Fixed side buy relates to the seller (merchant)
            funds. For example, a US-based merchant wants to charge 100 USD. The buyer
            (customer) pays the amount in MXN that converts to 100 USD. This is the
            default. * sell - The currency that the buyer is charged for purchasing
            goods or services. Fixed side sell relates to the buyer (customer) funds.
            For example, a US-based merchant wants to charge a buyer 2,000 MXN and
            will accept whatever amount in USD that is converted from 2,000 MXN.
          type: string
        flow_type:
          description: Reserved.
          type: string
        fx_rate:
          default: 1
          description: Exchange rate for the transaction. When fixed_side is buy,
            fx_rate is the buy rate. When fixed_side is sell, fx_rate is the sell
            rate. Decimal number as string. Response only.
          type: number
        group_payment:
          description: ID of the group payment. String starting with gp_. Relevant when the payment is part of a group payment.
          type: string
        id:
          description: ID of the payment. String starting with payment_. Response only
          type: string
        initiation_type:
          description: Reason for cancellation or reversal of a payment. Response only.
          type: string
        instructions:
          description:
            Describes how the customer makes the payment.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              steps:
                type: array
                items:
                  type: object
                  x-isDynamicObject: true
        invoice:
          description: ID of the invoice that this payment is for. String starting
            with inv_. Response only.
          type: string
        is_partial:
          default: false
          description: Indicates whether the payment has been partially paid. When
            false, indicates that the payment is unpaid or fully paid. Response only.
          type: boolean
        merchant_reference_id:
          description: ID defined by the client. Limited to 255 characters.
          type: string
        merchant_requested_amount:
          description: Indicates the amount paid by the payer, in units of the currency
            defined in merchant_requested_currency. Relevant to payments with FX. Read only.
          type: string
        merchant_requested_currency:
          description: Indicates the currency that merchant receives. Three-letter
            ISO 4217 code. Uppercase. Relevant to payments with FX. Response only.
          type: string
        metadata:
          description: A JSON object defined by the client in the Customer Payment
            Method object. Response only.
          type: object
        mid:
          description: Reserved
          type: string
        next_action:
          $ref: '#/components/schemas/NextAction'
        order:
          description: ID of the order that this payment is for. Read-only. Relevant
            when the payment is for an order.
          type: string
        original_amount:
          default: 0.0
          description: '* Foreign exchange payments - The amount paid by the sender,
            in units of the currency defined in requested_currency, including gross
            transaction fees and gross FX fees. * Payments not involving foreign exchange
            - The amount of the payment, in units of the currency defined in currency,
            including gross transaction fees. Response only.'
          type: number
        outcome:
          $ref: '#/components/schemas/Outcome'
        paid:
          default: false
          description: Indicates whether the payment has been fully captured. Response
            only.
          type: boolean
        paid_at:
          default: 0
          description: Time of the last capture, in Unix time. Response only.
          type: number
        payment_fees:
          $ref: '#/components/schemas/PaymentFee'
        payment_method:
          description: payment_method ID or object. If not specified in this field,
            the payment method is the default payment method specified for the customer.
            Mandatory when there is no default payment method. For a description of
            the fields in the payment_method object, see Customer Payment Method Object.
          type: string
        payment_method_data:
          description: Details of the payment_method_data object. See Payment Method Data Object. Response only.
          type: object
          nullable: true
        payment_method_options:
          description: Object describing additional payment method fields required
            for the payment. These values are not saved as part of the payment method
            object. To determine the fields required, run Get Payment Method Required
            Fields.
          type: object
          x-isDynamicObject: true
        payment_method_type:
          description: "A type of payment method that a customer can use for making\
            \ payments.\n The payment method type has a suffix with one of the following\
            \ values [_bank, _card, _cash, _ewallet]"
          type: string
        payment_method_type_category:
          description: Category of payment method type. Read-only.
          enum:
            - bank_transfer
            - bank_redirect
            - card
            - cash
            - ewallet
          type: string
        receipt_email:
          description: Email address that the receipt for this transaction is sent
            to
          type: string
        receipt_number:
          description: Reserved. Response only
          type: string
        redirect_url:
          description: URL where the customer is redirected for additional steps required
            for the payment. Response only. To simulate 3DS authentication in the
            sandbox, see Simulating 3DS Authentication
          type: string
        refunded:
          default: false
          description: Indicates whether there was a refund against this payment.
            Response only.
          type: boolean
        refunded_amount:
          default: 0.0
          description: The total amount refunded against this payment, in units of
            the currency defined in currency. Response only.
          type: number
        refunds:
          description: Refunds object
          type: object
          properties:
            data:
              type: array
              items:
                type: string
            has_more:
              type: boolean
            total_count:
              type: integer
            url:
              type: string
        remitter_information:
          description: Contains the customer name and the associated bank account.
            This includes - * name - Name of the customer. * account_id - ID of the
            customer's bank account. * bank_code - SWIFT code for the customer's bank.
            Response only.
          type: object
        save_payment_method:
          description: '* true - Saves the card for future use. This is the default.
            * false - Does not save the card.
            Relevant when payment_method_type_category is card and the "Create Payment" request includes full card details.'
          type: boolean
        statement_descriptor:
          description: A text description suitable for a customer's payment statement.
            Limited to 22 characters. If this field is not specified, Rapyd populates it with the name of the merchant
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        textual_codes:
          description: "A set of text codes for the customer to use to complete the\
            \ steps described in the instructions field. Response only. \n The name\
            \ of the field is the local name of the code, or some other label. For\
            \ example \n * code * paycode * pay_code * payid * pairing_code * payment_code\
            \ * response_code"
          type: object
        transaction_id:
          description: ID of the associated transaction. Response only
          type: string
        visual_codes:
          description: A set of images for the customer to use to complete the steps
            described in the instructions field. For example, a QR code or barcode.
            Response only.
          type: object
      type: object
    PaymentFee:
      nullable: true
      properties:
        fx_fee:
          $ref: '#/components/schemas/FxFee'
        gross_fees:
          description: The total gross fees for the transaction, in units defined
            by currency_code. Relevant to responses.
          example: 4.23
          type: number
        net_fees:
          description: The total net fees for the transaction, in units defined by
            merchant_requested_currency. Relevant to responses.
          example: 0
          type: number
        transaction_fee:
          $ref: '#/components/schemas/TransactionFee'
        total_merchant_fees:
          description: The amount of the fee.
          type: number
      type: object
    PaymentMethodType:
      description: A type of payment method that a customer can use for making payments.
      properties:
        amount_range_per_currency:
          $ref: '#/components/schemas/PaymentAmountRangePerCurrency'
        category:
          $ref: '#/components/schemas/Category'
        country:
          $ref: '#/components/schemas/Country'
        currencies:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        image:
          description: A URL to the image of the icon for the type of payment method.
            Response only
          type: string
        is_cancelable:
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
          type: boolean
        is_expirable:
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
          type: boolean
        is_online:
          description: Indicates whether the payment is completed immediately online.
            Response only
          type: boolean
        is_refundable:
          description: Indicates whether the payment method type supports refunds
          type: boolean
        is_tokenizable:
          description: Indicates whether the token of the payment method can be used
            in a collect operation
          type: boolean
        is_virtual:
          description: Indicates whether a Web-based version of the payment method
            type exists
          type: boolean
        maximum_expiration_seconds:
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
          type: number
        minimum_expiration_seconds:
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
          type: number
        multiple_overage_allowed:
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
          type: boolean
        name:
          description: The name of the payment method, in user-friendly terms. For
            example, Ireland Visa card. Response only
          type: string
        payment_flow_type:
          type: string
          enum:
            - direct
            - eWallet
            - ewallet_payout
            - card
            - redirect_url
            - cash
            - bank_transfer
        payment_options:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodTypeField'
        status:
          description: Indicates the status of the payment method. One of the following
            value is 1 means the payment_method_type is Valid
          type: number
        supported_digital_wallet_providers:
          description: Describes the digital wallet providers that support the payment
            method. These providers may include apple_pay and google_pay
          items:
            type: string
          type: array
        type:
          description: Type of the payment method. For example, it_visa_card
          type: string
        virtual_payment_method_type:
          description: Indicates the name of the Web-based version of this payment
            method type
          type: string
        is_restricted:
          description: Indicates if the payment method type restricted or not.
          type: boolean
        supports_subscription:
          description: Indicates if the payment method type supports subscription.
          type: boolean
      type: object
    PaymentMethodTypeRequiredFields:
      description: Payment Method Type required fields
      properties:
        fields:
          description: Payment Method Type required field
          items:
            $ref: '#/components/schemas/PaymentMethodTypeField'
          type: array
        maximum_expiration_seconds:
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
          type: number
        minimum_expiration_seconds:
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true
          type: number
        payment_method_options:
          description: payment method option
          items:
            $ref: '#/components/schemas/PaymentMethodTypeField'
          type: array
        payment_options:
          items:
            $ref: '#/components/schemas/PaymentMethodTypeField'
          type: array
        type:
          type: string
      type: object
    PaymentFields:
      description: A payment method type is a type of payment method that any customer
        can use, for example, ee_mastercard_card, Mastercard for Estonia. When it
        is added to a customer profile, it becomes a payment method that is specific
        to that one customer. The name of the payment method type starts with a prefix
        for the country, the 2-letter ISO 3166-1 alpha-2 code. If the payment method
        is valid in multiple countries, the prefix is xx_. The payment method type
        has a suffix with one of the following values - _bank - Bank transfer or bank
        redirect _card - Credit card, debit card or other card _cash - Cash _ewallet
        - Local eWallet
      properties:
        address:
          $ref: '#/components/schemas/Address'
        amount_range_per_currency:
          $ref: '#/components/schemas/PaymentAmountRangePerCurrency'
        bin_details:
          $ref: '#/components/schemas/BinDetails'
        category:
          $ref: '#/components/schemas/Category'
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        country:
          $ref: '#/components/schemas/Country'
        currencies:
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        customer:
          $ref: '#/components/schemas/Customer'
        fingerprint:
          description: Hash of the card number, expiration date and CVV. Read-only.
            Relevant to cards
          type: string
        image:
          description: A URL to the image of the icon for the type of payment method.
            Response only
          type: string
        instructions:
          description: Instructions for the field. Response only
          type: string
        is_cancelable:
          description: Indicates whether a payment made with this payment method can
            be canceled. Response only
          type: boolean
        is_expirable:
          description: Indicates whether the merchant can set an expiration time for
            the customer to complete the payment. Response only
          type: boolean
        is_online:
          description: Indicates whether the payment is completed immediately online.
            Response only
          type: boolean
        is_refundable:
          description: Indicates whether the payment method type supports refunds
          type: boolean
        is_required:
          description: Whether the field is required for using the payment method.
            When the conditions defined by conditions are met, the field is required
            even though the value of is_required is false. Response only
          type: boolean
        is_tokenizable:
          description: Indicates whether the token of the payment method can be used
            in a collect operation
          type: boolean
        is_virtual:
          description: Indicates whether a Web-based version of the payment method
            type exists
          type: boolean
        last4:
          $ref: '#/components/schemas/Last4'
        maximum_expiration_seconds:
          description: The maximum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
          type: integer
        minimum_expiration_seconds:
          description: The minimum time (in seconds) that the merchant can set for
            completing the payment. Relevant when is_expirable is true. Response only
          type: integer
        multiple_overage_allowed:
          description: Indicates whether multiple overage charges are allowed for
            this payment method type
          type: boolean
        name:
          description: The name of the payment method, in user-friendly terms. For
            example, 'Ireland Visa card'. Response only
          type: string
        payment_flow_type:
          type: string
          enum:
            - direct
            - eWallet
            - ewallet_payout
            - card
            - redirect_url
      type: object
    PaymentMethodTypeField:
      description: Additional fields of the payment object which are required for the payment.
      type: object
      x-isDynamicObject: true
      properties:
        name:
          description: Field name
          type: string
        type:
          description: Type of the field
          type: string
        regex:
          description: ""
          type: string
        is_required:
          description: Whether the field is always required for using the payment
            method
          type: boolean
        is_updatable:
          description: ndicates whether the field can be updated with Update Payment
            Method
          type: boolean
        description:
          description: ""
          type: string
        required_fields:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodTypeField'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        instructions:
          type: string
      required: [name, type, regex, is_required]
    PaymentRequest:
      properties:
        address:
          $ref: '#/components/schemas/Address'
        amount:
          default: 0.0
          description: The amount received by the recipient, in units of the
            currency defined in currency. Decimal, including the correct number
            of decimal places for the currency exponent, as defined in ISO
            2417:2015. To verify a card, set to 0.
          type: number
        capture:
          default: true
          description: Determines when the payment is processed for capture.
            When true, the payment is captured immediately. When false, the
            payment is captured at a later time. Relevant to cards. Default
            is true.
          type: boolean
        client_details:
          $ref: '#/components/schemas/ClientDetailsObject'
        complete_payment_url:
          description: URL where the customer is redirected after successfully
            completing an operation on an external page.
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
        customer:
          description: string - ID of the customer who is making the payment.
            String starting with cus_. Required if payment_method is blank.
            object - Contains all required fields
          type: string
        description:
          description: Description of the payment
          type: string
        error_payment_url:
          description: URL where the customer is redirected in case of an
            error in the operation. Provided by the client.Relevant to bank
            redirect payment methods
          type: string
        escrow:
          description: Determines whether the payment is held in escrow for
            later release.
          type: boolean
        escrow_release_days:
          description: Determines the number of days after creation of the
            payment that funds are released from escrow. Funds are released
            at 5:00 pm GMT on the day indicated. Integer, range between 1-90.
            Default is 90.
          pattern: /[1-90]/
          type: integer
        ewallet:
          description: ID of the wallet that the money is paid into. String
            starting with ewallet_. Relevant when the request includes a single
            wallet.
          type: string
        ewallets:
          description: Represents the wallets that the money is paid into.
            Array of objects.
          items:
            $ref: '#/components/schemas/Ewallet'
          type: array
        expiration:
          default: 0
          description: End of the time allowed for customer to make this payment,
            in Unix time. Must be after the current time
          type: number
        fixed_side:
          description: Indicates whether the FX rate is fixed for the buy
            side (seller's Rapyd Wallet) or for the sell side (buyer).
          type: string
        group_payment:
          description: ID of the group payment, a string starting with 'gp_'.
            Relevant to replacing a payment that failed.
          type: string
        initiation_type:
          description: Describes how the transaction was initiated.
          enum:
            - customer_present
            - installment
            - moto
            - recurring
            - unscheduled
          type: string
        merchant_reference_id:
          description: ID defined by the client. Limited to 255 characters.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        payment_fees:
          $ref: '#/components/schemas/PaymentFee'
        payment_method:
          description: Payment Method object or ID.
          oneOf:
            - type: string
            - properties:
                type:
                  type: string
                fields:
                  type: object
        payment_method_options:
          description: Object describing additional information required for
            the payment. The object is returned by Get Payment Method Required
            Fields. Note that Transactions with 3DS authentication must be
            authenticated within 15 minutes, after which the possibility to
            authenticate expires.
          type: object
        receipt_email:
          description: Email address that the receipt for this transaction
            is sent to.
          type: string
        requested_currency:
          description: When fixed_side is sell, it is the currency received
            in the Rapyd Wallet. . When fixed_side is buy, it is the currency
            charged to the buyer (customer). Three-letter ISO 4217 code.
          type: string
        statement_descriptor:
          description: A text description that appears in the customer's bank statement.
          type: string
      type: object
    Payout:
      properties:
        amount:
          description: Amount of the payout, in units defined by payout_currency.
            Decimal, including the correct number of decimal places for the currency
            exponent, as defined in ISO 2417:2015. Same as payout_amount. Response
            only.
          example: 1000
          type: number
        beneficiary:
          $ref: '#/components/schemas/Beneficiary'
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        created_at:
          type: integer
          description: Time of creation of the payout, in Unix time. Response only.
        description:
          description: Description of the payout transaction.
          type: string
        error:
          description: Indicates the error code of the last unsuccessful operation
            on the Payout object.
          nullable: true
          type: string
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive the funds.
        ewallets:
          description: 'An array of one object, which contains the following fields:
            * ewallet_id - The ID of the wallet that the money is transferred from,
            a string starting with ewallet_. * amount - Amount of the transaction
            in currency units defined in currency. * percent - A decimal number representing
            a percentage of the total payout. Response only.'
          items:
            properties:
              amount:
                description: The amount of the payment to the wallet, in units of
                  the currency defined in currency. Decimal. If the total amount of
                  the payment is not fully accounted for, the balance appears in the
                  client wallet. Relevant when percentage is not set.
                type: number
              ewallet_id:
                description: ID of the wallet. String starting with ewallet_. Read-only.
                type: string
              percent:
                description: The percentage that is paid to the wallet out of the
                  total payment. Read-only.
                type: number
            type: object
          type: array
        expiration:
          description: Determines the day the payout expires, in Unix time. The payout must be completed before the start of this day. Relevant to cash payout methods where the is_expirable field is true in the response to List Payout Method Types.
          example: 1607941348
          nullable: true
          type: number
        fx_rate:
          description: Currency conversion rate for the payout. Decimal. Response only.
          type: string
        gc_error_code:
          description: Reserved. Response only.
          nullable: true
          type: string
        id:
          description: ID of the payout. String starting with payout_.
          example: payout_548969fc5a0bf89da3cec70a1529338c
          type: string
        identifier_type:
          description: Reserved. Response only.
          nullable: true
          type: string
        identifier_value:
          description: Reserved. Response only.
          nullable: true
          type: string
        instructions:
          description: >
            Describes how the customer collects the payout. Contains the
            following fields: * name - Short description of the instructions. * steps
            - A 'steps' object containing a list of steps for the customer to take.
            Each step is named stepN, where N is an integer.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              steps:
                type: array
                items:
                  type: object
                  x-isDynamicObject: true
        instructions_value:
          description: Additional information from the merchant. For example, the
            merchant's instructions and transaction number that must be presented
            for collecting the payout.
          type: object
        merchant_reference_id:
          description: ID defined by the client. Limited to 255 characters.
          example: GHY-0YU-HUJ-POI
          nullable: true
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        paid_amount:
          description: Cumulative amount received by the beneficiary, in units defined
            by payout_currency. Response only.
          example: 1000
          type: number
        paid_at:
          description: Time of the payout, in Unix time. Response only.
          example: 1607941348
          nullable: true
          type: string
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_fees:
          $ref: '#/components/schemas/PayoutFees'
        payout_method_type:
          description: The type of payout method. The two-letter prefix must match the beneficiary country computed.
          example: us_general_bank
          type: string
        payout_type:
          description: The type of the payout method.
          enum:
            - card
            - cash
            - ewallet
            - bank
            - rapyd_ewallet
          example: bank
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        sender_amount:
          type: number
          description: "Amount that the sender is paying in units of the currency\
            \ defined in sender_currency. \nThis amount remains the same regardless\
            \ of FX fees. Required when payout_amount is not used. Decimal.\n"
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        statement_descriptor:
          description: A statement that includes the reason for the payout. Limited to 35 characters.
          type: string
        status:
          $ref: '#/components/schemas/PayoutStatus'
      type: object
    PayoutFees:
      nullable: true
      properties:
        fx_fee:
          $ref: '#/components/schemas/FxFee'
        gross_fees:
          description: The total gross fees for the transaction, in units defined
            by currency_code. Relevant to responses.
          example: 4.23
          type: number
        net_fees:
          description: The total net fees for the transaction, in units defined by
            merchant_requested_currency. Relevant to responses.
          example: 0
          type: number
        transaction_fee:
          $ref: '#/components/schemas/TransactionFee'
      type: object
    PayoutMethodType:
      properties:
        amount_range_per_currency:
          description: 'An array of objects that describe limits on the amount, per
            currency. Contains the following fields:

            maximum_amount - Maximum amount supported by this payout method for the
            indicated currency. Decimal number.

            minimum_amount - Minimum amount supported by this payout method for the
            indicated currency. Decimal number.

            * payout_currency - Currency of the payout. Three-letter ISO 4217 code.
            Uppercase.'
          items:
            $ref: '#/components/schemas/PayoutAmountRangePerCurrency'
          type: array
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        beneficiary_entity_types:
          description: 'A list of the beneficiary entity types supported by this payout
            method. One or more of the following:
            company
            individual
            Response only.'
          example:
            - company
            - individual
          items:
            $ref: '#/components/schemas/EntityType'
          type: array
        category:
          $ref: '#/components/schemas/Category'
        image:
          description: URL of an image that the merchant can use to represent the
            payout method.
          type: string
        is_cancelable:
          description: Indicates whether the payout can be canceled. Relevant when category is cash.
            One of the following values
            0 - Not cancelable.
            1 - cancelable.'
          type: integer
        is_expirable:
          description:
            Indicates whether the payout expires if not completed. Relevant when category is cash.
            One of the following values
            0 - Not expirable.
            1 - expirable.'
          type: integer
        is_location_specific:
          description:
            Indicates whether the payout must be made at a specific physical location. Relevant when category is cash.
            One of the following values
            0 - Not locationspecific.
            1 - location specific.'
          type: integer
        maximum_expiration_seconds:
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
          type: number
        minimum_expiration_seconds:
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
          type: number
        name:
          description: Payout method name.
          type: string
        payout_currencies:
          description: A list of the currencies supported by this payout method. Three-letter
            ISO 4217 code. Uppercase. Response only.
          example:
            - USD
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        payout_method_type:
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when default_payout_method_type
            is not used.
          example: us_general_bank
          type: string
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currencies:
          description: List of currencies that the sender is paying with. Currency
            consists of a three-letter ISO 4217 code. Response only.
          example:
            - USD
          items:
            $ref: '#/components/schemas/Currency'
          type: array
        sender_entity_types:
          description: 'A list of the sender entity types supported by this payout
            method. One or more of the following:

            company

            individual

            Response only.

            '
          example:
            - company
            - individual
          items:
            $ref: '#/components/schemas/EntityType'
          type: array
        estimated_time_of_arrival:
          type: string
          description: The estimated time period in which the beneficiary will receive the funds.
        status:
          description: 'Indicates whether the payout method is currently available.
            One of the following values:
            0 - Not available.
            1 - Available.'
          type: integer
      type: object
    PayoutMethodTypeDetails:
      properties:
        batch_file_header:
          description: concatenation of all fields.
          type: string
        beneficiary_country:
          $ref: '#/components/schemas/Country'
        beneficiary_entity_type:
          $ref: '#/components/schemas/EntityType'
        beneficiary_required_fields:
          description: Lists all the beneficiary required fields for payout method
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
          type: array
        image:
          description: URL of an image that the merchant can use to represent the
            payout method.
          type: string
        is_cancelable:
          description: Indicates whether the payout can be canceled. Relevant when category is cash.
            One of the following values
            0 - Not cancelable.
            1 - cancelable.'
          type: integer
        is_expirable:
          description:
            Indicates whether the payout expires if not completed. Relevant when category is cash.
            One of the following values
            0 - Not expirable.
            1 - expirable.'
          type: integer
        is_location_specific:
          description:
            Indicates whether the payout must be made at a specific physical location. Relevant when category is cash.
            One of the following values
            0 - Not location specific.
            1 - location specific.'
          type: integer
        is_online:
          description: Indicates whether the payout is made automatically, without
            any action by the beneficiary.
          type: boolean
        maximum_amount:
          description: Maximum amount supported by this payout method for the indicated
            currency. Decimal number.
          type: number
        maximum_expiration_seconds:
          description: The maximum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
          type: number
        minimum_amount:
          description: Minimum amount supported by this payout method for the indicated
            currency. Decimal number.
          type: number
        minimum_expiration_seconds:
          description: The minimum time (in seconds) that the merchant can set for
            completing the payout. Relevant when is_expirable is true.
          type: number
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_method_type:
          description: The type of payout method. The two-letter prefix must match
            the beneficiary country code. Required when default_payout_method_type
            is not used.
          example: us_general_bank
          type: string
        payout_options:
          description: Lists all the payout options for payout method
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
          type: array
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
        sender_required_fields:
          description: Lists all the sender required fields for payout method
          items:
            $ref: '#/components/schemas/PayoutRequiredFields'
          type: array
        status:
          description: 'Indicates whether the payout method is currently available.
            One of the following values:
            0 - Not available.
            1 - Available.'
          type: integer
      type: object
    PayoutRequest:
      properties:
        beneficiary:
          description: String starting with beneficiary_ or the object describing
            the beneficiary.
          oneOf:
            - type: string
            - $ref: '#/components/schemas/Beneficiary'
        beneficiary_country:
          description: Country of the beneficiary. Two-letter ISO 3166-1 ALPHA-2
            code. Uppercase.
          example: US
          type: string
        beneficiary_entity_type:
          description: 'Type of entity for the beneficiary. One of the following:
            individual, company'
          enum:
            - individual
            - company
          type: string
        confirm_automatically:
          default: false
          description: Determines whether completion of the payout requires
            confirmation of the FX rate. Relevant to payouts with foreign
            exchange. Default is false.
          type: boolean
        converstion_rate:
          default: 1
          description: conversion rate
          type: number
        description:
          description: Description of the payout transaction.
          type: string
        ewallet:
          description: ID of the wallet that the money is transferred from.
            String starting with ewallet_.
          example: ewallet_4f1757749b8858160274e6db49f78ff3
          type: string
        expiration:
          description: Determines the day the payout expires, in Unix time.
            The payout must be completed before the start of this day. Relevant
            to cash payouts.
          example: 1607941348
          type: string
        location:
          description: Location of the payout transaction.
          type: string
        merchant_reference_id:
          description: ID defined by the client. Limited to 255 characters.
          example: GHY-0YU-HUJ-POI
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        payout_amount:
          description: Amount of the payout, in units of the currency defined
            in payout_currency. Mandatory when sender_amount is not used.
            Decimal.
          example: 110
          type: number
        payout_currency:
          $ref: '#/components/schemas/Currency'
        payout_method_type:
          description: The type of payout method. The two-letter prefix must
            match the beneficiary country code. Required when the beneficiary
            does not have a default payout method type.
          example: us_general_bank
          type: string
        payout_options:
          description: Payout options
          type: object
        sender:
          description: String starting with sender_ or the object describing
            the sender.
          oneOf:
            - type: string
            - $ref: '#/components/schemas/Sender'
        sender_country:
          $ref: '#/components/schemas/Country'
        sender_currency:
          $ref: '#/components/schemas/Currency'
        sender_entity_type:
          $ref: '#/components/schemas/EntityType'
        statement_descriptor:
          description: A statement that includes the reason for the payout. Limited to 35 characters.
          type: string
      type: object
    PayoutRequiredFields:
      properties:
        allowed_values:
          description: List out the allowed values
          type: string
        description:
          description: Description of the field
          type: string
        is_required:
          description: Indicates whether the field is always required for using the
            payout method
          type: boolean
        name:
          description: Name of the field
          type: string
        regex:
          description: 'A regular expression that defines the format when type is
            string. Note: Rapyd uses a unique variant of the regex standard
            https://docs.rapyd.net/build-with-rapyd/reference/payout-method-types#rapyd-regex'
          type: string
        transfer_type:
          description: Indicates transfer type of the payout
          type: string
        type:
          description: Indicates datatype of the field
          enum:
            - boolean
            - number
            - string
          type: string
      type: object
    PayoutStatus:
      enum:
        - Created
        - Completed
        - Canceled
        - Rejected
        - Error
        - Confirmation
        - Expired
        - Returned
      type: string
    PaymentStatus:
      default: ACT
      enum:
        - ACT
        - CLO
        - ERR
        - CAN
        - EXP
        - DLD
        - REV
        - UND
        - CRE
      type: string
    PaymentParams:
      properties:
        complete_payment_url:
          description: URL where the customer is redirected after successfully completing an operation on a hosted page. Does not support localhost URLs.
          type: string
        error_payment_url:
          description: URL where the customer is redirected if an error occurs during or after an operation on a hosted page. Does not support localhost URLs.
          type: string
      type: object
    Plan:
      properties:
        active:
          description: 'Indicates whether the plan is available to be added to a subscription.'
          type: boolean
        aggregate_usage:
          description: "Determines which quantity is used to calculate the pricing.\
            \ One of the following: \n* max - The maximum reported usage within the\
            \ billing cycle. \n* sum - The sum of all usage during a billing cycle.\
            \ This is the default. \n* last_during_period - The last usage reported\
            \ within the billing cycle. \n* last_ever - The last usage ever reported,\
            \ if the latest billing cycles contain no usage at all. Required when\
            \ usage_type is metered. Relevant when billing_scheme is set to per_unit.\n"
          enum:
            - max
            - sum
            - last_during_period
            - last_ever
          example: sum
          type: string
        amount:
          description: The amount to charge, in units of the currency defined in currency.
            Decimal, including the correct number of decimal places for the currency
            exponent, as defined in ISO 2417:2015. If the amount is a whole number,
            use an integer and not a decimal. For a free service, use 0. Must be null
            when tiers is set. Relevant when billing_scheme is set to per_unit.
          example: 0
          type: number
        billing_scheme:
          description: "Describes how to compute the price. One of the following:\
            \ \n* per_unit - The amount specified in amount is charged for each unit.\
            \ Also set these related fields: amount, transform_usage, usage_type,\
            \ aggregate_usage. This is the default. \n* tiered - The unit pricing\
            \ is computed using a tiering strategy as defined with the tiers and tiers_mode\
            \ fields.\n"
          enum:
            - per_unit
            - tiered
          example: tiered
          type: string
        created_at:
          description: Time the 'plan' object was created, in Unix time. Response
            only.
          example: 1592311574
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          description: Unique ID for this plan. English alphanumeric characters with
            no special characters except underscore. If the client does not define
            an ID, Rapyd generates a string starting with plan_.
          example: plan_51788cf4ed1b672cb0a2a97773887f5b
          type: string
        interval:
          description: "Specifies the units used in defining the billing cycle. One\
            \ of the following: \n* day \n* week \n* month \n* year Maximum interval\
            \ is 1 year. \n"
          enum:
            - month
            - day
            - week
            - year
          example: month
          type: string
        interval_count:
          description: Number of time intervals in the billing cycle. Integer
          example: 2
          type: number
        metadata:
          description: A JSON object defined by the client.
          type: object
          example: {}
        nickname:
          description: Brief description of the plan.
          example: Basic Parking
          type: string
        product:
          description: The ID of the product that this plan is for, and fields describing
            this product in the plan.
          oneOf:
            - $ref: '#/components/schemas/Product'
            - example: product_ab9599d248f6d4d4311148aea68e20d0
              type: string
          nullable: true
        tiers:
          description: Defines a tiered pricing structure. Each tier object represents
            a pricing tier.
          items:
            properties:
              amount:
                description: The price for each item in this tier. Decimal number.
                example: 15
                type: number
              flat_amount:
                description: Additional price for the entire tier. Default is 0.
                example: 0
                type: number
              up_to:
                description: 'The upper volume limit for this tier. Valid values:
                  inf (infinite) or an integer.'
                example: inf
                oneOf:
                  - example: inf
                    type: string
                  - example: 1
                    type: number
            type: object
          type: array
        tiers_mode:
          description: "Determines the mode for calculating the total tiered charge.\
            \ One of the following values: \n* graduated - The total cost at each\
            \ price tier is calculated separately, then all tier charges are added\
            \ together. \n* volume - The total cost is calculated as the number of\
            \ items times the applicable tier price. Relevant when billing_scheme\
            \ is set to tiered\n"
          enum:
            - graduated
            - volume
          example: volume
          type: string
        transform_usage:
          description: Defines the transformation that is applied to the reported
            usage before the billed price is computed. The transformation divides
            the quantity by the divisor specified in divide_by, then rounds up or
            down according to the setting in round. Relevant when billing_scheme is
            set to per_unit.
          properties:
            divide_by:
              description: Indicates the divisor in the transformation calculation.
                Integer. Default is 1.
              example: 1
              type: number
            round:
              description: Indicates whether the reported number of units should be
                rounded up or down to the next whole quantity specified in divide_by.
                String. Default is up.
              type: string
          type: object
        trial_period_days:
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
          example: 0
          type: number
        usage_type:
          description: "Determines whether the customer is billed when the service\
            \ is not actually used. Relevant when billing_scheme is set to per_unit.\
            \ One of the following: \n* metered - The customer is billed only for\
            \ actual usage. You must also set aggregate_usage. \n* licensed - The\
            \ customer is billed even if the service is not used. This is the default.\n"
          enum:
            - metered
            - licensed
          example: licensed
          type: string
      type: object
    PlanObject:
      properties:
        aggregate_usage:
          description: "Determines which quantity is used to calculate the pricing.\
            \ One of the following: \n* max - The maximum reported usage within the\
            \ billing cycle. \n* sum - The sum of all usage during a billing cycle.\
            \ This is the default. \n* last_during_period - The last usage reported\
            \ within the billing cycle. \n* last_ever - The last usage ever reported,\
            \ if the latest billing cycles contain no usage at all. Required when\
            \ usage_type is metered. Relevant when billing_scheme is set to per_unit.\n"
          enum:
            - max
            - sum
            - last_during_period
            - last_ever
          example: sum
          type: string
        amount:
          description: The amount to charge, in units of the currency defined in currency.
            Decimal, including the correct number of decimal places for the currency
            exponent, as defined in ISO 2417:2015. If the amount is a whole number,
            use an integer and not a decimal. For a free service, use 0. Must be null
            when tiers is set. Relevant when billing_scheme is set to per_unit.
          example: 0
          type: number
        billing_scheme:
          description: "Describes how to compute the price. One of the following:\
            \ \n* per_unit - The amount specified in amount is charged for each unit.\
            \ Also set these related fields: amount, transform_usage, usage_type,\
            \ aggregate_usage. This is the default. \n* tiered - The unit pricing\
            \ is computed using a tiering strategy as defined with the tiers and tiers_mode\
            \ fields.\n"
          example: tiered
          type: string
        created_at:
          description: Time the 'plan' object was created, in Unix time. Response
            only.
          example: 1592311574
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          description: Unique ID for this plan. English alphanumeric characters with
            no special characters except underscore. If the client does not define
            an ID, Rapyd generates a string starting with plan_.
          example: plan_51788cf4ed1b672cb0a2a97773887f5b
          type: string
        interval:
          description: "Specifies the units used in defining the billing cycle. One\
            \ of the following: \n* day \n* week \n* month \n* year Maximum interval\
            \ is 1 year. \n"
          enum:
            - month
            - day
            - week
            - year
          example: month
          type: string
        interval_count:
          description: Number of time intervals in the billing cycle. Integer
          example: 2
          type: number
        metadata:
          description: A JSON object defined by the client.
          type: object
        nickname:
          description: Brief description of the plan.
          example: Basic Parking
          type: string
        product:
          description: The ID of the product that this plan is for, and fields describing
            this product in the plan.
          oneOf:
            - $ref: '#/components/schemas/Product'
            - example: product_ab9599d248f6d4d4311148aea68e20d0
              type: string
        tiers:
          description: Defines a tiered pricing structure. Each tier object represents
            a pricing tier.
          items:
            properties:
              amount:
                description: The price for each item in this tier. Decimal number.
                example: 15
                type: number
              flat_amount:
                description: Additional price for the entire tier. Default is 0.
                example: 0
                type: number
              up_to:
                description: 'The upper volume limit for this tier. Valid values:
                  inf (infinite) or an integer.

                  '
                example: inf
                oneOf:
                  - example: inf
                    type: string
                  - example: 1
                    type: number
            type: object
          type: array
        tiers_mode:
          description: "Determines the mode for calculating the total tiered charge.\
            \ One of the following values: \n* graduated - The total cost at each\
            \ price tier is calculated separately, then all tier charges are added\
            \ together. \n* volume - The total cost is calculated as the number of\
            \ items times the applicable tier price. Relevant when billing_scheme\
            \ is set to tiered\n"
          enum:
            - graduated
            - volume
          example: volume
          type: string
        transform_usage:
          description: Defines the transformation that is applied to the reported
            usage before the billed price is computed. The transformation divides
            the quantity by the divisor specified in divide_by, then rounds up or
            down according to the setting in round. Relevant when billing_scheme is
            set to per_unit.
          properties:
            divide_by:
              description: Indicates the divisor in the transformation calculation.
                Integer. Default is 1.
              example: 1
              type: number
            round:
              description: Indicates whether the reported number of units should be
                rounded up or down to the next whole quantity specified in divide_by.
                String. Default is up.
              type: string
          type: object
        trial_period_days:
          description: Specifies the number of days before charges begin to accrue.
            Use this parameter to define a free trial period for a service.
          example: 0
          type: number
        usage_type:
          description: "Determines whether the customer is billed when the service\
            \ is not actually used. Relevant when billing_scheme is set to per_unit.\
            \ One of the following: \n* metered - The customer is billed only for\
            \ actual usage. You must also set aggregate_usage. \n* licensed - The\
            \ customer is billed even if the service is not used. This is the default.\n"
          enum:
            - metered
            - licensed
          example: licensed
          type: string
      type: object
    Product:
      properties:
        active:
          description: Indicates whether the product is currently available for purchase.
          example: true
          type: boolean
        attributes:
          description: 'Up to 5 unique alphanumeric strings defined by the merchant.
            Cannot contain spaces. For example: [ > "size", > "color"] Each string
            defines the key in a key-value pair in the ''attributes'' object in the
            corresponding ''sku'' objects.'
          example:
            - armrest
            - color
            - cover
          items:
            type: string
          type: array
        created_at:
          description: Time of creation of this product, in Unix time. Response only.
          example: 1592299157
          type: number
        description:
          description: Full text description of the product.
          example: The ultimate in comfort for the dedicated gamer
          type: string
        id:
          description: Unique string for identification of the product. Legal input
            includes alphanumeric characters and the underscore () character. If the
            merchant does not define an ID, Rapyd generates it with a string that
            starts with **product**.
          example: product_0d9dc6be69c769560fe913f3b086d8ca
          type: string
        images:
          description: Images associated with the product.
          example:
            - 64bit-encoded-image-1
            - 64bit-encoded-image-2
          items:
            type: string
          type: array
        metadata:
          description: A JSON object defined by the client.
          type: object
        name:
          description: The name of the product or service that appears in the line
            items in invoices.
          example: Gamer's Red Chair
          type: string
        package_dimensions:
          description: "Describes the physical size and weight of the product. Contains\
            \ the following fields: \n* height \n* length \n* weight \n* width \n\
            These fields are represented as numbers, but it is the responsibility\
            \ of the merchant to define and interpret the relevant units of length\
            \ and weight.\n"
          properties:
            height:
              description: NA
              example: 10
              type: number
            length:
              description: NA
              example: 20
              type: number
            weight:
              description: NA
              example: 100
              type: number
            width:
              description: NA
              example: 40
              type: number
          type: object
        shippable:
          description: Indicates whether the product can be shipped.
          example: true
          type: boolean
        skus:
          items:
            $ref: '#/components/schemas/Sku'
          type: array
        statement_descriptor:
          description: Description that is suitable for a customer's statement.
            Limited to 22 characters. Relevant when type is service. Must be null when type is goods.
          type: string
        type:
          description: "One of the following: \n* services - Relevant to subscriptions\
            \ and plans. \n* goods - Relevant to orders and SKUs.\n"
          enum:
            - goods
            - services
            - service
          example: goods
          type: string
        unit_label:
          description: "Determines what one unit of this product is called on customers\xE2\
            \u20AC\u2122 receipts and invoices, such as minutes, viewings, kilometers\
            \ or packages. Relevant when type is service. Must be null when type is\
            \ goods."
          type: string
        updated_at:
          description: Time that this product was last updated, in Unix time. Response
            only.
          example: 1592300812
          type: number
      type: object
    Refund:
      properties:
        amount:
          description: Amount of the refund, in units defined by currency in the original
            payment. Decimal, including the correct number of decimal places for the
            currency exponent, as defined in ISO 2417:2015.
          type: number
        created_at:
          description: Time of creation of this refund, in Unix time. Response only.
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        ewallets:
          description: 'An array of one object, which contains the following fields:
            * ewallet_id - The ID of the wallet that the money is transferred from,
            a string starting with ewallet_. * amount - Amount of the transaction
            in currency units defined in currency. * percent - A decimal number representing
            a percentage of the total payout. Response only.'
          items:
            properties:
              amount:
                description: The amount of the payment to the wallet, in units of
                  the currency defined in currency. Decimal. If the total amount of
                  the payment is not fully accounted for, the balance appears in the
                  client wallet. Relevant when percentage is not set.
                type: number
              ewallet:
                description: ID of the wallet. String starting with ewallet_. Read-only.
                type: string
            type: object
          type: array
        failure_reason:
          description: Indicates the reason that the refund failed.
          type: string
        fixed_side:
          description: Indicates whether the FX rate is fixed for the buy side or
            for the sell side. Relevant for refunds with foreign exchange. Response
            only.
          type: string
        fx_rate:
          description: Exchange rate for the transaction. When fixed_side is buy,
            fx_rate is the buy rate. When fixed_side is sell, fx_rate is the sell
            rate. Decimal number as string. Relevant to refunds with foreign exchange.
            Response only.
          type: string
        id:
          description: ID of the Refund object. String starting with refund_.
          type: string
        merchant_debited_amount:
          description: Amount debited from the merchant. Relevant to refunds with
            foreign exchange. Response only.
          type: string
        merchant_debited_currency:
          description: Indicates the currency that is debited from the merchant. Three-letter
            ISO 4217 code. Relevant to refunds with foreign exchange. Response only.
          type: string
        merchant_reference_id:
          description: Merchant-defined ID. Limited to 255 characters.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        payment:
          description: D of the Payment object that the refund is credited against.
            String starting with payment_.
          type: string
        payment_created_at:
          description: Time that the original payment was created, in Unix time. Response
            only.
          type: number
        payment_method_type:
          description: The original payment payment method type. Use List Payment
            Methods by Country for a list of supported types for a country
          type: string
        proportional_refund:
          description: Indicates whether the refund was returned in proportion to
            the amounts received by the wallets in the payment. Relevant to a refund
            for a payment split among multiple wallets.
          type: boolean
        reason:
          description: Description of the reason for the refund, provided by the merchant.
          type: string
        receipt_number:
          description: Number of the receipt for the refund, provided by the merchant.
            Response only.
          type: number
        status:
          description: Indicates the status of the refund operation
          type: string
        updated_at:
          description: Time that this refund was last updated, in Unix time. Response
            only.
          type: number
      type: object
    Sender:
      properties:
        account_number:
          description: Bank account number of sender.
          example: 10285730135312349
          type: string
        additional_data:
          description: Additional data required by the payout method. Object..
          type: object
        additional_last_name:
          description: The person's second last name.
          type: string
        address:
          description: The address of the sender.
          type: string
        bank_code:
          description: Domestic identifier of the bank.
          type: string
        bank_name:
          description: Name of the bank.
          type: string
        beneficiary_relationship:
          description: When the beneficiary is not a relative of the sender, the relationship
            should be specified as client or non-relative.
          type: string
        city:
          description: City where the sender is located.
          example: New York
          type: string
        company_name:
          description: Name of the sender company. Relevant when entity_type is company.
          example: ABC
          type: string
        country:
          $ref: '#/components/schemas/Country'
        currency:
          $ref: '#/components/schemas/Currency'
        date_of_birth:
          description: The date of birth of the sender. Relevant when entity_type
            is individual.
          example: 18/03/1990
          type: string
        date_of_incorporation:
          description: Date of incorporation of the corporation.
          example: 18/03/2010
          type: string
        email:
          description: The person's email address.
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        first_name:
          description: First name of the sender. Relevant when entity_type is individual.
          example: Scott
          type: string
        id:
          description: ID of the Sender object. String starting with sender_. Response
            only.
          example: sender_216cf9141fba698e7dc2729d1f439c1b
          type: string
        id_date_of_issue:
          description: The date of issuance of the person's identification document.
          type: string
        id_expiry:
          description: The expiration date of the person's identification document.
          type: string
        id_issue_authority:
          description: The government agency that issued the person's identification
            document.
          type: string
        id_issue_location:
          description: The location where the person's identification document was
            issued.
          type: string
        identification_type:
          description: "Type of identification document for the sender. When entity_type\
            \ is company, this field must be company_registered_number. When entity_type\
            \ is individual, one of the following values: \n* drivers_license \n*\
            \ identification_id \n* international_passport \n* residence_permit* social_security\
            \ \n* work_permit\n"
          example: drivers_license
          type: string
        identification_value:
          description: identification number on the document mentioned in identification_type.
          example: HJKOSN2435460
          type: string
        last_name:
          description: Last name of the sender. Relevant when entity_type is individual.
          example: Williams
          type: string
        merchant_reference_id:
          description: ID defined by the merchant. Rapyd does not validate this value
            to enforce uniqueness.
          type: string
        middle_name:
          description: The person's middle name.
          type: string
        mobile_number:
          description: Mobile phone number in E.164 format.
          type: string
        name:
          description: Name of the sender. Relevant when entity_type is company.
          example: Scott Williams
          type: string
        nationality:
          description: The person's nationality.
          example: US
          type: string
        occupation:
          description: The person's occupation.
          type: string
        phone_country_code:
          description: The country code of the person's phone.
          type: string
        phone_number:
          description: Phone number in E.164 format.
          type: string
        postcode:
          description: Postal code of the sender.
          example: 110005
          type: string
        province:
          description: Province portion of the address.
          type: string
        purpose_code:
          description: Reason for the payout.
          type: string
        source_of_income:
          description: The person's source of income.
          type: string
        state:
          description: State where the sender is located.
          example: New York
          type: string
        suburb:
          description: District of the sender's or beneficiary's city.
          type: string
        tax_id:
          description: Tax identification number.
          type: string
      type: object
    Sku:
      properties:
        active:
          description: Indicates whether the product is currently being sold. Default
            is false.
          example: true
          type: boolean
        attributes:
          description: Up to 5 alphanumeric key-value pairs defined by the merchant.
            Each key must match a string in the attributes list of the corresponding
            product object.
          example:
            color: green
          type: object
        created_at:
          description: Time of creation of this SKU, in Unix time. Response  only.
          example: 1546353713
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        id:
          description: ID of the SKU object. Alphanumeric characters and underscores.
            Defined by the merchant, or a string starting with **sku**.
          example: sku_a6d86bdc6f3a7ef6cb51de5a5678493f
          type: string
        image:
          description: URL of image associated with the product.
          type: string
        inventory:
          description: 'Contains the following fields: type - One of the following
            values: finite - Physical objects that can be counted. infinite - Products
            such as downloadable software. bucket - Products that are sold by measurable
            quantity. quantity - The number of units available in inventory. Integer.
            Relevant when type is finite. value - The status of the product on hand
            in inventory. Relevant when type is bucket. One of the following: in_stock
            - A normal amount of product is available in inventory. limited - There
            is enough product in inventory for small orders only. * out_of_stock -
            No product remains in inventory.'
          type: object
        metadata:
          description: A JSON object defined by the client.
          type: object
        package_dimensions:
          description: Physical attributes of the SKU item. Contains the following
            fields, height length weight width These fields are represented as numbers,
            but it is the responsibility of the merchant to define and interpret the
            relevant units of length and weight.
          properties:
            height:
              description: NA
              example: 1
              type: number
            length:
              description: NA
              example: 2
              type: number
            weight:
              description: NA
              example: 3
              type: number
            width:
              description: NA
              example: 4
              type: number
          type: object
        price:
          description: Price of one unit. Decimal.
          example: 10.99
          type: number
        product:
          description: ID of the product that this SKU relates to.
          example: product_f383d03c34fb499eb3ada4e3c574002a
          type: string
        updated_at:
          description: Time that this product was last updated, in Unix time. Response
            only.
          example: 1546354288
          type: number
      type: object
    Subscription:
      properties:
        billing:
          description: Determines the method of billing at the end of the billing
            cycle. Set to pay_automatically - Rapyd generates a 'payment' object,
            then attempts to pay it using the designated payment method.
          example: pay_automatically
          type: string
        billing_cycle_anchor:
          description: "Determines the start of the next full billing cycle, as defined\
            \ in the plan described in the 'items'. One of the following values: \n\
            * now - The present day. The next billing cycle starts right now. \n*\
            \ Timestamp in Unix time - A time in the future, at or after the end of\
            \ the free trial period, not more than the length of the billing cycle.\
            \ The current billing cycle will be shorter than all other billing cycles.\
            \ Relevant to creation of the subscription. \n* unchanged - The original\
            \ billing cycle anchor is unchanged. Relevant to updating a subscription.\n"
          example: 1592379647
          oneOf:
            - example: now
              type: string
            - example: 1703225137
              type: number
        cancel_at_period_end:
          description: "Determines the last date that charges accrue. true - Charges\
            \ accrue until the end of the current billing period, then the subscription\
            \ is canceled. \n* When no trial period is set, after cancel_at_period_end\
            \ is set to true the subscription will not be renewed at the next interval.\
            \ \n* When a trial period is set after cancel_at_period_end is set to\
            \ true, the subscription will not begin. false - This is the default.\
            \ \n* When the subscription is created, no end is defined. * When Cancel\
            \ Subscription is run, charges stop immediately and the subscription is\
            \ canceled.\n"
          example: true
          type: boolean
        canceled_at:
          description: Date and time that the subscription is canceled by the customer
            or by the client. Unix time. Response only.
          example: null
          nullable: true
          type: number
        created_at:
          description: Time of creation of this subscription, in Unix time. Response
            only.
          example: 1592379647
          nullable: true
          type: number
        current_period_end:
          description: End of the current billing cycle, in Unix time. Response only.
          example: 1594971647
          type: number
        current_period_start:
          description: Start of the current billing cycle, in Unix time. Response
            only.
          example: 1592379647
          type: number
        customer_token:
          description: ID of the customer who pays for this subscription. String starting
            with cus_. Response only.
          example: cus_3f4ed3168413d863671602dfbe839aa2
          type: string
        days_until_due:
          description: Number of days from the invoice date for customer to complete the payment.
          example: 30
          nullable: true
          type: number
        discount:
          description: Contains information about the coupon that applies to the subscription. Response only.
          $ref: '#/components/schemas/SubscriptionDiscount'
        ended_at:
          description: Date that the subscription was canceled or otherwise terminated.
            Unix time. Response only.
          example: null
          nullable: true
          type: number
        id:
          description: ID of the Subscription object. String starting with sub_.
          example: sub_04fd8fbd78d7dd7e0e6323810a69275c
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        payment_fields:
          description: Additional payment_options fields.
          nullable: true
          type: object
        payment_method:
          description: Payment method ID or Payment Method object. if not specified
            in this field, the payment method is the default payment method specified
            for the customer.
          example: card_320dcb1879fbc41f13a81e690636f3c2
          type: string
        payout_fields:
          description: Reserved.
          nullable: true
          type: object
        simultaneous_invoice:
          description: "Determines whether each upcoming subscription invoice is issued\
            \ immediately. \n* true - The invoice is issued when the subscription\
            \ is created. \n* false - The invoice is issued an hour after the subscription\
            \ is created. This is the default.\n"
          example: true
          type: boolean
        status:
          description: "Status of the subscription. One of the following: \n* active\
            \ - The customer is currently paying for this subscription. \n* canceled\
            \ - The customer has canceled this subscription, but it remains in the\
            \ Rapyd database. \n* past_due - Payment for this subscription was not\
            \ received by the end of the billing period. \n* trialing - The subscription\
            \ is in its free trial period. * unpaid - An error occurred in the payment\
            \ for this subscription. Response only.\n"
          enum:
            - active
            - canceled
            - past_due
            - trialing
            - unpaid
          example: active
          type: string
        subscription_items:
          $ref: '#/components/schemas/SubscriptionItems'
        tax_percent:
          description: 'The percentage tax rate that is applied to the subtotal of
            the invoice, after subtracting all discounts. Decimal. Range: 0-100, with
            up to four decimal places.'
          example: 10.5
          type: number
        trial_end:
          description: The date and time of the end of the customer's free trial period,
            in Unix time, or the string now. Takes precedence over trial_period_days.
            If trial_end is not set by the client, Rapyd calculates this date by adding
            trial_period_days to the date in created_at. Relevant when trial_period_days
            is not defined.
          example: null
          nullable: true
          type: number
        trial_start:
          description: Date and time of the start of the customer's free trial period,
            in Unix time. Response only.
          example: null
          nullable: true
          type: number
        type:
          description: "The type of the subscription. One of the following values:\n\
            * payment \n* payout \nResponse only.\n"
          enum:
            - payout
            - payment
          example: payment
          nullable: true
          type: string
        enable_retries:
          description: ""
          type: boolean
        retry_options:
          description: ""
          $ref: '#/components/schemas/SubscriptionRetryOptions'
      type: object
    SubscriptionItems:
      properties:
        data:
          description: A list of up to three subscription items.
          items:
            $ref: '#/components/schemas/SubscriptionItem'
          type: array
        has_more:
          description: Indicates whether there are more than three items in this subscription.
          example: false
          type: boolean
        total_count:
          description: Total number of items in this subscription.
          example: 1
          type: number
        url:
          description: URL for requesting all of the items in this subscription.
          example: /v1/subscription_items?subscription=sub_324ee75f8c26f1df94bc8cc693f3c729
          type: string
      type: object
    SubscriptionItem:
      properties:
        created:
          description: The time the subscription item was created, in Unix time. Response
            only.
          type: number
        id:
          description: ID of the Subscription Item object. String starting with subi_.
          type: string
          example: subi_e5dbbf84c68e5bb7db761625158d4262
        metadata:
          description: A JSON object defined by the client.
          type: object
          example: '{"merchant_defined": true }'
        plan:
          $ref: '#/components/schemas/Plan'
        quantity:
          description: The number of units of the service defined in the plan. Integer.
            This number can be updated during the billing cycle using Update Subscription
            or Update Subscription Item.
          type: number
        subscription_id:
          description: ID of the subscription that this item belongs to. String starting with sub_.
          type: string
          nullable: true
          example: sub_0de9c79c1e2beee09499dc8220493d5
      required:
        - id
        - created
        - metadata
        - plan
        - quantity
      type: object
    TransactionFee:
      description: Describes the fee for processing the transaction.
      properties:
        calc_type:
          description: "Specifies how the fee is calculated. One of the following:\
            \ \n* net - The fee is deducted from the amount paid. \nFor example, in\
            \ a payout of $100 with a fee of 5%, the recipient receives $95.00 and\
            \ the $5.00 fee goes to the client wallet. \n* gross - The fee is charged\
            \ on top of the amount paid. \nFor example, for a transaction of $100\
            \ with a fee of 5%, the sender pays $105.00. The recipient receives $100.00\
            \ and the $5.00 fee goes to the client wallet.\n"
          example: gross
          type: string
        fee_type:
          description: "One of the following: \npercentage - A percentage of the transaction\
            \ amount. \nFor example, 5 percent is represented by value=5. absolute\
            \ - A fixed amount\n"
          example: absolute
          type: string
        value:
          description: The amount of the fee. Decimal, including the correct number
            of decimal places for the currency exponent, as defined in ISO 2417:2015.
            If the amount is a whole number, use an integer and not a decimal.
          example: 2
          type: number
      type: object
    Transfer:
      type: object
      properties:
        amount:
          description: Amount of the transfer. Decimal.
          type: number
        created_at:
          description: Time the transaction was made, in Unix time.
          type: number
        currency_code:
          description: Three-letter ISO 4217 code for the currency used in the amount field.
          type: string
        destination_ewallet_id:
          description: ID of the wallet receiving the money. String starting with ewallet_. Response only.
          type: string
        destination_phone_number:
          description: Phone number of the owner of the wallet receiving the money, in E.164 format.
          type: string
        destination_transaction_id:
          description: ID of the transaction with regard to the destination. String starting with wt_.
          type: string
        id:
          description: ID of the transaction. String starting with wt_ or UUID.
          type: string
        metadata:
          description: A JSON object defined by the client.
          type: object
        response_metadata:
          description: Metadata created with Set Transfer Response. Response only.
          type: object
        source_ewallet_id:
          description: ID of the wallet sending the money. String starting with ewallet_. Response only.
          type: string
        source_transaction_id:
          description: ID of the transaction with regard to the source. String starting with wt_.
          type: string
        status:
          description: < Status of the transaction.
            CAN - Canceled. The transferor canceled the transfer.
            CLO - Closed. The transferee accepted the funds.
            DEC - Declined. The transferee rejected the transfer.
            EXP - Expired. The transferee did not respond before the transfer expired.
            HLD - Hold. Rapyd Protect is putting this transfer on hold and reviewing it.
            PEN - Pending. Waiting for the transferee to accept.
            REJ - Rejected. Rapyd Protect has rejected this transfer.
          type: string
          enum:
            - CAN
            - CLO
            - DEC
            - EXP
            - HLD
            - PEN
            - REJ
        transfer_response_at:
          description: Time of the Set Transfer Response operation, in Unix time. Read-only.
          type: number
        expiration:
          description: Determines the day the transfer expires, in Unix time. Acceptance of the transfer must occur before the start of this day. Default is 14 days after creation of the transfer.
          type: number
    Status:
      properties:
        error_code:
          description: Error code of the API request.
          example: ''
          type: string
        message:
          description: Description about the API.
          example: ''
          type: string
        operation_id:
          description: Unique identifier to track the request.
          example: 0fd8809c-ed02-4862-9a79-507b9528ac23
          type: string
        response_code:
          description: Response code of the API.
          example: ''
          type: string
        status:
          description: Status of the api indicating success or failure.
          example: SUCCESS
          type: string
      type: object
    Webhook:
      properties:
        token:
          description: ID of the webhook. String starting with wh_.
          type: string
        type:
          description: Internal name of the webhook type.
          type: string
        data:
          description: The data section of the webhook itself.
          type: object
        attempts:
          items:
            $ref: '#/components/schemas/AttemptItem'
          type: array
        status:
          description: 'The status of the webhook. One of the following values: *NEW - The webhook was created and has not yet been sent successfully. *RET - The webhook was resent. *CLO - The webhook was sent successfully. *ERR - Attempts were made to send the webhook, but the maximum number of retries was reached. The automatic retry process failed. The webhook was not sent.'
          type: string
        last_attempt_at:
          description: Timestamp of the last attempt at sending the webhook. Unix time.
          type: number
        created_at:
          description: Timestamp for the creation of the webhook. Unix time.
          type: number
        next_attempt_at:
          description: Timestamp of the next attempt at sending the webhook. Unix time.
          type: number
      type: object
    SubscriptionRetryOptions:
      properties:
        max_retries:
          description: ""
          type: number
        retry_schedule:
          description: ""
          enum:
            - fixed
          type: string
        retry_interval:
          description: ""
          enum:
            - days
            - weeks
          type: string
        retry_interval_count:
          description: ""
          type: number
      type: object